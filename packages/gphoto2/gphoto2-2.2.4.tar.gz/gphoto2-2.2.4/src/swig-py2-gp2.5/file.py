# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _file
else:
    import _file

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _file.SWIG_PyInstanceMethod_New
_swig_new_static_method = _file.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import gphoto2.abilities_list
import gphoto2.camera
import gphoto2.context
import gphoto2.filesys
import gphoto2.list
import gphoto2.port_info_list
import gphoto2.port_log
import gphoto2.result
import gphoto2.version
import gphoto2.widget
gp_file_open = _file.gp_file_open
class CameraFile(object):
    r"""The internals of the CameraFile struct are private."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    set_name = _swig_new_instance_method(_file.CameraFile_set_name)
    get_name = _swig_new_instance_method(_file.CameraFile_get_name)
    set_mime_type = _swig_new_instance_method(_file.CameraFile_set_mime_type)
    get_mime_type = _swig_new_instance_method(_file.CameraFile_get_mime_type)
    set_mtime = _swig_new_instance_method(_file.CameraFile_set_mtime)
    get_mtime = _swig_new_instance_method(_file.CameraFile_get_mtime)
    detect_mime_type = _swig_new_instance_method(_file.CameraFile_detect_mime_type)
    adjust_name_for_mime_type = _swig_new_instance_method(_file.CameraFile_adjust_name_for_mime_type)
    get_name_by_type = _swig_new_instance_method(_file.CameraFile_get_name_by_type)
    set_data_and_size = _swig_new_instance_method(_file.CameraFile_set_data_and_size)
    get_data_and_size = _swig_new_instance_method(_file.CameraFile_get_data_and_size)
    save = _swig_new_instance_method(_file.CameraFile_save)
    clean = _swig_new_instance_method(_file.CameraFile_clean)
    copy = _swig_new_instance_method(_file.CameraFile_copy)
    append = _swig_new_instance_method(_file.CameraFile_append)

    def __init__(self):
        r"""
        __init__(self) -> CameraFile
        The internals of the CameraFile struct are private.
        """
        _file.CameraFile_swiginit(self, _file.new_CameraFile())
    __swig_destroy__ = _file.delete_CameraFile

# Register CameraFile in _file:
_file.CameraFile_swigregister(CameraFile)

GP_MIME_TXT = _file.GP_MIME_TXT

GP_MIME_WAV = _file.GP_MIME_WAV

GP_MIME_RAW = _file.GP_MIME_RAW

GP_MIME_PNG = _file.GP_MIME_PNG

GP_MIME_PGM = _file.GP_MIME_PGM

GP_MIME_PPM = _file.GP_MIME_PPM

GP_MIME_PNM = _file.GP_MIME_PNM

GP_MIME_JPEG = _file.GP_MIME_JPEG

GP_MIME_TIFF = _file.GP_MIME_TIFF

GP_MIME_BMP = _file.GP_MIME_BMP

GP_MIME_QUICKTIME = _file.GP_MIME_QUICKTIME

GP_MIME_AVI = _file.GP_MIME_AVI

GP_MIME_CRW = _file.GP_MIME_CRW

GP_MIME_CR2 = _file.GP_MIME_CR2

GP_MIME_CR3 = _file.GP_MIME_CR3

GP_MIME_NEF = _file.GP_MIME_NEF

GP_MIME_UNKNOWN = _file.GP_MIME_UNKNOWN

GP_MIME_EXIF = _file.GP_MIME_EXIF

GP_MIME_MP3 = _file.GP_MIME_MP3

GP_MIME_OGG = _file.GP_MIME_OGG

GP_MIME_WMA = _file.GP_MIME_WMA

GP_MIME_ASF = _file.GP_MIME_ASF

GP_MIME_MPEG = _file.GP_MIME_MPEG

GP_MIME_AVCHD = _file.GP_MIME_AVCHD

GP_MIME_RW2 = _file.GP_MIME_RW2

GP_MIME_ARW = _file.GP_MIME_ARW

GP_FILE_TYPE_PREVIEW = _file.GP_FILE_TYPE_PREVIEW

GP_FILE_TYPE_NORMAL = _file.GP_FILE_TYPE_NORMAL

GP_FILE_TYPE_RAW = _file.GP_FILE_TYPE_RAW

GP_FILE_TYPE_AUDIO = _file.GP_FILE_TYPE_AUDIO

GP_FILE_TYPE_EXIF = _file.GP_FILE_TYPE_EXIF

GP_FILE_TYPE_METADATA = _file.GP_FILE_TYPE_METADATA

GP_FILE_ACCESSTYPE_MEMORY = _file.GP_FILE_ACCESSTYPE_MEMORY

GP_FILE_ACCESSTYPE_FD = _file.GP_FILE_ACCESSTYPE_FD

GP_FILE_ACCESSTYPE_HANDLER = _file.GP_FILE_ACCESSTYPE_HANDLER

gp_file_new = _file.gp_file_new
gp_file_new_from_fd = _file.gp_file_new_from_fd
gp_file_new_from_handler = _file.gp_file_new_from_handler
gp_file_set_name = _file.gp_file_set_name
gp_file_get_name = _file.gp_file_get_name
gp_file_set_mime_type = _file.gp_file_set_mime_type
gp_file_get_mime_type = _file.gp_file_get_mime_type
gp_file_set_mtime = _file.gp_file_set_mtime
gp_file_get_mtime = _file.gp_file_get_mtime
gp_file_detect_mime_type = _file.gp_file_detect_mime_type
gp_file_adjust_name_for_mime_type = _file.gp_file_adjust_name_for_mime_type
gp_file_get_name_by_type = _file.gp_file_get_name_by_type
gp_file_set_data_and_size = _file.gp_file_set_data_and_size
gp_file_get_data_and_size = _file.gp_file_get_data_and_size
gp_file_save = _file.gp_file_save
gp_file_clean = _file.gp_file_clean
gp_file_copy = _file.gp_file_copy
gp_file_append = _file.gp_file_append


