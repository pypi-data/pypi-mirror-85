Metadata-Version: 2.1
Name: TOPSIS-Prajjwal-101803111
Version: 1.0.1
Summary: Topsis Calculator
Home-page: UNKNOWN
Author: Prajjwal Upadhyay
Author-email: prajjwal.upadhyay.12345@gmail.com
License: UNKNOWN
Description: # TOPSIS-Python
        
        
        Submitted By: **PRAJJWAL UPADHYAY**
        
        
        <br>
        
        ***
        
        ## What is TOPSIS
        
        **T**echnique for **O**rder **P**reference by **S**imilarity to **I**deal
        **S**olution (TOPSIS) originated in the 1980s as a multi-criteria decision
        making method. TOPSIS chooses the alternative of shortest Euclidean distance
        from the ideal solution, and greatest distance from the negative-ideal
        solution. More details at [wikipedia](https://en.wikipedia.org/wiki/TOPSIS).
        
        <br>
        
        ## How to use this package:
        
        TOPSIS-prajjwal-101803111  can be run as in the following example:
        
        
        
        ### In Command Prompt
        ```
        >> pip install TOPSIS-Prajjwal--101803111==1.0.1
        ```
        >> python
        >>>from topsis_gen.topsis_cal import topsis
        >>>topsis("data.csv","1,1,1,2","+,+,-,+")
        
        <br>
        
        
        ## Sample dataset
        
        The decision matrix (`a`) should be constructed with each row representing a Model alternative, and each column representing a criterion like Accuracy, R<sup>2</sup>, Root Mean Squared Error, Correlation, and many more.
        
        Model | Correlation | R<sup>2</sup> | RMSE | Accuracy
        ------------ | ------------- | ------------ | ------------- | ------------
        M1 |	0.79 | 0.62	| 1.25 | 60.89
        M2 |  0.66 | 0.44	| 2.89 | 63.07
        M3 |	0.56 | 0.31	| 1.57 | 62.87
        M4 |	0.82 | 0.67	| 2.68 | 70.19
        M5 |	0.75 | 0.56	| 1.3	 | 80.39
        
        Weights (`w`) is not already normalised will be normalised later in the code.
        
        Information of benefit positive(+) or negative(-) impact criteria should be provided in `I`.
        
        <br>
        
        ## Output
        
        ```
        Model   Score    Rank
        -----  --------  ----
          1    0.639133    2
          2    0.212592    5
          3    0.407846    4
          4    0.519153    3
          5    0.828267    1
        ```
        <br>
        The rankings are displayed in the form of a table using a package 'tabulate', with the 1st rank offering us the best decision, and last rank offering the worst decision making, according to TOPSIS method.
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
