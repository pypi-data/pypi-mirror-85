# -*- coding: utf-8 -*-
# @Author: yongfanmao
# @Date:   2020-10-30 14:00:33
# @E-mail: maoyongfan@163.com
# @Last Modified by:   yongfanmao
# @Last Modified time: 2020-10-30 14:22:04


# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import soa_invoke_pb2 as soa__invoke__pb2


class SoaInvokerServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.call = channel.unary_unary(
        '/SoaInvokerService/call',
        request_serializer=soa__invoke__pb2.SoaInvokerRequest.SerializeToString,
        response_deserializer=soa__invoke__pb2.SoaInvokerResponse.FromString,
        )
    self.ping = channel.unary_unary(
        '/SoaInvokerService/ping',
        request_serializer=soa__invoke__pb2.SoaHealthCheckRequest.SerializeToString,
        response_deserializer=soa__invoke__pb2.SoaHealthCheckResponse.FromString,
        )


class SoaInvokerServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def call(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ping(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SoaInvokerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'call': grpc.unary_unary_rpc_method_handler(
          servicer.call,
          request_deserializer=soa__invoke__pb2.SoaInvokerRequest.FromString,
          response_serializer=soa__invoke__pb2.SoaInvokerResponse.SerializeToString,
      ),
      'ping': grpc.unary_unary_rpc_method_handler(
          servicer.ping,
          request_deserializer=soa__invoke__pb2.SoaHealthCheckRequest.FromString,
          response_serializer=soa__invoke__pb2.SoaHealthCheckResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'SoaInvokerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


