openapi: 3.0.0
info:
  description: "RPC API to manage the execution of Resource transition and operations with the driver's target technology"
  version: "1.0.0"
  title: Resource Driver
servers:
  - url: /api/driver
tags:
  - name: lifecycle
    description: Lifecycle Transitions and Operations
  - name: references
    description: Finding external Resources
paths:
  /references/find:
    post:
      tags:
        - references
      summary: Find an external Resource
      description: >-
        This API is used by Brent to handle finding external Resources it does not manage directly.
        If the Resource can be found, then the associatedTopology and property outputs should be returned. If the Resource cannot be found, an empty result should be returned instead.
      operationId: .find_reference
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FindReferenceRequest"
            examples:
              example:
                $ref: '#/components/examples/ExampleFindReferenceRequest'
      responses:
        "200":
          description: Request handled. Check body to see if a Resource has been found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FindReferenceResponse"
              examples:
                found-example:
                  $ref: "#/components/examples/ExampleFindReferenceResponse"
                not-found-example:
                  $ref: "#/components/examples/ExampleFindReferenceNotFoundResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                example:
                  $ref: "#/components/examples/ExampleFindReferenceErrorResponse"
  /lifecycle/execute:
    post:
      tags:
        - lifecycle
      summary: Execute Lifecycle Transition/Operation
      description: >-
        Execute Lifecycle Transition/Operation. If accepted, a response should be returned immediately with a unique requestId used to identify messages for this process later.
        The completion of the request (regardless of whether it was successful or not) should be returned via Kafka (with a message of type LifecycleExecutionAsyncResponse from the schema)
      operationId: .execute_lifecycle
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LifecycleExecutionRequest"
            examples:
              example:
                $ref: "#/components/examples/ExampleLifecycleExecutionRequest"
      responses:
        "202":
          description: Request accepted (async examples shown for information but they will never be returned via this API, they are returned on Kafka topics instead)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LifecycleExecutionAcceptedResponse"
              examples:
                response:
                  $ref: "#/components/examples/ExampleLifecycleExecutionAcceptedResponse"
                async-response:
                  $ref: "#/components/examples/ExampleLifecycleExecutionAsyncResponse"
                failed-async-reponse:
                  $ref: "#/components/examples/ExampleFailedLifecycleExecutionAsyncResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                example:
                  $ref: "#/components/examples/ExampleExecuteErrorResponse"
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        localizedMessage:
          type: string
          description: Summary of the error that occurred
        status:
          type: integer
          description: HTTP status code
    LifecycleExecutionRequest:
      type: object
      properties:
        lifecycleName:
          type: string
          description: Name of the transition or operation to execute
        driverFiles:
          type: string
          format: byte
          description: Base64 encoded zipped contents of the directory intended for this driver from the Resource package
        systemProperties:
          allOf:
          - $ref: "#/components/schemas/SystemProperties"
          description: properties generated by LM for this Resource
        resourceProperties:
          allOf:
          - $ref: "#/components/schemas/Properties"
          description: property values of the Resource (includes any output values returned by previous transition/operations, even if the output property is not on the Resource descriptor)
        requestProperties:
          allOf:
          - $ref: "#/components/schemas/Properties"
          description: properties of this request
        associatedTopology:
          description: External elements associated to the Resource in any previous transition/operation requests
          allOf:
          - $ref: "#/components/schemas/AssociatedTopology"
        deploymentLocation:
          $ref: "#/components/schemas/DeploymentLocation"
      required:
        - lifecycleName
        - systemProperties
        - deploymentLocation
        - driverFiles
    AssociatedTopology:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/AssociatedTopologyEntry"
    AssociatedTopologyEntry:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
    Properties:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/PropValueAndType"
    SystemProperties:
      type: object
      properties:
        resourceId:
          description: ID associated with the Resource undergoing this lifecycle request
          allOf:
          - $ref: "#/components/schemas/PropValueAndType"
        resourceName:
          description: Name associated with the Resource undergoing this lifecycle request
          allOf:
          - $ref: "#/components/schemas/PropValueAndType"
        requestId:
          description: ID of the Resource Manager request associated with this Resource
          allOf:
          - $ref: "#/components/schemas/PropValueAndType"
        resourceManagerId:
          description: ID of the Resource Manager managing this Resource
          allOf:
          - $ref: "#/components/schemas/PropValueAndType"
        deploymentLocation:
          description: ID of the Deployment Location this Resource is deployed in
          allOf:
          - $ref: "#/components/schemas/PropValueAndType"
        metricKey:
          description: ID for the metrics published by this Resource
          allOf:
          - $ref: "#/components/schemas/PropValueAndType"
        resourceType:
          description: Type of this Resource in the format resource::<name>::<version>
          allOf:
          - $ref: "#/components/schemas/PropValueAndType"
      additionalProperties:
        $ref: "#/components/schemas/PropValueAndType"
    PropValueAndType:
      type: object
      properties:
        value:
          type: string
        type:
          type: string
    LifecycleExecutionAcceptedResponse:
      type: object
      properties:
        requestId:
          type: string
          description: ID associated to the request handling the execution
        associatedTopology:
          description: External elements associated to the Resource during the acceptance of this request
          allOf:
          - $ref: "#/components/schemas/AssociatedTopology"
      required:
        - requestId
    LifecycleExecutionAsyncResponse:
      type: object
      properties:
        requestId:
          type: string
          description: ID of the request
        status:
          $ref: "#/components/schemas/LifecycleTaskStatus"
        failureDetails:
          $ref: "#/components/schemas/FailureDetails"
        outputs:
          type: object
          description: Output values to assign to properties of the Resource
        associatedTopology:
          description: External elements associated to the Resource during the handling of this request
          allOf:
          - $ref: "#/components/schemas/AssociatedTopology"
    DeploymentLocation:
      type: object
      description: A Deployment Location to manage Resources in
      properties:
        name:
          type: string
          description: Name of the deployment location
        type:
          type: string
          description: Type of location (Infrastructure Type)
        properties:
          type: object
          description: Properties used to provide access to the location
      required:
        - name
    LifecycleTaskStatus:
      type: string
      description: Status of the Lifecycle execution
      enum:
        - IN_PROGRESS
        - COMPLETE
        - FAILED
    FailureDetails:
      type: object
      description: Details of the failure (if the status is FAILED)
      properties:
        failureCode:
          $ref: "#/components/schemas/FailureCode"
        description:
          type: string
          description: Summary of the failure
    FailureCode:
      type: string
      description: Code assigned to the type of error
      enum:
        - RESOURCE_ALREADY_EXISTS
        - RESOURCE_NOT_FOUND
        - INFRASTRUCTURE_ERROR
        - INSUFFICIENT_CAPACITY
        - INTERNAL_ERROR
    FindReferenceRequest:
      type: object
      properties:
        instanceName:
          type: string
          description: name used to filter the Resource to find
        driverFiles:
          type: string
          format: byte
          description: Base64 encoded zipped contents of the directory intended for this driver from the Resource package
        deploymentLocation:
          $ref: "#/components/schemas/DeploymentLocation"
      required:
        - instanceName
        - driverFiles
        - deploymentLocation
    FindReferenceResponse:
      type: object
      properties:
        result:
          description: Details of the result, if found. This will be empty if the Resource was not found
          type: object
          properties:
            resourceId:
              description: Unique ID to assign to this Resource
            associatedTopology:
              description: Internal resources associated to the Resource
              allOf:
              - $ref: "#/components/schemas/AssociatedTopology"
            outputs:
              type: object
              description: Output values to assign to properties of the Resource
  examples:
    ExampleExecuteErrorResponse:
      value:
        localizedMessage: No lifecycle script with name "Start"
        status: 400
    ExampleFindReferenceErrorResponse:
      value:
        localizedMessage: Template included in request was invalid
        status: 400
    ExampleLifecycleExecutionRequest:
      value:
        lifecycleName: Start
        driverFiles:
        requestProperties: {}
        associatedTopology:
          InfrastructureStack:
            type: Openstack
            id: 1ebc1231-3580-4044-a3e6-3ad745099c1e
        systemProperties:
          resourceId: be3870d2-891c-487e-9736-ca19e4741cf4
          requestId: a44ac9db-1625-4a9b-87c5-6e77bd88c08a
          resourceManagerId: brent
          deploymentLocation: TestLocation
          resourceType: resource::helloworld::1.0
        resourceProperties:
          propA: valueA
          propB: valueB
        deploymentLocation:
          name: Example
          properties: {}
          type: Openstack
    ExampleLifecycleExecutionAcceptedResponse:
      value:
        requestId: 2b84e4da-663c-41a5-a637-8695fcec314f
        associatedTopology:
          InfrastructureStack:
            type: Openstack
            id: 1ebc1231-3580-4044-a3e6-3ad745099c1e
    ExampleLifecycleExecutionAsyncResponse:
      value:
        requestId: 2b84e4da-663c-41a5-a637-8695fcec314f
        status: COMPLETE
        outputs:
          propA: valueA
          propB: valueB
    ExampleFailedLifecycleExecutionAsyncResponse:
      value:
        requestId: 2b84e4da-663c-41a5-a637-8695fcec314f
        status: FAILED
        failureDetails:
          failureCode: INTERNAL_ERROR
          description: There was an error
    ExampleFindReferenceRequest:
      value:
        instanceName: NetworkA
        driverFiles: {}
        deploymentLocation:
          name: Example
          properties: {}
          type: Openstack
    ExampleFindReferenceResponse:
      value:
        result:
          resourceId: 1ebc1231-3580-4044-a3e6-3ad745099c1e
          associatedTopology:
            InfrastructureStack:
              type: Openstack
              id: 1ebc1231-3580-4044-a3e6-3ad745099c1e
          outputs:
            propA: valueA
            propB: valueB
    ExampleFindReferenceNotFoundResponse:
      value:
        result: null