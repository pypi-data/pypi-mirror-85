.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "youtube\-dlc" "1" "" "" ""
.hy
.SH NAME
.PP
youtube\-dl \- download videos from youtube.com or other video platforms
.SH SYNOPSIS
.PP
\f[B]youtube\-dlc\f[] [OPTIONS] URL [URL...]
.SH DESCRIPTION
.PP
\f[B]youtube\-dlc\f[] is a command\-line program to download videos from
YouTube.com and a few more sites.
It requires the Python interpreter, version 2.6, 2.7, or 3.2+, and it is
not platform specific.
It should work on your Unix box, on Windows or on macOS.
It is released to the public domain, which means you can modify it,
redistribute it or use it however you like.
.SH OPTIONS
.TP
.B \-h, \-\-help
Print this help text and exit
.RS
.RE
.TP
.B \-\-version
Print program version and exit
.RS
.RE
.TP
.B \-U, \-\-update
Update this program to latest version.
Make sure that you have sufficient permissions (run with sudo if needed)
.RS
.RE
.TP
.B \-i, \-\-ignore\-errors
Continue on download errors, for example to skip unavailable videos in a
playlist
.RS
.RE
.TP
.B \-\-abort\-on\-error
Abort downloading of further videos (in the playlist or the command
line) if an error occurs
.RS
.RE
.TP
.B \-\-dump\-user\-agent
Display the current browser identification
.RS
.RE
.TP
.B \-\-list\-extractors
List all supported extractors
.RS
.RE
.TP
.B \-\-extractor\-descriptions
Output descriptions of all supported extractors
.RS
.RE
.TP
.B \-\-force\-generic\-extractor
Force extraction to use the generic extractor
.RS
.RE
.TP
.B \-\-default\-search \f[I]PREFIX\f[]
Use this prefix for unqualified URLs.
For example "gvsearch2:" downloads two videos from google videos for
youtube\-dlc "large apple".
Use the value "auto" to let youtube\-dlc guess ("auto_warning" to emit a
warning when guessing).
"error" just throws an error.
The default value "fixup_error" repairs broken URLs, but emits an error
if this is not possible instead of searching.
.RS
.RE
.TP
.B \-\-ignore\-config
Do not read configuration files.
When given in the global configuration file /etc/youtube\-dlc.conf: Do
not read the user configuration in ~/.config/youtube\- dlc/config
(%APPDATA%/youtube\- dlc/config.txt on Windows)
.RS
.RE
.TP
.B \-\-config\-location \f[I]PATH\f[]
Location of the configuration file; either the path to the config or its
containing directory.
.RS
.RE
.TP
.B \-\-flat\-playlist
Do not extract the videos of a playlist, only list them.
.RS
.RE
.TP
.B \-\-mark\-watched
Mark videos watched (YouTube only)
.RS
.RE
.TP
.B \-\-no\-mark\-watched
Do not mark videos watched (YouTube only)
.RS
.RE
.TP
.B \-\-no\-color
Do not emit color codes in output
.RS
.RE
.SS Network Options:
.TP
.B \-\-proxy \f[I]URL\f[]
Use the specified HTTP/HTTPS/SOCKS proxy.
To enable SOCKS proxy, specify a proper scheme.
For example socks5://127.0.0.1:1080/.
Pass in an empty string (\-\-proxy "") for direct connection
.RS
.RE
.TP
.B \-\-socket\-timeout \f[I]SECONDS\f[]
Time to wait before giving up, in seconds
.RS
.RE
.TP
.B \-\-source\-address \f[I]IP\f[]
Client\-side IP address to bind to
.RS
.RE
.TP
.B \-4, \-\-force\-ipv4
Make all connections via IPv4
.RS
.RE
.TP
.B \-6, \-\-force\-ipv6
Make all connections via IPv6
.RS
.RE
.SS Geo Restriction:
.TP
.B \-\-geo\-verification\-proxy \f[I]URL\f[]
Use this proxy to verify the IP address for some geo\-restricted sites.
The default proxy specified by \-\-proxy (or none, if the option is not
present) is used for the actual downloading.
.RS
.RE
.TP
.B \-\-geo\-bypass
Bypass geographic restriction via faking X\-Forwarded\-For HTTP header
.RS
.RE
.TP
.B \-\-no\-geo\-bypass
Do not bypass geographic restriction via faking X\-Forwarded\-For HTTP
header
.RS
.RE
.TP
.B \-\-geo\-bypass\-country \f[I]CODE\f[]
Force bypass geographic restriction with explicitly provided two\-letter
ISO 3166\-2 country code
.RS
.RE
.TP
.B \-\-geo\-bypass\-ip\-block \f[I]IP_BLOCK\f[]
Force bypass geographic restriction with explicitly provided IP block in
CIDR notation
.RS
.RE
.SS Video Selection:
.TP
.B \-\-playlist\-start \f[I]NUMBER\f[]
Playlist video to start at (default is 1)
.RS
.RE
.TP
.B \-\-playlist\-end \f[I]NUMBER\f[]
Playlist video to end at (default is last)
.RS
.RE
.TP
.B \-\-playlist\-items \f[I]ITEM_SPEC\f[]
Playlist video items to download.
Specify indices of the videos in the playlist separated by commas like:
"\-\-playlist\-items 1,2,5,8" if you want to download videos indexed 1,
2, 5, 8 in the playlist.
You can specify range: "\-\-playlist\-items 1\-3,7,10\-13", it will
download the videos at index 1, 2, 3, 7, 10, 11, 12 and 13.
.RS
.RE
.TP
.B \-\-match\-title \f[I]REGEX\f[]
Download only matching titles (regex or caseless sub\-string)
.RS
.RE
.TP
.B \-\-reject\-title \f[I]REGEX\f[]
Skip download for matching titles (regex or caseless sub\-string)
.RS
.RE
.TP
.B \-\-max\-downloads \f[I]NUMBER\f[]
Abort after downloading NUMBER files
.RS
.RE
.TP
.B \-\-min\-filesize \f[I]SIZE\f[]
Do not download any videos smaller than SIZE (e.g.
50k or 44.6m)
.RS
.RE
.TP
.B \-\-max\-filesize \f[I]SIZE\f[]
Do not download any videos larger than SIZE (e.g.
50k or 44.6m)
.RS
.RE
.TP
.B \-\-date \f[I]DATE\f[]
Download only videos uploaded in this date
.RS
.RE
.TP
.B \-\-datebefore \f[I]DATE\f[]
Download only videos uploaded on or before this date (i.e.
inclusive)
.RS
.RE
.TP
.B \-\-dateafter \f[I]DATE\f[]
Download only videos uploaded on or after this date (i.e.
inclusive)
.RS
.RE
.TP
.B \-\-min\-views \f[I]COUNT\f[]
Do not download any videos with less than COUNT views
.RS
.RE
.TP
.B \-\-max\-views \f[I]COUNT\f[]
Do not download any videos with more than COUNT views
.RS
.RE
.TP
.B \-\-match\-filter \f[I]FILTER\f[]
Generic video filter.
Specify any key (see the "OUTPUT TEMPLATE" for a list of available keys)
to match if the key is present, !key to check if the key is not present,
key > NUMBER (like "comment_count > 12", also works with >=, <, <=, !=,
=) to compare against a number, key = \[aq]LITERAL\[aq] (like "uploader
= \[aq]Mike Smith\[aq]", also works with !=) to match against a string
literal and & to require multiple matches.
Values which are not known are excluded unless you put a question mark
(?) after the operator.
For example, to only match videos that have been liked more than 100
times and disliked less than 50 times (or the dislike functionality is
not available at the given service), but who also have a description,
use \-\-match\-filter "like_count > 100 & dislike_count <?
50 & description" .
.RS
.RE
.TP
.B \-\-no\-playlist
Download only the video, if the URL refers to a video and a playlist.
.RS
.RE
.TP
.B \-\-yes\-playlist
Download the playlist, if the URL refers to a video and a playlist.
.RS
.RE
.TP
.B \-\-age\-limit \f[I]YEARS\f[]
Download only videos suitable for the given age
.RS
.RE
.TP
.B \-\-download\-archive \f[I]FILE\f[]
Download only videos not listed in the archive file.
Record the IDs of all downloaded videos in it.
.RS
.RE
.TP
.B \-\-include\-ads
Download advertisements as well (experimental)
.RS
.RE
.SS Download Options:
.TP
.B \-r, \-\-limit\-rate \f[I]RATE\f[]
Maximum download rate in bytes per second (e.g.
50K or 4.2M)
.RS
.RE
.TP
.B \-R, \-\-retries \f[I]RETRIES\f[]
Number of retries (default is 10), or "infinite".
.RS
.RE
.TP
.B \-\-fragment\-retries \f[I]RETRIES\f[]
Number of retries for a fragment (default is 10), or "infinite" (DASH,
hlsnative and ISM)
.RS
.RE
.TP
.B \-\-skip\-unavailable\-fragments
Skip unavailable fragments (DASH, hlsnative and ISM)
.RS
.RE
.TP
.B \-\-abort\-on\-unavailable\-fragment
Abort downloading when some fragment is not available
.RS
.RE
.TP
.B \-\-keep\-fragments
Keep downloaded fragments on disk after downloading is finished;
fragments are erased by default
.RS
.RE
.TP
.B \-\-buffer\-size \f[I]SIZE\f[]
Size of download buffer (e.g.
1024 or 16K) (default is 1024)
.RS
.RE
.TP
.B \-\-no\-resize\-buffer
Do not automatically adjust the buffer size.
By default, the buffer size is automatically resized from an initial
value of SIZE.
.RS
.RE
.TP
.B \-\-http\-chunk\-size \f[I]SIZE\f[]
Size of a chunk for chunk\-based HTTP downloading (e.g.
10485760 or 10M) (default is disabled).
May be useful for bypassing bandwidth throttling imposed by a webserver
(experimental)
.RS
.RE
.TP
.B \-\-playlist\-reverse
Download playlist videos in reverse order
.RS
.RE
.TP
.B \-\-playlist\-random
Download playlist videos in random order
.RS
.RE
.TP
.B \-\-xattr\-set\-filesize
Set file xattribute ytdl.filesize with expected file size
.RS
.RE
.TP
.B \-\-hls\-prefer\-native
Use the native HLS downloader instead of ffmpeg
.RS
.RE
.TP
.B \-\-hls\-prefer\-ffmpeg
Use ffmpeg instead of the native HLS downloader
.RS
.RE
.TP
.B \-\-hls\-use\-mpegts
Use the mpegts container for HLS videos, allowing to play the video
while downloading (some players may not be able to play it)
.RS
.RE
.TP
.B \-\-external\-downloader \f[I]COMMAND\f[]
Use the specified external downloader.
Currently supports aria2c,avconv,axel,curl,ffmpeg,httpie,wget
.RS
.RE
.TP
.B \-\-external\-downloader\-args \f[I]ARGS\f[]
Give these arguments to the external downloader
.RS
.RE
.SS Filesystem Options:
.TP
.B \-a, \-\-batch\-file \f[I]FILE\f[]
File containing URLs to download (\[aq]\-\[aq] for stdin), one URL per
line.
Lines starting with \[aq]#\[aq], \[aq];\[aq] or \[aq]]\[aq] are
considered as comments and ignored.
.RS
.RE
.TP
.B \-\-id
Use only video ID in file name
.RS
.RE
.TP
.B \-o, \-\-output \f[I]TEMPLATE\f[]
Output filename template, see the "OUTPUT TEMPLATE" for all the info
.RS
.RE
.TP
.B \-\-autonumber\-start \f[I]NUMBER\f[]
Specify the start value for %(autonumber)s (default is 1)
.RS
.RE
.TP
.B \-\-restrict\-filenames
Restrict filenames to only ASCII characters, and avoid "&" and spaces in
filenames
.RS
.RE
.TP
.B \-w, \-\-no\-overwrites
Do not overwrite files
.RS
.RE
.TP
.B \-c, \-\-continue
Force resume of partially downloaded files.
By default, youtube\-dlc will resume downloads if possible.
.RS
.RE
.TP
.B \-\-no\-continue
Do not resume partially downloaded files (restart from beginning)
.RS
.RE
.TP
.B \-\-no\-part
Do not use .part files \- write directly into output file
.RS
.RE
.TP
.B \-\-no\-mtime
Do not use the Last\-modified header to set the file modification time
.RS
.RE
.TP
.B \-\-write\-description
Write video description to a .description file
.RS
.RE
.TP
.B \-\-write\-info\-json
Write video metadata to a .info.json file
.RS
.RE
.TP
.B \-\-write\-annotations
Write video annotations to a .annotations.xml file
.RS
.RE
.TP
.B \-\-load\-info\-json \f[I]FILE\f[]
JSON file containing the video information (created with the
"\-\-write\-info\-json" option)
.RS
.RE
.TP
.B \-\-cookies \f[I]FILE\f[]
File to read cookies from and dump cookie jar in
.RS
.RE
.TP
.B \-\-cache\-dir \f[I]DIR\f[]
Location in the filesystem where youtube\- dlc can store some downloaded
information permanently.
By default $XDG_CACHE_HOME/youtube\-dlc or ~/.cache/youtube\-dlc .
At the moment, only YouTube player files (for videos with obfuscated
signatures) are cached, but that may change.
.RS
.RE
.TP
.B \-\-no\-cache\-dir
Disable filesystem caching
.RS
.RE
.TP
.B \-\-rm\-cache\-dir
Delete all filesystem cache files
.RS
.RE
.TP
.B \-\-trim\-file\-name \f[I]None\f[]
Limit the filename length (extension excluded)
.RS
.RE
.SS Thumbnail images:
.TP
.B \-\-write\-thumbnail
Write thumbnail image to disk
.RS
.RE
.TP
.B \-\-write\-all\-thumbnails
Write all thumbnail image formats to disk
.RS
.RE
.TP
.B \-\-list\-thumbnails
Simulate and list all available thumbnail formats
.RS
.RE
.SS Verbosity / Simulation Options:
.TP
.B \-q, \-\-quiet
Activate quiet mode
.RS
.RE
.TP
.B \-\-no\-warnings
Ignore warnings
.RS
.RE
.TP
.B \-s, \-\-simulate
Do not download the video and do not write anything to disk
.RS
.RE
.TP
.B \-\-skip\-download
Do not download the video
.RS
.RE
.TP
.B \-g, \-\-get\-url
Simulate, quiet but print URL
.RS
.RE
.TP
.B \-e, \-\-get\-title
Simulate, quiet but print title
.RS
.RE
.TP
.B \-\-get\-id
Simulate, quiet but print id
.RS
.RE
.TP
.B \-\-get\-thumbnail
Simulate, quiet but print thumbnail URL
.RS
.RE
.TP
.B \-\-get\-description
Simulate, quiet but print video description
.RS
.RE
.TP
.B \-\-get\-duration
Simulate, quiet but print video length
.RS
.RE
.TP
.B \-\-get\-filename
Simulate, quiet but print output filename
.RS
.RE
.TP
.B \-\-get\-format
Simulate, quiet but print output format
.RS
.RE
.TP
.B \-j, \-\-dump\-json
Simulate, quiet but print JSON information.
See the "OUTPUT TEMPLATE" for a description of available keys.
.RS
.RE
.TP
.B \-J, \-\-dump\-single\-json
Simulate, quiet but print JSON information for each command\-line
argument.
If the URL refers to a playlist, dump the whole playlist information in
a single line.
.RS
.RE
.TP
.B \-\-print\-json
Be quiet and print the video information as JSON (video is still being
downloaded).
.RS
.RE
.TP
.B \-\-newline
Output progress bar as new lines
.RS
.RE
.TP
.B \-\-no\-progress
Do not print progress bar
.RS
.RE
.TP
.B \-\-console\-title
Display progress in console titlebar
.RS
.RE
.TP
.B \-v, \-\-verbose
Print various debugging information
.RS
.RE
.TP
.B \-\-dump\-pages
Print downloaded pages encoded using base64 to debug problems (very
verbose)
.RS
.RE
.TP
.B \-\-write\-pages
Write downloaded intermediary pages to files in the current directory to
debug problems
.RS
.RE
.TP
.B \-\-print\-traffic
Display sent and read HTTP traffic
.RS
.RE
.TP
.B \-C, \-\-call\-home
Contact the youtube\-dlc server for debugging
.RS
.RE
.TP
.B \-\-no\-call\-home
Do NOT contact the youtube\-dlc server for debugging
.RS
.RE
.SS Workarounds:
.TP
.B \-\-encoding \f[I]ENCODING\f[]
Force the specified encoding (experimental)
.RS
.RE
.TP
.B \-\-no\-check\-certificate
Suppress HTTPS certificate validation
.RS
.RE
.TP
.B \-\-prefer\-insecure
Use an unencrypted connection to retrieve information about the video.
(Currently supported only for YouTube)
.RS
.RE
.TP
.B \-\-user\-agent \f[I]UA\f[]
Specify a custom user agent
.RS
.RE
.TP
.B \-\-referer \f[I]URL\f[]
Specify a custom referer, use if the video access is restricted to one
domain
.RS
.RE
.TP
.B \-\-add\-header \f[I]FIELD:VALUE\f[]
Specify a custom HTTP header and its value, separated by a colon
\[aq]:\[aq].
You can use this option multiple times
.RS
.RE
.TP
.B \-\-bidi\-workaround
Work around terminals that lack bidirectional text support.
Requires bidiv or fribidi executable in PATH
.RS
.RE
.TP
.B \-\-sleep\-interval \f[I]SECONDS\f[]
Number of seconds to sleep before each download when used alone or a
lower bound of a range for randomized sleep before each download
(minimum possible number of seconds to sleep) when used along with
\-\-max\-sleep\-interval.
.RS
.RE
.TP
.B \-\-max\-sleep\-interval \f[I]SECONDS\f[]
Upper bound of a range for randomized sleep before each download
(maximum possible number of seconds to sleep).
Must only be used along with \-\-min\-sleep\-interval.
.RS
.RE
.TP
.B \-\-sleep\-subtitles \f[I]None\f[]
Enforce sleep interval on subtitles as well
.RS
.RE
.SS Video Format Options:
.TP
.B \-f, \-\-format \f[I]FORMAT\f[]
Video format code, see the "FORMAT SELECTION" for all the info
.RS
.RE
.TP
.B \-\-all\-formats
Download all available video formats
.RS
.RE
.TP
.B \-\-prefer\-free\-formats
Prefer free video formats unless a specific one is requested
.RS
.RE
.TP
.B \-F, \-\-list\-formats
List all available formats of requested videos
.RS
.RE
.TP
.B \-\-youtube\-skip\-dash\-manifest
Do not download the DASH manifests and related data on YouTube videos
.RS
.RE
.TP
.B \-\-youtube\-skip\-hls\-manifest
Do not download the HLS manifests and related data on YouTube videos
.RS
.RE
.TP
.B \-\-merge\-output\-format \f[I]FORMAT\f[]
If a merge is required (e.g.
bestvideo+bestaudio), output to given container format.
One of mkv, mp4, ogg, webm, flv.
Ignored if no merge is required
.RS
.RE
.SS Subtitle Options:
.TP
.B \-\-write\-sub
Write subtitle file
.RS
.RE
.TP
.B \-\-write\-auto\-sub
Write automatically generated subtitle file (YouTube only)
.RS
.RE
.TP
.B \-\-all\-subs
Download all the available subtitles of the video
.RS
.RE
.TP
.B \-\-list\-subs
List all available subtitles for the video
.RS
.RE
.TP
.B \-\-sub\-format \f[I]FORMAT\f[]
Subtitle format, accepts formats preference, for example: "srt" or
"ass/srt/best"
.RS
.RE
.TP
.B \-\-sub\-lang \f[I]LANGS\f[]
Languages of the subtitles to download (optional) separated by commas,
use \-\-list\- subs for available language tags
.RS
.RE
.SS Authentication Options:
.TP
.B \-u, \-\-username \f[I]USERNAME\f[]
Login with this account ID
.RS
.RE
.TP
.B \-p, \-\-password \f[I]PASSWORD\f[]
Account password.
If this option is left out, youtube\-dlc will ask interactively.
.RS
.RE
.TP
.B \-2, \-\-twofactor \f[I]TWOFACTOR\f[]
Two\-factor authentication code
.RS
.RE
.TP
.B \-n, \-\-netrc
Use .netrc authentication data
.RS
.RE
.TP
.B \-\-video\-password \f[I]PASSWORD\f[]
Video password (vimeo, smotri, youku)
.RS
.RE
.SS Adobe Pass Options:
.TP
.B \-\-ap\-mso \f[I]MSO\f[]
Adobe Pass multiple\-system operator (TV provider) identifier, use
\-\-ap\-list\-mso for a list of available MSOs
.RS
.RE
.TP
.B \-\-ap\-username \f[I]USERNAME\f[]
Multiple\-system operator account login
.RS
.RE
.TP
.B \-\-ap\-password \f[I]PASSWORD\f[]
Multiple\-system operator account password.
If this option is left out, youtube\-dlc will ask interactively.
.RS
.RE
.TP
.B \-\-ap\-list\-mso
List all supported multiple\-system operators
.RS
.RE
.SS Post\-processing Options:
.TP
.B \-x, \-\-extract\-audio
Convert video files to audio\-only files (requires ffmpeg or avconv and
ffprobe or avprobe)
.RS
.RE
.TP
.B \-\-audio\-format \f[I]FORMAT\f[]
Specify audio format: "best", "aac", "flac", "mp3", "m4a", "opus",
"vorbis", or "wav"; "best" by default; No effect without \-x
.RS
.RE
.TP
.B \-\-audio\-quality \f[I]QUALITY\f[]
Specify ffmpeg/avconv audio quality, insert a value between 0 (better)
and 9 (worse) for VBR or a specific bitrate like 128K (default 5)
.RS
.RE
.TP
.B \-\-remux\-video \f[I]FORMAT\f[]
Remux the video to another container format if necessary (currently
supported: mp4|mkv, target container format must support video / audio
encoding, remuxing may fail)
.RS
.RE
.TP
.B \-\-recode\-video \f[I]FORMAT\f[]
Encode the video to another format if necessary (currently supported:
mp4|flv|ogg|webm|mkv|avi)
.RS
.RE
.TP
.B \-\-postprocessor\-args \f[I]ARGS\f[]
Give these arguments to the postprocessor
.RS
.RE
.TP
.B \-k, \-\-keep\-video
Keep the video file on disk after the post\- processing; the video is
erased by default
.RS
.RE
.TP
.B \-\-no\-post\-overwrites
Do not overwrite post\-processed files; the post\-processed files are
overwritten by default
.RS
.RE
.TP
.B \-\-embed\-subs
Embed subtitles in the video (only for mp4, webm and mkv videos)
.RS
.RE
.TP
.B \-\-embed\-thumbnail
Embed thumbnail in the audio as cover art
.RS
.RE
.TP
.B \-\-add\-metadata
Write metadata to the video file
.RS
.RE
.TP
.B \-\-metadata\-from\-title \f[I]FORMAT\f[]
Parse additional metadata like song title / artist from the video title.
The format syntax is the same as \-\-output.
Regular expression with named capture groups may also be used.
The parsed parameters replace existing values.
Example: \-\-metadata\-from\- title "%(artist)s \- %(title)s" matches a
title like "Coldplay \- Paradise".
Example (regex): \-\-metadata\-from\-title "(?P.+?) \- (?P
.RS
\&.+)"
.RE
.TP
.B \-\-xattrs
Write metadata to the video file\[aq]s xattrs (using dublin core and xdg
standards)
.RS
.RE
.TP
.B \-\-fixup \f[I]POLICY\f[]
Automatically correct known faults of the file.
One of never (do nothing), warn (only emit a warning), detect_or_warn
(the default; fix file if we can, warn otherwise)
.RS
.RE
.TP
.B \-\-prefer\-avconv
Prefer avconv over ffmpeg for running the postprocessors
.RS
.RE
.TP
.B \-\-prefer\-ffmpeg
Prefer ffmpeg over avconv for running the postprocessors (default)
.RS
.RE
.TP
.B \-\-ffmpeg\-location \f[I]PATH\f[]
Location of the ffmpeg/avconv binary; either the path to the binary or
its containing directory.
.RS
.RE
.TP
.B \-\-exec \f[I]CMD\f[]
Execute a command on the file after downloading and post\-processing,
similar to find\[aq]s \-exec syntax.
Example: \-\-exec \[aq]adb push {} /sdcard/Music/ && rm {}\[aq]
.RS
.RE
.TP
.B \-\-convert\-subs \f[I]FORMAT\f[]
Convert the subtitles to other format (currently supported:
srt|ass|vtt|lrc)
.RS
.RE
.SS Extractor Options:
.TP
.B \-\-ignore\-dynamic\-mpd
Do not process dynamic DASH manifests
.RS
.RE
