Metadata-Version: 2.1
Name: repository-scorer
Version: 0.3.5
Summary: A python package to compute a repository best engineering practices indicators
Home-page: https://github.com/radon-h2020/radon-repository-scorer
Author: Stefano Dalla Palma
Author-email: stefano.dallapalma0@gmail.com
License: Apache License
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: GitPython (~=3.1.11)
Requires-Dist: python-dotenv (~=0.14.0)
Requires-Dist: PyDriller (~=1.15.2)
Requires-Dist: PyGithub (~=1.53)
Requires-Dist: pygount (~=1.2.4)
Requires-Dist: python-gitlab (~=2.5.0)

![Build](https://github.com/radon-h2020/radon-repository-scorer/workflows/Build/badge.svg)
![lgtm](https://img.shields.io/lgtm/grade/python/github/radon-h2020/radon-repository-scorer)
![LGTM Alerts](https://img.shields.io/lgtm/alerts/github/radon-h2020/radon-repository-scorer)
![pypi-version](https://img.shields.io/pypi/v/repository-scorer)
![pypi-status](https://img.shields.io/pypi/status/repository-scorer)
![release-date](https://img.shields.io/github/release-date/radon-h2020/radon-repository-scorer)
[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)
![python-version](https://img.shields.io/pypi/pyversions/repository-scorer)

# radon-repository-scorer
The radon-repository-scorer is a Python package to compute a repository best engineering practices indicators.

The module provides the following 8 indicators of well-engineered software projects:

* **Core contributors:** the number of contributors whose total number of commits accounts for 80% or more of the total contributions.
* **Continuous integration (CI):** the repository has evidence of a CI service, determined by the presence of a configuration file required by that service (e.g., a.travis.ymlfor TravisCI).
* **Comments ratio:** ratio between comments and lines of code.
* **Commit frequency:** the average number of commits per month.
* **Issue frequency:** the average number of issue events transpired per month.
* **License availability:** the repository has evidence of a license (i.e., a LICENSE file).
* **Lines of Code:** the number of executable lines of code. 
* **Ratio of IaC scripts:** ratio between Infrastructure-as-Code (IaC) files and total files.


All the previous indicators but the last are described in depth in:

```text
@inproceedings{@article{munaiah2017curating,
  title={Curating GitHub for engineered software projects},
  author={Munaiah, Nuthan and Kroh, Steven and Cabrey, Craig and Nagappan, Meiyappan},
  journal={Empirical Software Engineering},
  volume={22},
  number={6},
  pages={3219--3253},
  year={2017},
  publisher={Springer}
}
```


**Note:** the tool is intended to be used as a Python library. 
Therefore, the current version does not provide a command line interface.

## How to install

**From the Python Package Index** 

```pip install repository-scorer```

<br>

**From source code**
```
pip install -r requirements
pip install .
```


## How to use

```python
from reposcorer.scorer import score_repository

report = score_repository(path_to_repo='path/to/cloned/repo',
                          full_name_or_id='repo_owner/repo_name',  # e.g., radon-h2020/radon-repository-scorer
                          host='github')  # or gitlab
```

**Output**
```text
{
  'has_ci': <bool>,
  'comments_ratio': <float in [0,1]>,
  'commit_frequency': <float>,
  'core_contributors': <int>,
  'iac_ratio': <float in [0,1]>,
  'issue_frequency': <float>,
  'has_license': <bool>,
  'repository_size': <int>
}
``` 


## How to build the Docker image

`docker build -t repo-scorer:latest .`

## How to pull from Dockerhub

`docker pull radonconsortium/repo-scorer:latest`

## How to use Docker image

`docker run -e GIT(HU|LA)B_ACCESS_TOKEN=$TOKEN repo-scorer:latest <github|gitlab> <repo full name> <clone to>`

**Example**

`docker run -e GITHUB_ACCESS_TOKEN=$GITHUB_ACCESS_TOKEN repo-scorer:latest github UoW-CPC/COLARepo /tmp/`

*Output:*

`{"has_ci": false, "percent_comment": 0.0389, "commit_frequency": 4.56, "core_contributors": 3, "iac_ratio": 0.96, "issue_frequency": 0.0, "has_license": false, "repository_size": 2224}`


See [CHANGELOG](CHANGELOG.md) for logs detail about releases.

