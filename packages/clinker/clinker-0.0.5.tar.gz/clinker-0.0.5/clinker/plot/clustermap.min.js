!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).ClusterMap={})}(this,(function(t){"use strict";function e(t){if(t.defaultPrevented)return;let e=d3.select(t.target),a=prompt("Enter new value:",e.text());a&&e.text(a)}function a(t,e){for(const[l,n]of Object.entries(e))t.hasOwnProperty(l)&&((r=n)&&r.constructor===Object?a(t[l],n):t[l]=n);var r}function r(t,e){return Math.max(Math.min(d3.bisectLeft(t,e),t.length-1),0)}function l(t,e,a){let r=u[t].domain(),l=u[t].range();l[r.indexOf(e)]=a,u[t].range(l)}const n=Object.assign({},{plot:{transitionDuration:250,scaleFactor:15},legend:{entryHeight:18,fontSize:14,onClickCircle:null,onClickText:null,show:!0,marginLeft:20},colourBar:{fontSize:10,height:12,show:!0,width:150,marginTop:20},scaleBar:{colour:"black",fontSize:10,height:12,basePair:2500,show:!0,stroke:1,marginTop:20},link:{show:!0,threshold:0,bestOnly:!1},cluster:{nameFontSize:12,lociFontSize:10,hideLocusCoordinates:!1,spacing:40,alignLabels:!0},locus:{trackBar:{colour:"#111",stroke:1},spacing:50},gene:{shape:{bodyHeight:12,tipHeight:5,tipLength:12,onClick:null,stroke:"black",strokeWidth:1},label:{anchor:"start",fontSize:10,rotation:25,show:!1,start:.5}}}),s={isDragging:!1};function o(t,e){return d3.select(`#${e}_${t}`)}const i={gene:t=>o(t,"gene"),locus:t=>o(t,"locus"),cluster:t=>o(t,"cluster"),geneData:t=>i.gene(t).datum(),locusData:t=>i.locus(t).datum(),clusterData:t=>i.cluster(t).datum(),matrix:t=>t.node().transform.baseVal[0].matrix},c={legendTransform:t=>{let[e,a]=g.extent(t.clusters);return`translate(${a+n.legend.marginLeft}, 0)`},bottomY:()=>{let t=u.y.range(),e=n.gene.shape.bodyHeight+2*n.gene.shape.tipHeight;return t[t.length-1]+e},colourBarTransform:()=>`translate(${u.x(n.scaleBar.basePair)+20}, ${c.bottomY()+n.colourBar.marginTop})`,scaleBarTransform:()=>`translate(0, ${c.bottomY()+n.scaleBar.marginTop})`,updateConfig:function(t){a(n,t)},update:null},u={x:d3.scaleLinear().domain([1,1001]).range([0,n.plot.scaleFactor]),y:d3.scaleOrdinal(),group:d3.scaleOrdinal().unknown(null),colour:d3.scaleOrdinal().unknown("#bbb"),score:d3.scaleSequential(d3.interpolateGreys).domain([0,1]),offset:d3.scaleOrdinal(),locus:d3.scaleOrdinal()},d={getId:t=>"gene_"+t.uid,fill:t=>{if(!u.group)return"#bbb";let e=u.group(t.uid);return u.colour(e)},points:t=>{let e=[],a=u.x(t.start),r=u.x(t.end),l=r-a,s=2*n.gene.shape.tipHeight+n.gene.shape.bodyHeight,o=s/2,i=n.gene.shape.tipHeight+n.gene.shape.bodyHeight;if(1===t.strand){let t=r-n.gene.shape.tipLength;e=[a,n.gene.shape.tipHeight,t,n.gene.shape.tipHeight,t,0,r,o,t,s,t,i,a,i],l<n.gene.shape.tipLength&&[2,4,8,10].forEach(t=>e[t]=a)}else{let t=a+n.gene.shape.tipLength;e=[r,n.gene.shape.tipHeight,t,n.gene.shape.tipHeight,t,0,a,o,t,s,t,i,r,i],l<n.gene.shape.tipLength&&[2,4,8,10].forEach(t=>e[t]=r)}return e.join(" ")},labelTransform:t=>{let e=u.x(t.end-t.start)*n.gene.label.start;return`translate(${u.x(t.start)+e}, 0) rotate(${["start","middle"].includes(n.gene.label.anchor)?-n.gene.label.rotation:n.gene.label.rotation})`},update:t=>(t.selectAll("polygon").attr("class",t=>{let e=u.group(t.uid);return null!==e?"genePolygon group-"+e:"genePolygon"}).attr("points",d.points).attr("fill",d.fill).style("stroke",n.gene.shape.stroke).style("stroke-width",n.gene.shape.strokeWidth),t.selectAll("text.geneLabel").attr("display",n.gene.label.show?"inherit":"none").attr("transform",d.labelTransform).attr("font-size",n.gene.label.fontSize).attr("text-anchor",n.gene.label.Anchor),t),anchor:(t,e)=>{let a=u.offset.domain(),r=u.offset.range(),l=new Map;if(u.group.domain().filter(t=>{let a=u.group(t),r=u.group(e.uid);return null!==a&&a===r}).forEach(t=>{let e=i.geneData(t)._cluster;l.has(e)?l.get(e).push(t):l.set(e,[t])}),0===l.length)return;let n=t=>{let e=t.end-t.start;return u.x(t.start+e/2)+u.locus(t._locus)+u.offset(t._cluster)},s=n(e),o=t=>{if(t.includes(e.uid))return 0;let a=t.map(t=>(t=>{let e=i.geneData(t);return s-n(e)})(t));return a[d3.minIndex(a,t=>Math.abs(t))]};for(const[t,e]of l.entries()){r[a.findIndex(e=>e===t)]+=o(e)}u.offset.range(r),c.update()}},g={getId:t=>"cluster_"+t.uid,transform:t=>`translate(${u.offset(t.uid)}, ${u.y(t.uid)})`,locusText:t=>t.loci.map(t=>{let e=t._flipped?" (reversed)":"";return n.cluster.hideLocusCoordinates||null==t._start||null==t._end?`${t.name}${e}`:`${t.name}${e}:`+t._start.toFixed(0)+"-"+t._end.toFixed(0)}).join(", "),extentOne:(t,e)=>{let a,r;e=e||[];for(let l of t.loci){if(e.includes(l.uid))continue;let n=u.offset(t.uid)+u.locus(l.uid),s=u.x(l._start)+n,o=u.x(l._end)+n;(!a||a&&s<a)&&(a=s),(!r||r&&o>r)&&(r=o)}return[a,r]},extent:t=>{let e,a;t=t||[];for(const r of u.offset.domain()){let l=i.clusterData(r),[n,s]=g.extentOne(l,t);(!e||e&&n<e)&&(e=n),(!a||a&&s>a)&&(a=s)}return[e,a]},adjacent:(t,e)=>{let a=i.cluster(t).datum(),r=i.cluster(e).datum();return 1===Math.abs(a.slot-r.slot)},getRange:t=>{let e,a,r,l=[],s=1;for(const[o,i]of t.loci.entries())o>0&&(s=l[l.length-1]+a-e+n.locus.spacing),r=u.locus(i.uid)||0,e=u.x(i._start||i.start),a=u.x(i._end||i.end),l.push(s-e+r);return l},getLocusScaleValues:t=>{let e=[],a=[];return t.forEach(t=>{let r=t.loci.map(t=>t.uid),l=g.getRange(t);e.push(...r),a.push(...l)}),[e,a]},alignLabels:t=>{let[e,a]=g.extent();return t.attr("transform",t=>`translate(${e-u.offset(t.uid)-10}, 0)`)},update:t=>(t.attr("transform",g.transform),n.cluster.alignLabels?t.selectAll(".clusterInfo").call(g.alignLabels):t.selectAll(".clusterInfo").attr("transform",t=>{let[e,a]=g.extentOne(t);return`translate(${e-10-u.offset(t.uid)}, 0)`}),t.selectAll("text.clusterText").style("font-size",n.cluster.nameFontSize+"px"),t.selectAll("text.locusText").text(g.locusText).style("font-size",n.cluster.lociFontSize+"px"),t),drag:t=>{n.gene.shape.bodyHeight,n.gene.shape.tipHeight;let e,a,r=u.y.range(),l=r[r.length-1];t.each((t,e)=>{t.slot=e});return d3.drag().container((function(){return this.parentNode.parentNode})).on("start",(t,r)=>{s.isDragging=!0,i.cluster(r.uid).classed("active",!0).attr("cursor","grabbing"),e=r.slot;let l=i.cluster(r.uid);a=i.matrix(l).f-t.y}).on("drag",(r,n)=>{let s=i.cluster(n.uid);s.raise();let o=Math.min(l,Math.max(0,a+r.y));s.attr("transform",t=>`translate(${u.offset(t.uid)}, ${o})`);let c=u.y.domain(),d=Math.round(o/(l/c.length));d3.selectAll("path.geneLink").call(p.setPath),d!==n.slot&&t.each((function(t){if(t.uid!==n.uid&&t.slot===d){t.slot=e,n.slot=e=d;let a=u.y.domain()[t.slot],r=t=>`translate(${u.offset(t.uid)}, ${u.y(a)})`;i.cluster(t.uid).transition().attr("transform",r)}}))}).on("end",()=>{s.isDragging=!1;let e=(()=>{let e=[];return t.each(t=>{e.push(t)}),e=e.sort((t,e)=>t.slot>e.slot?1:-1),e.map(t=>t.uid)})();u.y.domain(e),c.update()})(t)}},p={getId:t=>{let[e,a]=[t.query.uid,t.target.uid].sort();return`${e}-${a}`},opacity:t=>{let e=i.gene(t.query.uid).attr("display"),a=i.gene(t.target.uid).attr("display"),r=["none",null];return!n.link.show||r.includes(e)||r.includes(a)?0:1},setPath:(t,e)=>t.attr("d",t=>p.path(t,e)),filter:t=>{if(t=t.filter(t=>{let e=null!==u.group(t.query.uid),a=null!==u.group(t.target.uid);return e&&a}),!n.link.bestOnly)return t;const e=(t,e)=>t.size===e.size&&[...t].every(t=>e.has(t));class a extends Map{has(...t){if(0===this.size)return!1;for(let a of this.keys())if(e(t[0],a))return!0;return!1}get(...t){for(const[a,r]of this)if(e(t[0],a))return r}set(...t){let e=this.get(t[0])||t[0];return super.set(e,t[1])}reduce(){let t=[];for(const e of this.values())t=t.concat(e);return t}}let r=new a;t.sort((t,e)=>t.identity<e.identity?1:-1);for(const e of t){let t=i.geneData(e.query.uid)._cluster,a=i.geneData(e.target.uid)._cluster,l=new Set([t,a]);r.has(l)?r.get(l).some(t=>{let a=new Set([t.query.uid,t.target.uid]);return(a.has(e.query.uid)||a.has(e.target.uid))&&e.identity<t.identity})||r.get(l).push(e):r.set(l,[e])}return r.reduce().filter(t=>t.identity>n.link.threshold)},path:(t,e)=>{e=e||!1;let a=i.geneData(t.query.uid),r=i.geneData(t.target.uid);if(!g.adjacent(a._cluster,r._cluster))return null;let l=n.gene.shape.tipHeight+n.gene.shape.bodyHeight/2,s=t=>{if(e)return u.offset(t._cluster)+u.locus(t._locus);let a=i.locus(t._locus),r=i.matrix(a);return u.offset(t._cluster)+r.e},o=s(a),c=s(r),d=(t,a)=>{let r=i.cluster(t._cluster),n=i.matrix(r),s=u.x(t.start)+a,o=u.x(t.end)+a;return[-1===t.strand?o:s,-1===t.strand?s:o,e?u.y(t._cluster)+l:n.f+l]},[p,h,f]=d(a,o),[m,x,y]=d(r,c);return`M${p},${f} L${h},${f} L${x},${y} L${m},${y} L${p},${f}`},getGroups:t=>t.map(t=>[t.query.uid,t.target.uid]).map((t,e,a)=>a.slice(e).reduce((e,a)=>t.some(t=>a.includes(t))?[...new Set([...e,...a])]:e,[])).reduce((t,e)=>{let a=!1;return t=t.map(t=>t.some(t=>e.includes(t))?(a=!0,[...new Set([...t,...e])]):t),!a&&t.push(e),t},[]),mergeGroups:(t,e)=>{if(0===t.length||t===e)return[...e];let a,r,l=[...t];return l.forEach(t=>{a=new Set(t),e.forEach(e=>{r=new Set([...e].filter(t=>a.has(t))),r&&t.push(...e.filter(e=>!t.includes(e)))})}),l},compareGroups:(t,e)=>{let a,r,l;return t.forEach(t=>{if(a=new Set(t),r=!1,e.forEach(t=>{l=new Set([...t].filter(t=>a.has(t))),l.size>0&&(r=!0)}),!r)return!1}),!!r},getGroupDomainAndRange:t=>{let e={domain:[],range:[]};return t.forEach((t,a)=>{e.domain.push(...t),e.range.push(...t.map(()=>a))}),e},updateGroups:t=>{let e=u.group.range(),a=Array.from(d3.group(u.group.domain(),(t,a)=>e[a]).values()),r=p.getGroups(t),l=p.mergeGroups(a,r);if(!p.compareGroups(a,l)){u.colour.domain(l.map((t,e)=>e)).range(d3.quantize(d3.interpolateRainbow,l.length+1));let{domain:t,range:e}=p.getGroupDomainAndRange(l);u.group.domain(t).range(e)}},hideGroup:t=>{let e=u.group.domain(),a=u.group.range(),r=[],l=[];for(let[n,s]of a.entries())s!==t&&(l.push(s),r.push(e[n]));u.group.domain(r),u.group.range(l);let n=u.colour.domain(),s=u.colour.range(),o=n.indexOf(t);n.splice(o,1),s.splice(o,1),u.colour.domain(n).range(s)}},h={getId:t=>"locus_"+t.uid,realLength:t=>u.x(t._end-t._start),updateTrackBar:t=>{let e=n.gene.shape.tipHeight+n.gene.shape.bodyHeight/2;return t.select("line.trackBar").attr("x1",t=>u.x(t._start)).attr("x2",t=>u.x(t._end)).attr("y1",e).attr("y2",e).style("stroke",n.locus.trackBar.colour).style("stroke-width",n.locus.trackBar.stroke),t},updateHoverBox:t=>{let e=2*n.gene.shape.tipHeight+n.gene.shape.bodyHeight;return t.selectAll("rect.hover, rect.leftHandle, rect.rightHandle").attr("y",-10).attr("height",e+20),t.select("rect.hover").attr("x",t=>u.x(t._start)).attr("width",h.realLength),t.select("rect.leftHandle").attr("x",t=>u.x(t._start)-8),t.select("rect.rightHandle").attr("x",t=>u.x(t._end)),t},update:t=>t.attr("transform",t=>`translate(${u.locus(t.uid)}, 0)`).call(h.updateTrackBar).call(h.updateHoverBox),dragResize:t=>{let e,a,l;const o=(t,l,s)=>{let o=l.genes.filter(t=>t.end<=l._end).map(t=>t.start),c=[l.start,...o].sort((t,e)=>t>e?1:-1),d=c.map(t=>u.x(t)),g=r(d,t.x);a=d[g],l._start=c[g],s.attr("x",a-8);let f=i.locus(l.uid);if(f.select("rect.hover").attr("x",a).attr("width",h.realLength),f.selectAll("g.gene").attr("display",t=>t.start>=l._start&&t.end<=l._end+1?"inline":"none"),f.call(h.updateTrackBar),d3.selectAll("path.geneLink").attr("opacity",p.opacity),n.cluster.alignLabels){let t=u.offset(l._cluster)+u.locus(l.uid),r=Math.min(a+t,e)-10;d3.selectAll("g.clusterInfo").attr("transform",t=>`translate(${r-u.offset(t.uid)}, 0)`)}else d3.select("#cinfo_"+l._cluster).attr("transform",`translate(${u.locus(l.uid)+u.x(l._start)-10}, 0)`)},d=(t,e,a)=>{let l=e.genes.filter(t=>t.start>=e._start).map(t=>t.end).sort((t,e)=>t>e?1:-1),n=r(l.map(t=>u.x(t)),t.x);e._end=l[n],a.attr("x",u.x(e._end));let s=i.locus(e.uid);s.select("rect.hover").attr("width",h.realLength),s.selectAll("g.gene").attr("display",t=>t.start>=e._start&&t.end<=e._end+1?"inline":"none"),s.call(h.updateTrackBar),d3.selectAll("path.geneLink").attr("opacity",p.opacity),d3.select("g.legend").attr("transform",c.legendTransform)};return d3.drag().on("start",(t,a)=>{[e,t]=g.extent([a.uid]),s.isDragging=!0,l=u.x(a._start)}).on("drag",(function(t,e){let a=d3.select(this);"leftHandle"===a.attr("class")?o(t,e,a):d(t,e,a)})).on("end",(t,e)=>{s.isDragging=!1,d3.select(`#locus_${e.uid} .hover`).transition().attr("opacity",0),c.update()})(t)},dragPosition:t=>{let e,a,r,o,d;return d3.drag().on("start",(t,l)=>{[e,a]=g.extent([l.uid]),r=t.x,o=u.locus(l.uid),s.isDragging=!0}).on("drag",(t,l)=>{o+=t.x-r,d=i.locus(l.uid),d.attr("transform",`translate(${o}, 0)`),d3.selectAll("path.geneLink").call(p.setPath,!1);let s=d.datum(),c=u.x(s._start);if(n.cluster.alignLabels){let t=o+u.offset(l._cluster)+c,a=Math.min(t,e)-10;d3.selectAll("g.clusterInfo").attr("transform",t=>`translate(${a-u.offset(t.uid)}, 0)`)}else d3.select("#cinfo_"+l._cluster).attr("transform",`translate(${o+c-10}, 0)`);let g=u.x(s._end),h=Math.max(o+u.offset(l._cluster)+g,a)+20;d3.select("g.legend").attr("transform",`translate(${h}, 0)`)}).on("end",(t,e)=>{s.isDragging=!1,l("locus",e.uid,o),c.update()})(t)},flip:t=>{t._flipped=!t._flipped;let e=t.end-t.start+2,a=t._start;t._start=e-t._end,t._end=e-a,t.genes.forEach(t=>{let a=t.start;t.start=e-t.end,t.end=e-a,t.strand=1===t.strand?-1:1});let r=u.x(a-t._start);l("locus",t.uid,u.locus(t.uid)+r)}},f={check:t=>f.checkDomain(t)&&f.checkRange(t),checkDomain:t=>u[t].domain().length>0,checkRange:t=>u[t].range().length>0,updateX:()=>{u.x.range([0,n.plot.scaleFactor])},updateY:t=>{let e=2*n.gene.shape.tipHeight+n.gene.shape.bodyHeight,a=t.clusters.map((t,a)=>a*(n.cluster.spacing+e));u.y.range(a)},updateOffset:t=>{u.offset.domain(t.map(t=>t.uid)).range(t.map(()=>0))},updateLocus:t=>{let[e,a]=g.getLocusScaleValues(t);u.locus.domain(e).range(a)},rescaleRanges:t=>{[u.offset,u.locus].forEach(e=>{let a=e.range();for(let e=0;e<a.length;e++){let r=t.invert(a[e]);a[e]=u.x(r)}e.range(a)})},update:t=>{let e=u.x.copy();f.updateX(),f.rescaleRanges(e),f.check("y")||u.y.domain(t.clusters.map(t=>t.uid)),f.updateY(t),f.check("offset")||f.updateOffset(t.clusters),f.check("locus")||f.updateLocus(t.clusters)}};n.gene.shape.onClick=d.anchor,n.legend.onClickText=e,n.legend.onAltClickText=t=>{t.preventDefault();let e=d3.select(t.target).datum();p.hideGroup(e),c.update()},t.ClusterMap=function(){let t=null,a=d3.transition();function r(r){r.each((function(r){t=d3.select(this).attr("width","100%").attr("height","100%"),a=d3.transition().duration(n.plot.transitionDuration);let x=t.selectAll("svg.clusterMap").data([r]).join(t=>{t.append("input").attr("id","picker").attr("class","colourPicker").attr("type","color").style("opacity",0);let e=t.append("svg").attr("class","clusterMap").attr("id","root-svg").attr("cursor","grab").attr("width","100%").attr("height","100%").attr("xmlns","http://www.w3.org/2000/svg").attr("xmlns:xhtml","http://www.w3.org/1999/xhtml"),a=e.append("g").attr("class","clusterMapG"),r=d3.zoom().scaleExtent([0,8]).on("zoom",t=>a.attr("transform",t.transform)).on("start",()=>e.attr("cursor","grabbing")).on("end",()=>e.attr("cursor","grab")),l=d3.zoomIdentity.translate(20,50).scale(1.2);return e.call(r).call(r.transform,l).on("dblclick.zoom",null),a},t=>t.call(t=>{t.call(l)}));f.update(r),p.updateGroups(r.links),t=d3.select(this);let y=x.selectAll("g.links").data([r]).join("g").attr("class","links");x.selectAll("g.clusters").data([r.clusters]).join("g").attr("class","clusters").selectAll("g.cluster").data(r.clusters,t=>t.uid).join(t=>{let a=(t=t.append("g").attr("id",g.getId).attr("class","cluster").each(o)).append("g").attr("id",t=>"cinfo_"+t.uid).attr("class","clusterInfo").attr("transform","translate(-10, 0)").call(g.drag);return a.append("text").text(t=>t.name).attr("class","clusterText").attr("y",8).attr("cursor","pointer").style("font-weight","bold").on("click",e),a.append("text").attr("class","locusText").attr("y",12).style("dominant-baseline","hanging"),t.append("g").attr("class","loci"),a.selectAll("text").attr("text-anchor","end").style("font-family","sans"),t.call(g.update)},t=>t.call(t=>t.transition(a).call(g.update))).selectAll("g.loci").selectAll("g.locus").data(t=>t.loci,t=>t.uid).join(t=>{(t=t.append("g").attr("id",h.getId).attr("class","locus")).append("line").attr("class","trackBar").style("fill","#111");let e=t.append("g").attr("class","hover").attr("opacity",0);return t.append("g").attr("class","genes"),e.append("rect").attr("class","hover").attr("fill","rgba(0, 0, 0, 0.4)").call(h.dragPosition),e.append("rect").attr("class","leftHandle").attr("x",-8).call(h.dragResize),e.append("rect").attr("class","rightHandle").call(h.dragResize),e.selectAll(".leftHandle, .rightHandle").attr("width",8).attr("cursor","pointer"),t.on("mouseenter",t=>{s.isDragging||d3.select(t.target).select("g.hover").transition().attr("opacity",1)}).on("mouseleave",t=>{s.isDragging||d3.select(t.target).select("g.hover").transition().attr("opacity",0)}).on("dblclick",(t,e)=>{h.flip(e),c.update()}),t.call(h.update)},t=>t.call(t=>t.transition(a).call(h.update))).selectAll("g.genes").selectAll("g.gene").data(t=>t.genes,t=>t.uid).join(t=>((t=t.append("g").attr("id",d.getId).attr("class","gene").attr("display","inline")).append("polygon").on("click",n.gene.shape.onClick).attr("class","genePolygon"),t.append("text").text(t=>t.name).attr("class","geneLabel").attr("dy","-0.3em"),t.call(d.update)),t=>t.call(t=>t.transition(a).call(d.update))),y.selectAll("path.geneLink").data(p.filter(r.links),p.getId).join(t=>t.append("path").attr("id",p.getId).attr("class","geneLink").style("fill",t=>u.score(t.identity)).style("stroke","black").style("stroke-width","0.5px").attr("opacity",p.opacity).call(p.setPath),t=>t.call(t=>t.transition(a).attr("opacity",p.opacity).call(p.setPath,!0)),t=>t.call(t=>{t.transition(a).attr("opacity",0).remove()}));let b=function(){let t=function(){let t,e=d3.selectAll("g.gene");e.empty()?t=[]:(t=u.colour.domain(),e.each((e,a,r)=>{let l=d3.select(r[a]).attr("display"),n=u.group(e.uid);"inline"===l&&null!==n&&t.includes(n)&&(t=t.filter(t=>t!==n))}));return t}();return function(t){let a=15,r=12,l=[],n=()=>{},s=e,o=()=>{},i=d3.scaleBand().paddingInner(.5),c=d3.transition().duration(500);function u(e){e.each((function(e){let r=t.domain().filter(t=>!l.includes(t));i.domain(r).range([0,a*r.length]);let u=d3.select(this).selectAll("g.legend").data([e]).join("g").attr("class","legend"),g=t=>`translate(0, ${i(t)})`;u.selectAll("g.element").data(r,t=>t).join(t=>((t=t.append("g").attr("class","element").attr("transform",g)).append("circle").attr("class",t=>"group-"+t),t.append("text").text(t=>"Group "+t).attr("x",16).attr("text-anchor","start").style("font-family","sans").style("dominant-baseline","middle"),t.call(d)),t=>t.call(t=>t.transition(c).attr("transform",g).call(d))),n&&u.selectAll("circle").attr("cursor","pointer").on("click",n),u.selectAll("text").attr("cursor","pointer").on("click",s).on("contextmenu",o)}))}function d(e){e.attr("transform",t=>`translate(0, ${i(t)})`);let a=i.bandwidth()/2;e.selectAll("text").attr("x",a+6).attr("y",a+1).style("font-size",r+"px"),e.selectAll("circle").attr("cy",a).attr("r",a).attr("fill",e=>t(e))}return u.colourScale=e=>arguments.length?(t=e,u):t,u.transition=t=>arguments.length?(c=t,u):c,u.hidden=t=>arguments.length?(l=t,u):l,u.entryHeight=t=>arguments.length?(a=parseInt(t),u):a,u.fontSize=t=>arguments.length?(r=parseInt(t),u):r,u.onClickCircle=t=>arguments.length?(n=t,u):n,u.onClickText=t=>arguments.length?(s=t,u):s,u.onAltClickText=t=>arguments.length?(o=t,u):o,u}(u.colour).hidden(t).fontSize(n.legend.fontSize).entryHeight(n.legend.entryHeight).onClickCircle(n.legend.onClickCircle||i).onClickText(n.legend.onClickText).onAltClickText(n.legend.onAltClickText)}(),k=function(t){let e=1e3,a=1,r=10,l="black",n=12,s=d3.transition().duration(500),o=null;function i(t){t.each((function(t){d3.select(this).selectAll("g.scaleBar").data([t]).join(t=>((t=t.append("g").attr("class","scaleBar")).append("line").attr("class","flatBar"),t.append("line").attr("class","leftBar"),t.append("line").attr("class","rightBar"),t.append("text").attr("class","barText").attr("text-anchor","middle").attr("cursor","pointer").on("click",o||d),t.call(u),t),t=>t.call(t=>t.transition(s).call(u)))}))}function c(){return+(e/1e3).toFixed(1)+"kb"}function u(s){let o=r/2,i=t(e);s.select(".flatBar").attr("x2",i).attr("y1",o).attr("y2",o),s.select(".leftBar").attr("y2",r),s.select(".rightBar").attr("x1",i).attr("x2",i).attr("y2",r),s.select("text.barText").text(c).attr("x",i/2).attr("y",r+5).style("dominant-baseline","hanging").style("font-size",n+"pt"),s.selectAll("line").style("stroke",l).style("stroke-width",a)}function d(){let t=prompt("Enter new length (bp):",e);t&&i.basePair(t)}return i.basePair=t=>arguments.length?(e=parseInt(t),i):e,i.colour=t=>arguments.length?(l=t,i):l,i.colourScale=t=>arguments.length?(colourScale=t,i):colourScale,i.fontSize=t=>arguments.length?(n=parseInt(t),i):n,i.height=t=>arguments.length?(r=parseInt(t),i):r,i.onClickText=t=>arguments.length?(o=t,i):o,i.stroke=t=>arguments.length?(a=parseInt(t),i):a,i.transition=t=>arguments.length?(s=t,i):s,i.width=t=>arguments.length?(width=parseInt(t),i):width,i}(u.x).stroke(n.scaleBar.stroke).height(n.scaleBar.height).colour(n.scaleBar.colour).basePair(n.scaleBar.basePair).fontSize(n.scaleBar.fontSize).onClickText(m).transition(a),_=function(t){let e=25,a=150,r=12,l=d3.transition();function n(t){t.each((function(t){d3.select(this).selectAll("g.colourBar").data([t]).join(t=>{let e=(t=t.append("g").attr("class","colourBar")).append("defs").append("linearGradient").attr("id","cbarGradient").attr("x1","0%").attr("x2","100%");e.append("stop").attr("class","startStop").attr("offset","0%"),e.append("stop").attr("class","endStop").attr("offset","100%");let a=t.append("g").attr("class","cbarParts");return a.append("rect").attr("class","colourBarBG").style("fill","white").style("stroke","black").style("stroke-width","1px"),a.append("rect").attr("class","colourBarFill").style("fill","url(#cbarGradient)"),a.append("text").text("Identity (%)").attr("class","labelText").attr("text-anchor","middle"),a.append("text").text("0").attr("class","startText").attr("text-anchor","start"),a.append("text").text("100").attr("class","endText").attr("text-anchor","end"),a.selectAll("text").style("font-family","sans-serif").style("dominant-baseline","hanging"),t.call(s),t},t=>t.call(t=>t.transition(l).call(s)))}))}function s(l){l.select(".startStop").attr("stop-color",t(0)),l.select(".endStop").attr("stop-color",t(1)),l.selectAll("rect").attr("width",a).attr("height",e),l.selectAll(".startText, .endText, .labelText").attr("y",e+5),l.select(".labelText").attr("x",a/2),l.select(".endText").attr("x",a),l.selectAll("text").style("font-size",r+"pt")}return n.width=t=>arguments.length?(a=parseInt(t),n):a,n.height=t=>arguments.length?(e=parseInt(t),n):e,n.fontSize=t=>arguments.length?(r=parseInt(t),n):r,n.colourScale=e=>arguments.length?(t=e,n):t,n.transition=t=>arguments.length?(l=t,n):l,n}(u.score).width(n.colourBar.width).height(n.colourBar.height).fontSize(n.colourBar.fontSize).transition(a);x.call(b).call(_).call(k).call(l)}))}function l(t){t.select("g.scaleBar").transition(a).attr("transform",c.scaleBarTransform),t.select("g.colourBar").transition(a).attr("transform",c.colourBarTransform),t.select("g.legend").transition(a).attr("transform",c.legendTransform)}function o(t){t.loci.forEach(e=>{e._start=e.start,e._end=e.end,e._offset=0,e._cluster=t.uid,e._flipped=!1,e.genes.forEach(a=>{a._locus=e.uid,a._cluster=t.uid})})}function i(t,e){let a=d3.select("input.colourPicker");a.on("change",()=>{let t=a.node().value,r=u.colour.range();r[e]=t,u.colour.range(r),d3.selectAll(".group-"+e).attr("fill",t)}),a.node().click()}function m(){let t=prompt("Enter new length (bp):",n.scaleBar.basePair);t&&(n.scaleBar.basePair=t,c.update())}return c.update=()=>t.call(r),r.config=function(t){return arguments.length?(c.updateConfig(t),r):config},r},Object.defineProperty(t,"__esModule",{value:!0})}));
