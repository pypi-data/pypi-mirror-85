#! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
#! parse-kind: ClusterServiceVersion
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: svcat.v0.1.34
  namespace: placeholder
  annotations:
    categories: "OpenShift Optional"
    certified: "false"
    description: Service Catalog lets you provision cloud services directly from the comfort of native Kubernetes tooling. This project is in incubation to bring integration with service brokers to the Kubernetes ecosystem via the Open Service Broker API.
    containerImage: quay.io/openshift/origin-service-catalog
    createdAt: 2018-12-01T00:00:00Z
    support: AOS Service Catalog
spec:
  displayName: Service Catalog
  description: Service Catalog lets you provision cloud services directly from the comfort of native Kubernetes tooling. This project is in incubation to bring integration with service brokers to the Kubernetes ecosystem via the Open Service Broker API.
  version: 0.1.34
  keywords: ['catalog', 'service', 'svcat', 'osb', 'broker']
  maintainers:
  - name: Red Hat
    email: openshift-operators@redhat.com
  provider:
    name: Red Hat
  links:
  - name: Documentation
    url: https://svc-cat.io/docs
  - name: Service Catalog
    url: https://github.com/openshift/service-catalog

  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: true
  - type: MultiNamespace
    supported: false
  - type: AllNamespaces
    supported: true

  install:
    strategy: deployment
    spec:
      permissions:
      - serviceAccountName: service-catalog-controller
        rules:
        - apiGroups:     [""]
          resources:     ["configmaps"]
          resourceNames: ["cluster-info"]
          verbs:         ["get","create","list","watch","update"]
        - apiGroups:     [""]
          resources:     ["configmaps"]
          verbs:         ["create", "list", "watch", "get", "update"]
        - apiGroups:     [""]
          resources:     ["configmaps"]
          resourceNames: ["service-catalog-controller-manager"]
          verbs:         ["get","update"]
      clusterPermissions:
      - serviceAccountName: service-catalog-controller
        rules:
        - apiGroups: [""]
          resources: ["events"]
          verbs:     ["create","patch","update"]
        - apiGroups: [""]
          resources: ["secrets"]
          verbs:     ["get","create","update","delete","list","watch","patch"]
        - apiGroups: [""]
          resources: ["pods"]
          verbs:     ["get","list","update", "patch", "watch", "delete", "initialize"]
        - apiGroups: [""]
          resources: ["namespaces"]
          verbs:     ["get","list","watch"]
        - apiGroups: ["servicecatalog.k8s.io"]
          resources: ["clusterserviceclasses"]
          verbs:     ["get","list","watch","create","patch","update","delete"]
        - apiGroups: ["servicecatalog.k8s.io"]
          resources: ["clusterserviceplans"]
          verbs:     ["get","list","watch","create","patch","update","delete"]
        - apiGroups: ["servicecatalog.k8s.io"]
          resources: ["clusterservicebrokers"]
          verbs:     ["get","list","watch"]
        - apiGroups: ["servicecatalog.k8s.io"]
          resources: ["serviceinstances","servicebindings"]
          verbs:     ["get","list","watch", "update"]
        - apiGroups: ["servicecatalog.k8s.io"]
          resources: ["clusterservicebrokers/status","clusterserviceclasses/status","clusterserviceplans/status","serviceinstances/status","serviceinstances/reference","servicebindings/status","servicebindings/finalizers"]
          verbs:     ["update"]
        - apiGroups: ["servicecatalog.k8s.io"]
          resources: ["serviceclasses"]
          verbs:     ["get","list","watch","create","patch","update","delete"]
        - apiGroups: ["servicecatalog.k8s.io"]
          resources: ["serviceplans"]
          verbs:     ["get","list","watch","create","patch","update","delete"]
        - apiGroups: ["servicecatalog.k8s.io"]
          resources: ["servicebrokers"]
          verbs:     ["get","list","watch"]
        - apiGroups: ["servicecatalog.k8s.io"]
          resources: ["servicebrokers/status","serviceclasses/status","serviceplans/status"]
          verbs:     ["update"]
      - serviceAccountName: service-catalog-apiserver
        rules:
        - apiGroups:     [""]
          resources:     ["configmaps"]
          resourceNames: ["extension-apiserver-authentication"]
          verbs:         ["get"]
        - apiGroups: [""]
          resources: ["namespaces"]
          verbs:     ["get", "list", "watch"]
        - apiGroups: ["admissionregistration.k8s.io"]
          resources: ["validatingwebhookconfigurations"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["admissionregistration.k8s.io"]
          resources: ["mutatingwebhookconfigurations"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["authentication.k8s.io"]
          resources: ["tokenreviews"]
          verbs: ["create"]
        - apiGroups: ["authorization.k8s.io"]
          resources: ["subjectaccessreviews"]
          verbs: ["create"]
      deployments:
      - name: svcat-apiserver
        spec:
          replicas: 1
          strategy:
            type: RollingUpdate
          selector:
            matchLabels:
              app: svcat-apiserver
          template:
            metadata:
              labels:
                app: svcat-apiserver
            spec:
              serviceAccountName: service-catalog-apiserver
              containers:
              - name: svcat-apiserver
                image: quay.io/openshift/origin-service-catalog:v4.0.0
                imagePullPolicy: IfNotPresent
                command: ["/usr/bin/service-catalog"]
                resources:
                  limits:
                    cpu: 100m
                    memory: 140Mi
                  requests:
                    cpu: 100m
                    memory: 40Mi
                args:
                - apiserver
                - --enable-admission-plugins
                - "NamespaceLifecycle,DefaultServicePlan,ServiceBindingsLifecycle,ServicePlanChangeValidator,BrokerAuthSarCheck"
                - --secure-port
                - "5443"
                - --etcd-servers
                - http://localhost:2379
                - -v
                - "3"
                - --feature-gates
                - OriginatingIdentity=true
                - --feature-gates
                - NamespacedServiceBroker=true
                ports:
                - containerPort: 5443
                volumeMounts:
                - name: apiservice-cert
                  mountPath: /var/run/kubernetes-service-catalog
                readinessProbe:
                  httpGet:
                    port: 5443
                    path: /healthz
                    scheme: HTTPS
                  failureThreshold: 1
                  initialDelaySeconds: 30
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 5
                livenessProbe:
                  httpGet:
                    port: 5443
                    path: /healthz
                    scheme: HTTPS
                  failureThreshold: 3
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 5
              - name: etcd
                image: quay.io/coreos/etcd:latest
                imagePullPolicy: Always
                resources:
                  limits:
                    cpu: 100m
                    memory: 150Mi
                  requests:
                    cpu: 100m
                    memory: 50Mi
                env:
                - name: ETCD_DATA_DIR
                  value: /etcd-data-dir
                command:
                - /usr/local/bin/etcd
                - --listen-client-urls
                - http://0.0.0.0:2379
                - --advertise-client-urls
                - http://localhost:2379
                ports:
                - containerPort: 2379
                volumeMounts:
                - name: etcd-data-dir
                  mountPath: /etcd-data-dir
                readinessProbe:
                  httpGet:
                    port: 2379
                    path: /health
                  failureThreshold: 1
                  initialDelaySeconds: 30
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 5
                livenessProbe:
                  httpGet:
                    port: 2379
                    path: /health
                  failureThreshold: 3
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 5
              volumes:
              - name: etcd-data-dir
                emptyDir: {}
      - name: svcat-controller-manager
        spec:
          replicas: 1
          strategy:
            type: RollingUpdate
          selector:
            matchLabels:
              app: svcat-controller-manager
          template:
            metadata:
              labels:
                app: svcat-controller-manager
            spec:
              serviceAccountName: service-catalog-controller
              containers:
              - name: svcat-controller-manager
                image: quay.io/openshift/origin-service-catalog:v4.0.0
                imagePullPolicy: IfNotPresent
                command: ["/usr/bin/service-catalog"]
                resources:
                  limits:
                    cpu: 100m
                    memory: 150Mi
                  requests:
                    cpu: 100m
                    memory: 100Mi
                env:
                - name: K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                args:
                - controller-manager
                - --secure-port
                - "8444"
                - -v
                - "3"
                - --leader-election-namespace
                - openshift-operators
                - --leader-elect-resource-lock
                - configmaps
                - --cluster-id-configmap-namespace=openshift-operators
                - --broker-relist-interval
                - "5m"
                - --feature-gates
                - "OriginatingIdentity=true"
                - --feature-gates
                - "AsyncBindingOperations=true"
                - --feature-gates
                - "NamespacedServiceBroker=true"
                ports:
                - containerPort: 8444
                readinessProbe:
                  httpGet:
                    port: 8444
                    path: /healthz
                    scheme: HTTPS
                  failureThreshold: 1
                  initialDelaySeconds: 20
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 2
                livenessProbe:
                  httpGet:
                    port: 8444
                    path: /healthz
                    scheme: HTTPS
                  failureThreshold: 3
                  initialDelaySeconds: 20
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 2
                # The following apiservice-cert is borrowed from the apiservice - it should be
                # replaced with one specific for the controller manager.  How to create service
                # for controller manager??
                volumeMounts:
                - name: apiservice-cert
                  mountPath: /var/run/kubernetes-service-catalog
              volumes:
              - name: apiservice-cert
                secret:
                  defaultMode: 420
                  items:
                  - key: tls.crt
                    path: apiserver.crt
                  - key: tls.key
                    path: apiserver.key
                  secretName: v1beta1.servicecatalog.k8s.io-cert
  apiservicedefinitions:
    owned:
    - group: servicecatalog.k8s.io
      version: v1beta1
      kind: ClusterServiceClass
      name: clusterserviceclasses
      displayName: ClusterServiceClass
      description: A service catalog resource
      deploymentName: svcat-apiserver
      containerPort: 5443
    - group: servicecatalog.k8s.io
      version: v1beta1
      kind: ClusterServicePlan
      name: clusterserviceplans
      displayName: ClusterServicePlan
      description: A service catalog resource
      deploymentName: svcat-apiserver
      containerPort: 5443
    - group: servicecatalog.k8s.io
      version: v1beta1
      kind: ClusterServiceBroker
      name: clusterservicebrokers
      displayName: ClusterServiceBroker
      description: A service catalog resource
      deploymentName: svcat-apiserver
      containerPort: 5443
    - group: servicecatalog.k8s.io
      version: v1beta1
      kind: ServiceInstance
      name: serviceinstances
      displayName: ServiceInstance
      description: A service catalog resource
      deploymentName: svcat-apiserver
      containerPort: 5443
    - group: servicecatalog.k8s.io
      version: v1beta1
      kind: ServiceBinding
      name: servicebindings
      displayName: ServiceBinding
      description: A service catalog resource
      deploymentName: svcat-apiserver
      containerPort: 5443
    - group: servicecatalog.k8s.io
      version: v1beta1
      kind: ServiceClass
      name: serviceclasses
      displayName: ServiceClass
      description: A service catalog resource
      deploymentName: svcat-apiserver
      containerPort: 5443
    - group: servicecatalog.k8s.io
      version: v1beta1
      kind: ServicePlan
      name: serviceplans
      displayName: ServicePlan
      description: A service catalog resource
      deploymentName: svcat-apiserver
      containerPort: 5443
    - group: servicecatalog.k8s.io
      version: v1beta1
      kind: ServiceBroker
      name: servicebrokers
      displayName: ServiceBroker
      description: A service catalog resource
      deploymentName: svcat-apiserver
      containerPort: 5443
