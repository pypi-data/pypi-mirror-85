# {{ managed_message }}
---

os: linux
language: python
dist: {{ travis_ubuntu_version }}
cache: pip
python:
  {% for version in python_versions %}- '{{ version }}'
  {% endfor %}
arch:
  - amd64
  - arm64
install:
  {% for line in travis_extra_install_pre %}- {{ line }}
  {% endfor %}
  - pip install --upgrade pip {% for req in travis_additional_requirements %}{{ req }} {% endfor %}
  - pip install tox tox-travis
  {% if enable_tests %}- pip install coveralls coverage_pyver_pragma{% endif %}
  {% for line in travis_extra_install_post %}- {{ line }}
  {% endfor %}
script:
  - tox -vv
{% if enable_tests %}after_success:
  - coveralls
{% endif %}

stages:
  - test
{% if on_pypi %}  - deploy_pypi{% endif %}
{% if enable_conda %}  - deploy_conda{% endif %}

jobs:
  allow_failures:
    - arch: arm64{% if dev_versions %}
    - python: {{ dev_versions }}
    {% endif %}
  exclude:
    {% for version in python_versions[1:] %}- python: '{{ version }}'
      arch: arm64
    {% endfor %}
  include:
    - stage: test
      dist: bionic
      python: 3.8

{% if on_pypi %}    - stage: deploy_pypi
      python: "{{ python_deploy_version }}"
      script: skip
      deploy:
        on:
          tags: true
          repo: {{ username }}/{{ repo_name }}
        provider: pypi
        username: "DomDF"
        password:
          secure: {{ travis_pypi_secure }}
        distributions: "sdist bdist_wheel"
        skip_existing: true{% endif %}
{% if enable_conda %}    - stage: deploy_conda
      python: "{{ python_deploy_version }}"
      addons:
        apt:
          update: true
      install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        - bash miniconda.sh -b -p $HOME/miniconda
        - chmod +x .ci/travis_deploy_conda.sh
      script: skip
      deploy:
        provider: script
        script: .ci/travis_deploy_conda.sh || return 1;{% endif %}
