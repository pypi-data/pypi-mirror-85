version: 2.1
workflows:
  test_and_deploy:
    jobs:
      - test:
          name: "Test 3.6"
          version: "3.6"
          filters:  # required since `deploy` has tag filters AND requires `test`
            tags:
              only: /.*/
      - test:
          name: "Test 3.7"
          version: "3.7"
          filters:  # required since `deploy` has tag filters AND requires `test`
            tags:
              only: /.*/
      - test:
          name: "Test 3.8"
          version: "3.8"
          filters:  # required since `deploy` has tag filters AND requires `test`
            tags:
              only: /.*/
      - deploy:
          requires:
            - "Test 3.6"
            - "Test 3.7"
            - "Test 3.8"
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/

jobs:
  test:
    parameters:
      version:
        type: string
        default: latest
    docker:
      - image: circleci/python:<< parameters.version >>
    steps:
      - checkout
      - run:
          name: Install Python Dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r dev-requirements.txt
            pip install .

      - run:
          name: Install draw.io
          command : |
            wget -O drawio.deb https://github.com/jgraph/drawio-desktop/releases/download/v12.6.5/draw.io-amd64-12.6.5.deb
            sudo apt install libasound2 xvfb ./drawio.deb

      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            python -m pytest -vv

  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}
      - run:
          name: Install Python Dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}
          paths:
            - "venv"
      - run:
          name: Create ~/.pypirc for auth tokens
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_TOKEN" >> ~/.pypirc
      - run:
          name: Build Package
          command: |
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: Upload to PyPI
          command: |
            . venv/bin/activate
            twine upload dist/*