# coding: utf-8

"""
    Marketing API v.1.0

    IMPORTANT: This swagger links to Criteo production environment. Any test applied here will thus impact real campaigns.  # noqa: E501

    The version of the OpenAPI document: v.1.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class GoogleProductV3(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'offer_id': 'str',
        'title': 'str',
        'description': 'str',
        'link': 'str',
        'image_link': 'str',
        'additional_image_links': 'list[str]',
        'content_language': 'str',
        'target_country': 'str',
        'channel': 'str',
        'expiration_date': 'str',
        'adult': 'bool',
        'kind': 'str',
        'brand': 'str',
        'color': 'str',
        'google_product_category': 'str',
        'gtin': 'str',
        'item_group_id': 'str',
        'material': 'str',
        'mpn': 'str',
        'pattern': 'str',
        'price': 'Price',
        'sale_price': 'Price',
        'sale_price_effective_date': 'str',
        'shipping': 'list[ProductShippingV3]',
        'shipping_weight': 'ProductShippingWeightV3',
        'sizes': 'list[str]',
        'taxes': 'list[ProductTaxV3]',
        'custom_attributes': 'list[CustomAttributeV3]',
        'identifier_exists': 'bool',
        'installment': 'InstallmentV3',
        'loyalty_points': 'LoyaltyPointsV3',
        'multipack': 'object',
        'custom_label0': 'str',
        'custom_label1': 'str',
        'custom_label2': 'str',
        'custom_label3': 'str',
        'custom_label4': 'str',
        'is_bundle': 'bool',
        'mobile_link': 'str',
        'availability_date': 'str',
        'shipping_label': 'str',
        'unit_pricing_measure': 'UnitMeasure',
        'unit_pricing_base_measure': 'ProductUnitPricingBaseMeasureV3',
        'shipping_length': 'ProductShippingDimensionV3',
        'shipping_width': 'ProductShippingDimensionV3',
        'shipping_height': 'ProductShippingDimensionV3',
        'display_ads_id': 'str',
        'display_ads_similar_ids': 'str',
        'display_ads_title': 'str',
        'display_ads_link': 'str',
        'display_ads_value': 'float',
        'sell_on_google_quantity': 'str',
        'promotion_ids': 'list[str]',
        'max_handling_time': 'str',
        'min_handling_time': 'str',
        'cost_of_goods_sold': 'Price',
        'source': 'str',
        'included_destinations': 'list[str]',
        'excluded_destinations': 'list[str]',
        'ads_grouping': 'str',
        'ads_labels': 'list[str]',
        'ads_redirect': 'str',
        'product_types': 'list[str]',
        'age_group': 'str',
        'availability': 'str',
        'condition': 'str',
        'gender': 'str',
        'size_system': 'str',
        'size_type': 'str',
        'energy_efficiency_class': 'str',
        'min_energy_efficiency_class': 'str',
        'max_energy_efficiency_class': 'str',
        'tax_category': 'str',
        'transit_time_label': 'str'
    }

    attribute_map = {
        'id': 'id',
        'offer_id': 'offerId',
        'title': 'title',
        'description': 'description',
        'link': 'link',
        'image_link': 'imageLink',
        'additional_image_links': 'additionalImageLinks',
        'content_language': 'contentLanguage',
        'target_country': 'targetCountry',
        'channel': 'channel',
        'expiration_date': 'expirationDate',
        'adult': 'adult',
        'kind': 'kind',
        'brand': 'brand',
        'color': 'color',
        'google_product_category': 'googleProductCategory',
        'gtin': 'gtin',
        'item_group_id': 'itemGroupId',
        'material': 'material',
        'mpn': 'mpn',
        'pattern': 'pattern',
        'price': 'price',
        'sale_price': 'salePrice',
        'sale_price_effective_date': 'salePriceEffectiveDate',
        'shipping': 'shipping',
        'shipping_weight': 'shippingWeight',
        'sizes': 'sizes',
        'taxes': 'taxes',
        'custom_attributes': 'customAttributes',
        'identifier_exists': 'identifierExists',
        'installment': 'installment',
        'loyalty_points': 'loyaltyPoints',
        'multipack': 'multipack',
        'custom_label0': 'customLabel0',
        'custom_label1': 'customLabel1',
        'custom_label2': 'customLabel2',
        'custom_label3': 'customLabel3',
        'custom_label4': 'customLabel4',
        'is_bundle': 'isBundle',
        'mobile_link': 'mobileLink',
        'availability_date': 'availabilityDate',
        'shipping_label': 'shippingLabel',
        'unit_pricing_measure': 'unitPricingMeasure',
        'unit_pricing_base_measure': 'unitPricingBaseMeasure',
        'shipping_length': 'shippingLength',
        'shipping_width': 'shippingWidth',
        'shipping_height': 'shippingHeight',
        'display_ads_id': 'displayAdsId',
        'display_ads_similar_ids': 'displayAdsSimilarIds',
        'display_ads_title': 'displayAdsTitle',
        'display_ads_link': 'displayAdsLink',
        'display_ads_value': 'displayAdsValue',
        'sell_on_google_quantity': 'sellOnGoogleQuantity',
        'promotion_ids': 'promotionIds',
        'max_handling_time': 'maxHandlingTime',
        'min_handling_time': 'minHandlingTime',
        'cost_of_goods_sold': 'costOfGoodsSold',
        'source': 'source',
        'included_destinations': 'includedDestinations',
        'excluded_destinations': 'excludedDestinations',
        'ads_grouping': 'adsGrouping',
        'ads_labels': 'adsLabels',
        'ads_redirect': 'adsRedirect',
        'product_types': 'productTypes',
        'age_group': 'ageGroup',
        'availability': 'availability',
        'condition': 'condition',
        'gender': 'gender',
        'size_system': 'sizeSystem',
        'size_type': 'sizeType',
        'energy_efficiency_class': 'energyEfficiencyClass',
        'min_energy_efficiency_class': 'minEnergyEfficiencyClass',
        'max_energy_efficiency_class': 'maxEnergyEfficiencyClass',
        'tax_category': 'taxCategory',
        'transit_time_label': 'transitTimeLabel'
    }

    def __init__(self, id=None, offer_id=None, title=None, description=None, link=None, image_link=None, additional_image_links=None, content_language=None, target_country=None, channel=None, expiration_date=None, adult=None, kind=None, brand=None, color=None, google_product_category=None, gtin=None, item_group_id=None, material=None, mpn=None, pattern=None, price=None, sale_price=None, sale_price_effective_date=None, shipping=None, shipping_weight=None, sizes=None, taxes=None, custom_attributes=None, identifier_exists=None, installment=None, loyalty_points=None, multipack=None, custom_label0=None, custom_label1=None, custom_label2=None, custom_label3=None, custom_label4=None, is_bundle=None, mobile_link=None, availability_date=None, shipping_label=None, unit_pricing_measure=None, unit_pricing_base_measure=None, shipping_length=None, shipping_width=None, shipping_height=None, display_ads_id=None, display_ads_similar_ids=None, display_ads_title=None, display_ads_link=None, display_ads_value=None, sell_on_google_quantity=None, promotion_ids=None, max_handling_time=None, min_handling_time=None, cost_of_goods_sold=None, source=None, included_destinations=None, excluded_destinations=None, ads_grouping=None, ads_labels=None, ads_redirect=None, product_types=None, age_group=None, availability=None, condition=None, gender=None, size_system=None, size_type=None, energy_efficiency_class=None, min_energy_efficiency_class=None, max_energy_efficiency_class=None, tax_category=None, transit_time_label=None):  # noqa: E501
        """GoogleProductV3 - a model defined in OpenAPI"""  # noqa: E501

        self._id = None
        self._offer_id = None
        self._title = None
        self._description = None
        self._link = None
        self._image_link = None
        self._additional_image_links = None
        self._content_language = None
        self._target_country = None
        self._channel = None
        self._expiration_date = None
        self._adult = None
        self._kind = None
        self._brand = None
        self._color = None
        self._google_product_category = None
        self._gtin = None
        self._item_group_id = None
        self._material = None
        self._mpn = None
        self._pattern = None
        self._price = None
        self._sale_price = None
        self._sale_price_effective_date = None
        self._shipping = None
        self._shipping_weight = None
        self._sizes = None
        self._taxes = None
        self._custom_attributes = None
        self._identifier_exists = None
        self._installment = None
        self._loyalty_points = None
        self._multipack = None
        self._custom_label0 = None
        self._custom_label1 = None
        self._custom_label2 = None
        self._custom_label3 = None
        self._custom_label4 = None
        self._is_bundle = None
        self._mobile_link = None
        self._availability_date = None
        self._shipping_label = None
        self._unit_pricing_measure = None
        self._unit_pricing_base_measure = None
        self._shipping_length = None
        self._shipping_width = None
        self._shipping_height = None
        self._display_ads_id = None
        self._display_ads_similar_ids = None
        self._display_ads_title = None
        self._display_ads_link = None
        self._display_ads_value = None
        self._sell_on_google_quantity = None
        self._promotion_ids = None
        self._max_handling_time = None
        self._min_handling_time = None
        self._cost_of_goods_sold = None
        self._source = None
        self._included_destinations = None
        self._excluded_destinations = None
        self._ads_grouping = None
        self._ads_labels = None
        self._ads_redirect = None
        self._product_types = None
        self._age_group = None
        self._availability = None
        self._condition = None
        self._gender = None
        self._size_system = None
        self._size_type = None
        self._energy_efficiency_class = None
        self._min_energy_efficiency_class = None
        self._max_energy_efficiency_class = None
        self._tax_category = None
        self._transit_time_label = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if offer_id is not None:
            self.offer_id = offer_id
        if title is not None:
            self.title = title
        if description is not None:
            self.description = description
        if link is not None:
            self.link = link
        if image_link is not None:
            self.image_link = image_link
        if additional_image_links is not None:
            self.additional_image_links = additional_image_links
        if content_language is not None:
            self.content_language = content_language
        if target_country is not None:
            self.target_country = target_country
        if channel is not None:
            self.channel = channel
        if expiration_date is not None:
            self.expiration_date = expiration_date
        if adult is not None:
            self.adult = adult
        if kind is not None:
            self.kind = kind
        if brand is not None:
            self.brand = brand
        if color is not None:
            self.color = color
        if google_product_category is not None:
            self.google_product_category = google_product_category
        if gtin is not None:
            self.gtin = gtin
        if item_group_id is not None:
            self.item_group_id = item_group_id
        if material is not None:
            self.material = material
        if mpn is not None:
            self.mpn = mpn
        if pattern is not None:
            self.pattern = pattern
        if price is not None:
            self.price = price
        if sale_price is not None:
            self.sale_price = sale_price
        if sale_price_effective_date is not None:
            self.sale_price_effective_date = sale_price_effective_date
        if shipping is not None:
            self.shipping = shipping
        if shipping_weight is not None:
            self.shipping_weight = shipping_weight
        if sizes is not None:
            self.sizes = sizes
        if taxes is not None:
            self.taxes = taxes
        if custom_attributes is not None:
            self.custom_attributes = custom_attributes
        if identifier_exists is not None:
            self.identifier_exists = identifier_exists
        if installment is not None:
            self.installment = installment
        if loyalty_points is not None:
            self.loyalty_points = loyalty_points
        if multipack is not None:
            self.multipack = multipack
        if custom_label0 is not None:
            self.custom_label0 = custom_label0
        if custom_label1 is not None:
            self.custom_label1 = custom_label1
        if custom_label2 is not None:
            self.custom_label2 = custom_label2
        if custom_label3 is not None:
            self.custom_label3 = custom_label3
        if custom_label4 is not None:
            self.custom_label4 = custom_label4
        if is_bundle is not None:
            self.is_bundle = is_bundle
        if mobile_link is not None:
            self.mobile_link = mobile_link
        if availability_date is not None:
            self.availability_date = availability_date
        if shipping_label is not None:
            self.shipping_label = shipping_label
        if unit_pricing_measure is not None:
            self.unit_pricing_measure = unit_pricing_measure
        if unit_pricing_base_measure is not None:
            self.unit_pricing_base_measure = unit_pricing_base_measure
        if shipping_length is not None:
            self.shipping_length = shipping_length
        if shipping_width is not None:
            self.shipping_width = shipping_width
        if shipping_height is not None:
            self.shipping_height = shipping_height
        if display_ads_id is not None:
            self.display_ads_id = display_ads_id
        if display_ads_similar_ids is not None:
            self.display_ads_similar_ids = display_ads_similar_ids
        if display_ads_title is not None:
            self.display_ads_title = display_ads_title
        if display_ads_link is not None:
            self.display_ads_link = display_ads_link
        if display_ads_value is not None:
            self.display_ads_value = display_ads_value
        if sell_on_google_quantity is not None:
            self.sell_on_google_quantity = sell_on_google_quantity
        if promotion_ids is not None:
            self.promotion_ids = promotion_ids
        if max_handling_time is not None:
            self.max_handling_time = max_handling_time
        if min_handling_time is not None:
            self.min_handling_time = min_handling_time
        if cost_of_goods_sold is not None:
            self.cost_of_goods_sold = cost_of_goods_sold
        if source is not None:
            self.source = source
        if included_destinations is not None:
            self.included_destinations = included_destinations
        if excluded_destinations is not None:
            self.excluded_destinations = excluded_destinations
        if ads_grouping is not None:
            self.ads_grouping = ads_grouping
        if ads_labels is not None:
            self.ads_labels = ads_labels
        if ads_redirect is not None:
            self.ads_redirect = ads_redirect
        if product_types is not None:
            self.product_types = product_types
        if age_group is not None:
            self.age_group = age_group
        if availability is not None:
            self.availability = availability
        if condition is not None:
            self.condition = condition
        if gender is not None:
            self.gender = gender
        if size_system is not None:
            self.size_system = size_system
        if size_type is not None:
            self.size_type = size_type
        if energy_efficiency_class is not None:
            self.energy_efficiency_class = energy_efficiency_class
        if min_energy_efficiency_class is not None:
            self.min_energy_efficiency_class = min_energy_efficiency_class
        if max_energy_efficiency_class is not None:
            self.max_energy_efficiency_class = max_energy_efficiency_class
        if tax_category is not None:
            self.tax_category = tax_category
        if transit_time_label is not None:
            self.transit_time_label = transit_time_label

    @property
    def id(self):
        """Gets the id of this GoogleProductV3.  # noqa: E501

        A unique identifier for the item.  # noqa: E501

        :return: The id of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleProductV3.

        A unique identifier for the item.  # noqa: E501

        :param id: The id of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def offer_id(self):
        """Gets the offer_id of this GoogleProductV3.  # noqa: E501

        Not used by Criteo.  # noqa: E501

        :return: The offer_id of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this GoogleProductV3.

        Not used by Criteo.  # noqa: E501

        :param offer_id: The offer_id of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._offer_id = offer_id

    @property
    def title(self):
        """Gets the title of this GoogleProductV3.  # noqa: E501

        Title of the item.  # noqa: E501

        :return: The title of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this GoogleProductV3.

        Title of the item.  # noqa: E501

        :param title: The title of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def description(self):
        """Gets the description of this GoogleProductV3.  # noqa: E501

        Description of the item.  # noqa: E501

        :return: The description of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleProductV3.

        Description of the item.  # noqa: E501

        :param description: The description of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def link(self):
        """Gets the link of this GoogleProductV3.  # noqa: E501

        URL directly linking to your item's page on your website.  # noqa: E501

        :return: The link of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this GoogleProductV3.

        URL directly linking to your item's page on your website.  # noqa: E501

        :param link: The link of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._link = link

    @property
    def image_link(self):
        """Gets the image_link of this GoogleProductV3.  # noqa: E501

        URL of an image of the item.  # noqa: E501

        :return: The image_link of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._image_link

    @image_link.setter
    def image_link(self, image_link):
        """Sets the image_link of this GoogleProductV3.

        URL of an image of the item.  # noqa: E501

        :param image_link: The image_link of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._image_link = image_link

    @property
    def additional_image_links(self):
        """Gets the additional_image_links of this GoogleProductV3.  # noqa: E501

        Additional URLs of images of the item.  # noqa: E501

        :return: The additional_image_links of this GoogleProductV3.  # noqa: E501
        :rtype: list[str]
        """
        return self._additional_image_links

    @additional_image_links.setter
    def additional_image_links(self, additional_image_links):
        """Sets the additional_image_links of this GoogleProductV3.

        Additional URLs of images of the item.  # noqa: E501

        :param additional_image_links: The additional_image_links of this GoogleProductV3.  # noqa: E501
        :type: list[str]
        """

        self._additional_image_links = additional_image_links

    @property
    def content_language(self):
        """Gets the content_language of this GoogleProductV3.  # noqa: E501

        The two-letter ISO 639-1 language code for the item.  # noqa: E501

        :return: The content_language of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._content_language

    @content_language.setter
    def content_language(self, content_language):
        """Sets the content_language of this GoogleProductV3.

        The two-letter ISO 639-1 language code for the item.  # noqa: E501

        :param content_language: The content_language of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._content_language = content_language

    @property
    def target_country(self):
        """Gets the target_country of this GoogleProductV3.  # noqa: E501

        The CLDR territory code for the item.  # noqa: E501

        :return: The target_country of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._target_country

    @target_country.setter
    def target_country(self, target_country):
        """Sets the target_country of this GoogleProductV3.

        The CLDR territory code for the item.  # noqa: E501

        :param target_country: The target_country of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._target_country = target_country

    @property
    def channel(self):
        """Gets the channel of this GoogleProductV3.  # noqa: E501

        The item's channel (online only).  # noqa: E501

        :return: The channel of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this GoogleProductV3.

        The item's channel (online only).  # noqa: E501

        :param channel: The channel of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._channel = channel

    @property
    def expiration_date(self):
        """Gets the expiration_date of this GoogleProductV3.  # noqa: E501

        Date on which the item should expire, as specified upon insertion, in ISO 8601 format.  # noqa: E501

        :return: The expiration_date of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this GoogleProductV3.

        Date on which the item should expire, as specified upon insertion, in ISO 8601 format.  # noqa: E501

        :param expiration_date: The expiration_date of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._expiration_date = expiration_date

    @property
    def adult(self):
        """Gets the adult of this GoogleProductV3.  # noqa: E501

        Set to true if the item is targeted towards adults.  # noqa: E501

        :return: The adult of this GoogleProductV3.  # noqa: E501
        :rtype: bool
        """
        return self._adult

    @adult.setter
    def adult(self, adult):
        """Sets the adult of this GoogleProductV3.

        Set to true if the item is targeted towards adults.  # noqa: E501

        :param adult: The adult of this GoogleProductV3.  # noqa: E501
        :type: bool
        """

        self._adult = adult

    @property
    def kind(self):
        """Gets the kind of this GoogleProductV3.  # noqa: E501

        Identifies what kind of resource this is.  # noqa: E501

        :return: The kind of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this GoogleProductV3.

        Identifies what kind of resource this is.  # noqa: E501

        :param kind: The kind of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._kind = kind

    @property
    def brand(self):
        """Gets the brand of this GoogleProductV3.  # noqa: E501

        Brand of the item.  # noqa: E501

        :return: The brand of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this GoogleProductV3.

        Brand of the item.  # noqa: E501

        :param brand: The brand of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._brand = brand

    @property
    def color(self):
        """Gets the color of this GoogleProductV3.  # noqa: E501

        Color of the item.  # noqa: E501

        :return: The color of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this GoogleProductV3.

        Color of the item.  # noqa: E501

        :param color: The color of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._color = color

    @property
    def google_product_category(self):
        """Gets the google_product_category of this GoogleProductV3.  # noqa: E501

        Google's category of the item (see Google product taxonomy).  # noqa: E501

        :return: The google_product_category of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._google_product_category

    @google_product_category.setter
    def google_product_category(self, google_product_category):
        """Sets the google_product_category of this GoogleProductV3.

        Google's category of the item (see Google product taxonomy).  # noqa: E501

        :param google_product_category: The google_product_category of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._google_product_category = google_product_category

    @property
    def gtin(self):
        """Gets the gtin of this GoogleProductV3.  # noqa: E501

        Global Trade Item Number (GTIN) of the item.  # noqa: E501

        :return: The gtin of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._gtin

    @gtin.setter
    def gtin(self, gtin):
        """Sets the gtin of this GoogleProductV3.

        Global Trade Item Number (GTIN) of the item.  # noqa: E501

        :param gtin: The gtin of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._gtin = gtin

    @property
    def item_group_id(self):
        """Gets the item_group_id of this GoogleProductV3.  # noqa: E501

        Shared identifier for all variants of the same product.  # noqa: E501

        :return: The item_group_id of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._item_group_id

    @item_group_id.setter
    def item_group_id(self, item_group_id):
        """Sets the item_group_id of this GoogleProductV3.

        Shared identifier for all variants of the same product.  # noqa: E501

        :param item_group_id: The item_group_id of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._item_group_id = item_group_id

    @property
    def material(self):
        """Gets the material of this GoogleProductV3.  # noqa: E501

        The material of which the item is made.  # noqa: E501

        :return: The material of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._material

    @material.setter
    def material(self, material):
        """Sets the material of this GoogleProductV3.

        The material of which the item is made.  # noqa: E501

        :param material: The material of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._material = material

    @property
    def mpn(self):
        """Gets the mpn of this GoogleProductV3.  # noqa: E501

        Manufacturer Part Number (MPN) of the item.  # noqa: E501

        :return: The mpn of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._mpn

    @mpn.setter
    def mpn(self, mpn):
        """Sets the mpn of this GoogleProductV3.

        Manufacturer Part Number (MPN) of the item.  # noqa: E501

        :param mpn: The mpn of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._mpn = mpn

    @property
    def pattern(self):
        """Gets the pattern of this GoogleProductV3.  # noqa: E501

        The item's pattern (e.g. polka dots).  # noqa: E501

        :return: The pattern of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._pattern

    @pattern.setter
    def pattern(self, pattern):
        """Sets the pattern of this GoogleProductV3.

        The item's pattern (e.g. polka dots).  # noqa: E501

        :param pattern: The pattern of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._pattern = pattern

    @property
    def price(self):
        """Gets the price of this GoogleProductV3.  # noqa: E501


        :return: The price of this GoogleProductV3.  # noqa: E501
        :rtype: Price
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this GoogleProductV3.


        :param price: The price of this GoogleProductV3.  # noqa: E501
        :type: Price
        """

        self._price = price

    @property
    def sale_price(self):
        """Gets the sale_price of this GoogleProductV3.  # noqa: E501


        :return: The sale_price of this GoogleProductV3.  # noqa: E501
        :rtype: Price
        """
        return self._sale_price

    @sale_price.setter
    def sale_price(self, sale_price):
        """Sets the sale_price of this GoogleProductV3.


        :param sale_price: The sale_price of this GoogleProductV3.  # noqa: E501
        :type: Price
        """

        self._sale_price = sale_price

    @property
    def sale_price_effective_date(self):
        """Gets the sale_price_effective_date of this GoogleProductV3.  # noqa: E501

        Date range during which the item is on sale.  # noqa: E501

        :return: The sale_price_effective_date of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._sale_price_effective_date

    @sale_price_effective_date.setter
    def sale_price_effective_date(self, sale_price_effective_date):
        """Sets the sale_price_effective_date of this GoogleProductV3.

        Date range during which the item is on sale.  # noqa: E501

        :param sale_price_effective_date: The sale_price_effective_date of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._sale_price_effective_date = sale_price_effective_date

    @property
    def shipping(self):
        """Gets the shipping of this GoogleProductV3.  # noqa: E501

        Shipping rules.  # noqa: E501

        :return: The shipping of this GoogleProductV3.  # noqa: E501
        :rtype: list[ProductShippingV3]
        """
        return self._shipping

    @shipping.setter
    def shipping(self, shipping):
        """Sets the shipping of this GoogleProductV3.

        Shipping rules.  # noqa: E501

        :param shipping: The shipping of this GoogleProductV3.  # noqa: E501
        :type: list[ProductShippingV3]
        """

        self._shipping = shipping

    @property
    def shipping_weight(self):
        """Gets the shipping_weight of this GoogleProductV3.  # noqa: E501


        :return: The shipping_weight of this GoogleProductV3.  # noqa: E501
        :rtype: ProductShippingWeightV3
        """
        return self._shipping_weight

    @shipping_weight.setter
    def shipping_weight(self, shipping_weight):
        """Sets the shipping_weight of this GoogleProductV3.


        :param shipping_weight: The shipping_weight of this GoogleProductV3.  # noqa: E501
        :type: ProductShippingWeightV3
        """

        self._shipping_weight = shipping_weight

    @property
    def sizes(self):
        """Gets the sizes of this GoogleProductV3.  # noqa: E501

        Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same itemGroupId value.  # noqa: E501

        :return: The sizes of this GoogleProductV3.  # noqa: E501
        :rtype: list[str]
        """
        return self._sizes

    @sizes.setter
    def sizes(self, sizes):
        """Sets the sizes of this GoogleProductV3.

        Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same itemGroupId value.  # noqa: E501

        :param sizes: The sizes of this GoogleProductV3.  # noqa: E501
        :type: list[str]
        """

        self._sizes = sizes

    @property
    def taxes(self):
        """Gets the taxes of this GoogleProductV3.  # noqa: E501

        Tax information.  # noqa: E501

        :return: The taxes of this GoogleProductV3.  # noqa: E501
        :rtype: list[ProductTaxV3]
        """
        return self._taxes

    @taxes.setter
    def taxes(self, taxes):
        """Sets the taxes of this GoogleProductV3.

        Tax information.  # noqa: E501

        :param taxes: The taxes of this GoogleProductV3.  # noqa: E501
        :type: list[ProductTaxV3]
        """

        self._taxes = taxes

    @property
    def custom_attributes(self):
        """Gets the custom_attributes of this GoogleProductV3.  # noqa: E501

        A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g., { \"name\": \"size type\", \"value\": \"regular\" }). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Shopping Actions.  # noqa: E501

        :return: The custom_attributes of this GoogleProductV3.  # noqa: E501
        :rtype: list[CustomAttributeV3]
        """
        return self._custom_attributes

    @custom_attributes.setter
    def custom_attributes(self, custom_attributes):
        """Sets the custom_attributes of this GoogleProductV3.

        A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g., { \"name\": \"size type\", \"value\": \"regular\" }). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Shopping Actions.  # noqa: E501

        :param custom_attributes: The custom_attributes of this GoogleProductV3.  # noqa: E501
        :type: list[CustomAttributeV3]
        """

        self._custom_attributes = custom_attributes

    @property
    def identifier_exists(self):
        """Gets the identifier_exists of this GoogleProductV3.  # noqa: E501

        False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.  # noqa: E501

        :return: The identifier_exists of this GoogleProductV3.  # noqa: E501
        :rtype: bool
        """
        return self._identifier_exists

    @identifier_exists.setter
    def identifier_exists(self, identifier_exists):
        """Sets the identifier_exists of this GoogleProductV3.

        False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.  # noqa: E501

        :param identifier_exists: The identifier_exists of this GoogleProductV3.  # noqa: E501
        :type: bool
        """

        self._identifier_exists = identifier_exists

    @property
    def installment(self):
        """Gets the installment of this GoogleProductV3.  # noqa: E501


        :return: The installment of this GoogleProductV3.  # noqa: E501
        :rtype: InstallmentV3
        """
        return self._installment

    @installment.setter
    def installment(self, installment):
        """Sets the installment of this GoogleProductV3.


        :param installment: The installment of this GoogleProductV3.  # noqa: E501
        :type: InstallmentV3
        """

        self._installment = installment

    @property
    def loyalty_points(self):
        """Gets the loyalty_points of this GoogleProductV3.  # noqa: E501


        :return: The loyalty_points of this GoogleProductV3.  # noqa: E501
        :rtype: LoyaltyPointsV3
        """
        return self._loyalty_points

    @loyalty_points.setter
    def loyalty_points(self, loyalty_points):
        """Sets the loyalty_points of this GoogleProductV3.


        :param loyalty_points: The loyalty_points of this GoogleProductV3.  # noqa: E501
        :type: LoyaltyPointsV3
        """

        self._loyalty_points = loyalty_points

    @property
    def multipack(self):
        """Gets the multipack of this GoogleProductV3.  # noqa: E501

        The number of identical products in a merchant-defined multipack. To avoid any overflow issue, pass it as a string.  # noqa: E501

        :return: The multipack of this GoogleProductV3.  # noqa: E501
        :rtype: object
        """
        return self._multipack

    @multipack.setter
    def multipack(self, multipack):
        """Sets the multipack of this GoogleProductV3.

        The number of identical products in a merchant-defined multipack. To avoid any overflow issue, pass it as a string.  # noqa: E501

        :param multipack: The multipack of this GoogleProductV3.  # noqa: E501
        :type: object
        """

        self._multipack = multipack

    @property
    def custom_label0(self):
        """Gets the custom_label0 of this GoogleProductV3.  # noqa: E501

        Custom label 0 for custom grouping of items in a Shopping campaign.  # noqa: E501

        :return: The custom_label0 of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._custom_label0

    @custom_label0.setter
    def custom_label0(self, custom_label0):
        """Sets the custom_label0 of this GoogleProductV3.

        Custom label 0 for custom grouping of items in a Shopping campaign.  # noqa: E501

        :param custom_label0: The custom_label0 of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._custom_label0 = custom_label0

    @property
    def custom_label1(self):
        """Gets the custom_label1 of this GoogleProductV3.  # noqa: E501

        Custom label 1 for custom grouping of items in a Shopping campaign.  # noqa: E501

        :return: The custom_label1 of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._custom_label1

    @custom_label1.setter
    def custom_label1(self, custom_label1):
        """Sets the custom_label1 of this GoogleProductV3.

        Custom label 1 for custom grouping of items in a Shopping campaign.  # noqa: E501

        :param custom_label1: The custom_label1 of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._custom_label1 = custom_label1

    @property
    def custom_label2(self):
        """Gets the custom_label2 of this GoogleProductV3.  # noqa: E501

        Custom label 2 for custom grouping of items in a Shopping campaign.  # noqa: E501

        :return: The custom_label2 of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._custom_label2

    @custom_label2.setter
    def custom_label2(self, custom_label2):
        """Sets the custom_label2 of this GoogleProductV3.

        Custom label 2 for custom grouping of items in a Shopping campaign.  # noqa: E501

        :param custom_label2: The custom_label2 of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._custom_label2 = custom_label2

    @property
    def custom_label3(self):
        """Gets the custom_label3 of this GoogleProductV3.  # noqa: E501

        Custom label 3 for custom grouping of items in a Shopping campaign.  # noqa: E501

        :return: The custom_label3 of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._custom_label3

    @custom_label3.setter
    def custom_label3(self, custom_label3):
        """Sets the custom_label3 of this GoogleProductV3.

        Custom label 3 for custom grouping of items in a Shopping campaign.  # noqa: E501

        :param custom_label3: The custom_label3 of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._custom_label3 = custom_label3

    @property
    def custom_label4(self):
        """Gets the custom_label4 of this GoogleProductV3.  # noqa: E501

        Custom label 4 for custom grouping of items in a Shopping campaign.  # noqa: E501

        :return: The custom_label4 of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._custom_label4

    @custom_label4.setter
    def custom_label4(self, custom_label4):
        """Sets the custom_label4 of this GoogleProductV3.

        Custom label 4 for custom grouping of items in a Shopping campaign.  # noqa: E501

        :param custom_label4: The custom_label4 of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._custom_label4 = custom_label4

    @property
    def is_bundle(self):
        """Gets the is_bundle of this GoogleProductV3.  # noqa: E501

        Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.  # noqa: E501

        :return: The is_bundle of this GoogleProductV3.  # noqa: E501
        :rtype: bool
        """
        return self._is_bundle

    @is_bundle.setter
    def is_bundle(self, is_bundle):
        """Sets the is_bundle of this GoogleProductV3.

        Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.  # noqa: E501

        :param is_bundle: The is_bundle of this GoogleProductV3.  # noqa: E501
        :type: bool
        """

        self._is_bundle = is_bundle

    @property
    def mobile_link(self):
        """Gets the mobile_link of this GoogleProductV3.  # noqa: E501

        accounts.link to a mobile-optimized version of the landing page.  # noqa: E501

        :return: The mobile_link of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._mobile_link

    @mobile_link.setter
    def mobile_link(self, mobile_link):
        """Sets the mobile_link of this GoogleProductV3.

        accounts.link to a mobile-optimized version of the landing page.  # noqa: E501

        :param mobile_link: The mobile_link of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._mobile_link = mobile_link

    @property
    def availability_date(self):
        """Gets the availability_date of this GoogleProductV3.  # noqa: E501

        The day a pre-ordered product becomes available for delivery, in ISO 8601 format.  # noqa: E501

        :return: The availability_date of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._availability_date

    @availability_date.setter
    def availability_date(self, availability_date):
        """Sets the availability_date of this GoogleProductV3.

        The day a pre-ordered product becomes available for delivery, in ISO 8601 format.  # noqa: E501

        :param availability_date: The availability_date of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._availability_date = availability_date

    @property
    def shipping_label(self):
        """Gets the shipping_label of this GoogleProductV3.  # noqa: E501

        The shipping label of the product, used to group product in account-level shipping rules.  # noqa: E501

        :return: The shipping_label of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._shipping_label

    @shipping_label.setter
    def shipping_label(self, shipping_label):
        """Sets the shipping_label of this GoogleProductV3.

        The shipping label of the product, used to group product in account-level shipping rules.  # noqa: E501

        :param shipping_label: The shipping_label of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._shipping_label = shipping_label

    @property
    def unit_pricing_measure(self):
        """Gets the unit_pricing_measure of this GoogleProductV3.  # noqa: E501


        :return: The unit_pricing_measure of this GoogleProductV3.  # noqa: E501
        :rtype: UnitMeasure
        """
        return self._unit_pricing_measure

    @unit_pricing_measure.setter
    def unit_pricing_measure(self, unit_pricing_measure):
        """Sets the unit_pricing_measure of this GoogleProductV3.


        :param unit_pricing_measure: The unit_pricing_measure of this GoogleProductV3.  # noqa: E501
        :type: UnitMeasure
        """

        self._unit_pricing_measure = unit_pricing_measure

    @property
    def unit_pricing_base_measure(self):
        """Gets the unit_pricing_base_measure of this GoogleProductV3.  # noqa: E501


        :return: The unit_pricing_base_measure of this GoogleProductV3.  # noqa: E501
        :rtype: ProductUnitPricingBaseMeasureV3
        """
        return self._unit_pricing_base_measure

    @unit_pricing_base_measure.setter
    def unit_pricing_base_measure(self, unit_pricing_base_measure):
        """Sets the unit_pricing_base_measure of this GoogleProductV3.


        :param unit_pricing_base_measure: The unit_pricing_base_measure of this GoogleProductV3.  # noqa: E501
        :type: ProductUnitPricingBaseMeasureV3
        """

        self._unit_pricing_base_measure = unit_pricing_base_measure

    @property
    def shipping_length(self):
        """Gets the shipping_length of this GoogleProductV3.  # noqa: E501


        :return: The shipping_length of this GoogleProductV3.  # noqa: E501
        :rtype: ProductShippingDimensionV3
        """
        return self._shipping_length

    @shipping_length.setter
    def shipping_length(self, shipping_length):
        """Sets the shipping_length of this GoogleProductV3.


        :param shipping_length: The shipping_length of this GoogleProductV3.  # noqa: E501
        :type: ProductShippingDimensionV3
        """

        self._shipping_length = shipping_length

    @property
    def shipping_width(self):
        """Gets the shipping_width of this GoogleProductV3.  # noqa: E501


        :return: The shipping_width of this GoogleProductV3.  # noqa: E501
        :rtype: ProductShippingDimensionV3
        """
        return self._shipping_width

    @shipping_width.setter
    def shipping_width(self, shipping_width):
        """Sets the shipping_width of this GoogleProductV3.


        :param shipping_width: The shipping_width of this GoogleProductV3.  # noqa: E501
        :type: ProductShippingDimensionV3
        """

        self._shipping_width = shipping_width

    @property
    def shipping_height(self):
        """Gets the shipping_height of this GoogleProductV3.  # noqa: E501


        :return: The shipping_height of this GoogleProductV3.  # noqa: E501
        :rtype: ProductShippingDimensionV3
        """
        return self._shipping_height

    @shipping_height.setter
    def shipping_height(self, shipping_height):
        """Sets the shipping_height of this GoogleProductV3.


        :param shipping_height: The shipping_height of this GoogleProductV3.  # noqa: E501
        :type: ProductShippingDimensionV3
        """

        self._shipping_height = shipping_height

    @property
    def display_ads_id(self):
        """Gets the display_ads_id of this GoogleProductV3.  # noqa: E501

        An identifier for an item for dynamic remarketing campaigns.  # noqa: E501

        :return: The display_ads_id of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._display_ads_id

    @display_ads_id.setter
    def display_ads_id(self, display_ads_id):
        """Sets the display_ads_id of this GoogleProductV3.

        An identifier for an item for dynamic remarketing campaigns.  # noqa: E501

        :param display_ads_id: The display_ads_id of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._display_ads_id = display_ads_id

    @property
    def display_ads_similar_ids(self):
        """Gets the display_ads_similar_ids of this GoogleProductV3.  # noqa: E501

        Advertiser-specified recommendations.  # noqa: E501

        :return: The display_ads_similar_ids of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._display_ads_similar_ids

    @display_ads_similar_ids.setter
    def display_ads_similar_ids(self, display_ads_similar_ids):
        """Sets the display_ads_similar_ids of this GoogleProductV3.

        Advertiser-specified recommendations.  # noqa: E501

        :param display_ads_similar_ids: The display_ads_similar_ids of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._display_ads_similar_ids = display_ads_similar_ids

    @property
    def display_ads_title(self):
        """Gets the display_ads_title of this GoogleProductV3.  # noqa: E501

        Title of an item for dynamic remarketing campaigns.  # noqa: E501

        :return: The display_ads_title of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._display_ads_title

    @display_ads_title.setter
    def display_ads_title(self, display_ads_title):
        """Sets the display_ads_title of this GoogleProductV3.

        Title of an item for dynamic remarketing campaigns.  # noqa: E501

        :param display_ads_title: The display_ads_title of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._display_ads_title = display_ads_title

    @property
    def display_ads_link(self):
        """Gets the display_ads_link of this GoogleProductV3.  # noqa: E501

        URL directly to your item's landing page for dynamic remarketing campaigns.  # noqa: E501

        :return: The display_ads_link of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._display_ads_link

    @display_ads_link.setter
    def display_ads_link(self, display_ads_link):
        """Sets the display_ads_link of this GoogleProductV3.

        URL directly to your item's landing page for dynamic remarketing campaigns.  # noqa: E501

        :param display_ads_link: The display_ads_link of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._display_ads_link = display_ads_link

    @property
    def display_ads_value(self):
        """Gets the display_ads_value of this GoogleProductV3.  # noqa: E501

        Offer margin for dynamic remarketing campaigns.  # noqa: E501

        :return: The display_ads_value of this GoogleProductV3.  # noqa: E501
        :rtype: float
        """
        return self._display_ads_value

    @display_ads_value.setter
    def display_ads_value(self, display_ads_value):
        """Sets the display_ads_value of this GoogleProductV3.

        Offer margin for dynamic remarketing campaigns.  # noqa: E501

        :param display_ads_value: The display_ads_value of this GoogleProductV3.  # noqa: E501
        :type: float
        """

        self._display_ads_value = display_ads_value

    @property
    def sell_on_google_quantity(self):
        """Gets the sell_on_google_quantity of this GoogleProductV3.  # noqa: E501

        The quantity of the product that is available for selling on Google. Supported only for online products.  # noqa: E501

        :return: The sell_on_google_quantity of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._sell_on_google_quantity

    @sell_on_google_quantity.setter
    def sell_on_google_quantity(self, sell_on_google_quantity):
        """Sets the sell_on_google_quantity of this GoogleProductV3.

        The quantity of the product that is available for selling on Google. Supported only for online products.  # noqa: E501

        :param sell_on_google_quantity: The sell_on_google_quantity of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._sell_on_google_quantity = sell_on_google_quantity

    @property
    def promotion_ids(self):
        """Gets the promotion_ids of this GoogleProductV3.  # noqa: E501

        The unique ID of a promotion.  # noqa: E501

        :return: The promotion_ids of this GoogleProductV3.  # noqa: E501
        :rtype: list[str]
        """
        return self._promotion_ids

    @promotion_ids.setter
    def promotion_ids(self, promotion_ids):
        """Sets the promotion_ids of this GoogleProductV3.

        The unique ID of a promotion.  # noqa: E501

        :param promotion_ids: The promotion_ids of this GoogleProductV3.  # noqa: E501
        :type: list[str]
        """

        self._promotion_ids = promotion_ids

    @property
    def max_handling_time(self):
        """Gets the max_handling_time of this GoogleProductV3.  # noqa: E501

        Maximal product handling time (in business days).  # noqa: E501

        :return: The max_handling_time of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._max_handling_time

    @max_handling_time.setter
    def max_handling_time(self, max_handling_time):
        """Sets the max_handling_time of this GoogleProductV3.

        Maximal product handling time (in business days).  # noqa: E501

        :param max_handling_time: The max_handling_time of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._max_handling_time = max_handling_time

    @property
    def min_handling_time(self):
        """Gets the min_handling_time of this GoogleProductV3.  # noqa: E501

        Minimal product handling time (in business days).  # noqa: E501

        :return: The min_handling_time of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._min_handling_time

    @min_handling_time.setter
    def min_handling_time(self, min_handling_time):
        """Sets the min_handling_time of this GoogleProductV3.

        Minimal product handling time (in business days).  # noqa: E501

        :param min_handling_time: The min_handling_time of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._min_handling_time = min_handling_time

    @property
    def cost_of_goods_sold(self):
        """Gets the cost_of_goods_sold of this GoogleProductV3.  # noqa: E501


        :return: The cost_of_goods_sold of this GoogleProductV3.  # noqa: E501
        :rtype: Price
        """
        return self._cost_of_goods_sold

    @cost_of_goods_sold.setter
    def cost_of_goods_sold(self, cost_of_goods_sold):
        """Sets the cost_of_goods_sold of this GoogleProductV3.


        :param cost_of_goods_sold: The cost_of_goods_sold of this GoogleProductV3.  # noqa: E501
        :type: Price
        """

        self._cost_of_goods_sold = cost_of_goods_sold

    @property
    def source(self):
        """Gets the source of this GoogleProductV3.  # noqa: E501

        The source of the offer, i.e., how the offer was created.  # noqa: E501

        :return: The source of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this GoogleProductV3.

        The source of the offer, i.e., how the offer was created.  # noqa: E501

        :param source: The source of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def included_destinations(self):
        """Gets the included_destinations of this GoogleProductV3.  # noqa: E501

        The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in excludedDestinations.  # noqa: E501

        :return: The included_destinations of this GoogleProductV3.  # noqa: E501
        :rtype: list[str]
        """
        return self._included_destinations

    @included_destinations.setter
    def included_destinations(self, included_destinations):
        """Sets the included_destinations of this GoogleProductV3.

        The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in excludedDestinations.  # noqa: E501

        :param included_destinations: The included_destinations of this GoogleProductV3.  # noqa: E501
        :type: list[str]
        """

        self._included_destinations = included_destinations

    @property
    def excluded_destinations(self):
        """Gets the excluded_destinations of this GoogleProductV3.  # noqa: E501

        The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center).  # noqa: E501

        :return: The excluded_destinations of this GoogleProductV3.  # noqa: E501
        :rtype: list[str]
        """
        return self._excluded_destinations

    @excluded_destinations.setter
    def excluded_destinations(self, excluded_destinations):
        """Sets the excluded_destinations of this GoogleProductV3.

        The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center).  # noqa: E501

        :param excluded_destinations: The excluded_destinations of this GoogleProductV3.  # noqa: E501
        :type: list[str]
        """

        self._excluded_destinations = excluded_destinations

    @property
    def ads_grouping(self):
        """Gets the ads_grouping of this GoogleProductV3.  # noqa: E501

        Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.  # noqa: E501

        :return: The ads_grouping of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._ads_grouping

    @ads_grouping.setter
    def ads_grouping(self, ads_grouping):
        """Sets the ads_grouping of this GoogleProductV3.

        Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.  # noqa: E501

        :param ads_grouping: The ads_grouping of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._ads_grouping = ads_grouping

    @property
    def ads_labels(self):
        """Gets the ads_labels of this GoogleProductV3.  # noqa: E501

        Similar to adsGrouping, but only works on CPC.  # noqa: E501

        :return: The ads_labels of this GoogleProductV3.  # noqa: E501
        :rtype: list[str]
        """
        return self._ads_labels

    @ads_labels.setter
    def ads_labels(self, ads_labels):
        """Sets the ads_labels of this GoogleProductV3.

        Similar to adsGrouping, but only works on CPC.  # noqa: E501

        :param ads_labels: The ads_labels of this GoogleProductV3.  # noqa: E501
        :type: list[str]
        """

        self._ads_labels = ads_labels

    @property
    def ads_redirect(self):
        """Gets the ads_redirect of this GoogleProductV3.  # noqa: E501

        Allows advertisers to override the item URL when the product is shown within the context of Product Ads.  # noqa: E501

        :return: The ads_redirect of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._ads_redirect

    @ads_redirect.setter
    def ads_redirect(self, ads_redirect):
        """Sets the ads_redirect of this GoogleProductV3.

        Allows advertisers to override the item URL when the product is shown within the context of Product Ads.  # noqa: E501

        :param ads_redirect: The ads_redirect of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._ads_redirect = ads_redirect

    @property
    def product_types(self):
        """Gets the product_types of this GoogleProductV3.  # noqa: E501

        Categories of the item (formatted as in products data specification).  # noqa: E501

        :return: The product_types of this GoogleProductV3.  # noqa: E501
        :rtype: list[str]
        """
        return self._product_types

    @product_types.setter
    def product_types(self, product_types):
        """Sets the product_types of this GoogleProductV3.

        Categories of the item (formatted as in products data specification).  # noqa: E501

        :param product_types: The product_types of this GoogleProductV3.  # noqa: E501
        :type: list[str]
        """

        self._product_types = product_types

    @property
    def age_group(self):
        """Gets the age_group of this GoogleProductV3.  # noqa: E501

        Target age group of the item.  # noqa: E501

        :return: The age_group of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._age_group

    @age_group.setter
    def age_group(self, age_group):
        """Sets the age_group of this GoogleProductV3.

        Target age group of the item.  # noqa: E501

        :param age_group: The age_group of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._age_group = age_group

    @property
    def availability(self):
        """Gets the availability of this GoogleProductV3.  # noqa: E501

        Availability status of the item.  # noqa: E501

        :return: The availability of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._availability

    @availability.setter
    def availability(self, availability):
        """Sets the availability of this GoogleProductV3.

        Availability status of the item.  # noqa: E501

        :param availability: The availability of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._availability = availability

    @property
    def condition(self):
        """Gets the condition of this GoogleProductV3.  # noqa: E501

        Condition or state of the item.  # noqa: E501

        :return: The condition of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._condition

    @condition.setter
    def condition(self, condition):
        """Sets the condition of this GoogleProductV3.

        Condition or state of the item.  # noqa: E501

        :param condition: The condition of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._condition = condition

    @property
    def gender(self):
        """Gets the gender of this GoogleProductV3.  # noqa: E501

        Target gender of the item.  # noqa: E501

        :return: The gender of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this GoogleProductV3.

        Target gender of the item.  # noqa: E501

        :param gender: The gender of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._gender = gender

    @property
    def size_system(self):
        """Gets the size_system of this GoogleProductV3.  # noqa: E501

        System in which the size is specified. Recommended for apparel items.  # noqa: E501

        :return: The size_system of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._size_system

    @size_system.setter
    def size_system(self, size_system):
        """Sets the size_system of this GoogleProductV3.

        System in which the size is specified. Recommended for apparel items.  # noqa: E501

        :param size_system: The size_system of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._size_system = size_system

    @property
    def size_type(self):
        """Gets the size_type of this GoogleProductV3.  # noqa: E501

        The cut of the item. Recommended for apparel items.  # noqa: E501

        :return: The size_type of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._size_type

    @size_type.setter
    def size_type(self, size_type):
        """Sets the size_type of this GoogleProductV3.

        The cut of the item. Recommended for apparel items.  # noqa: E501

        :param size_type: The size_type of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._size_type = size_type

    @property
    def energy_efficiency_class(self):
        """Gets the energy_efficiency_class of this GoogleProductV3.  # noqa: E501

        The energy efficiency class as defined in EU directive 2010/30/EU.  # noqa: E501

        :return: The energy_efficiency_class of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._energy_efficiency_class

    @energy_efficiency_class.setter
    def energy_efficiency_class(self, energy_efficiency_class):
        """Sets the energy_efficiency_class of this GoogleProductV3.

        The energy efficiency class as defined in EU directive 2010/30/EU.  # noqa: E501

        :param energy_efficiency_class: The energy_efficiency_class of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._energy_efficiency_class = energy_efficiency_class

    @property
    def min_energy_efficiency_class(self):
        """Gets the min_energy_efficiency_class of this GoogleProductV3.  # noqa: E501

        The energy efficiency class as defined in EU directive 2010/30/EU.  # noqa: E501

        :return: The min_energy_efficiency_class of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._min_energy_efficiency_class

    @min_energy_efficiency_class.setter
    def min_energy_efficiency_class(self, min_energy_efficiency_class):
        """Sets the min_energy_efficiency_class of this GoogleProductV3.

        The energy efficiency class as defined in EU directive 2010/30/EU.  # noqa: E501

        :param min_energy_efficiency_class: The min_energy_efficiency_class of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._min_energy_efficiency_class = min_energy_efficiency_class

    @property
    def max_energy_efficiency_class(self):
        """Gets the max_energy_efficiency_class of this GoogleProductV3.  # noqa: E501

        The energy efficiency class as defined in EU directive 2010/30/EU.  # noqa: E501

        :return: The max_energy_efficiency_class of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._max_energy_efficiency_class

    @max_energy_efficiency_class.setter
    def max_energy_efficiency_class(self, max_energy_efficiency_class):
        """Sets the max_energy_efficiency_class of this GoogleProductV3.

        The energy efficiency class as defined in EU directive 2010/30/EU.  # noqa: E501

        :param max_energy_efficiency_class: The max_energy_efficiency_class of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._max_energy_efficiency_class = max_energy_efficiency_class

    @property
    def tax_category(self):
        """Gets the tax_category of this GoogleProductV3.  # noqa: E501

        The tax category of the product, used to configure detailed tax nexus in account-level tax settings.  # noqa: E501

        :return: The tax_category of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._tax_category

    @tax_category.setter
    def tax_category(self, tax_category):
        """Sets the tax_category of this GoogleProductV3.

        The tax category of the product, used to configure detailed tax nexus in account-level tax settings.  # noqa: E501

        :param tax_category: The tax_category of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._tax_category = tax_category

    @property
    def transit_time_label(self):
        """Gets the transit_time_label of this GoogleProductV3.  # noqa: E501

        The transit time label of the product, used to group product in account-level transit time tables.  # noqa: E501

        :return: The transit_time_label of this GoogleProductV3.  # noqa: E501
        :rtype: str
        """
        return self._transit_time_label

    @transit_time_label.setter
    def transit_time_label(self, transit_time_label):
        """Sets the transit_time_label of this GoogleProductV3.

        The transit time label of the product, used to group product in account-level transit time tables.  # noqa: E501

        :param transit_time_label: The transit_time_label of this GoogleProductV3.  # noqa: E501
        :type: str
        """

        self._transit_time_label = transit_time_label

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GoogleProductV3):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
