# coding: utf-8

"""
    Marketing API v.1.0

    IMPORTANT: This swagger links to Criteo production environment. Any test applied here will thus impact real campaigns.  # noqa: E501

    The version of the OpenAPI document: v.1.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class GoogleProduct(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'additional_image_link': 'str',
        'adult': 'bool',
        'adword_redirect': 'str',
        'age_group': 'str',
        'availability': 'str',
        'availability_date': 'str',
        'brand': 'str',
        'color': 'str',
        'custom_label0': 'str',
        'custom_label1': 'str',
        'custom_label2': 'str',
        'custom_label3': 'str',
        'custom_label4': 'str',
        'description': 'str',
        'display_ads_id': 'str',
        'display_ads_link': 'str',
        'display_ads_similar_ids': 'list[str]',
        'display_ads_title': 'str',
        'display_ads_value': 'str',
        'energy_efficiency_class': 'str',
        'excluded_destination': 'str',
        'expiration_date': 'str',
        'filters': 'str',
        'gender': 'str',
        'google_product_category': 'str',
        'gtin': 'str',
        'identifier_exists': 'bool',
        'image_link': 'str',
        'installment': 'Installment',
        'is_bundle': 'bool',
        'item_group_id': 'str',
        'link': 'str',
        'loyaty_points': 'LoyatyPoints',
        'material': 'str',
        'max_handling_time': 'int',
        'min_advertiser_price': 'bool',
        'min_handling_time': 'int',
        'mobile_ling': 'str',
        'model_number': 'str',
        'mpn': 'str',
        'multipack': 'int',
        'number_of_reviews': 'int',
        'pattern': 'str',
        'price': 'Price',
        'product_rating': 'str',
        'product_type': 'str',
        'product_type_key': 'str',
        'promo_text': 'str',
        'promotion_id': 'str',
        'sale_price': 'Price',
        'sale_price_effective_date': 'str',
        'shipping': 'list[Shipping]',
        'shipping_height': 'ShippingSize',
        'shipping_label': 'str',
        'shipping_length': 'ShippingSize',
        'shipping_weight': 'UnitMeasure',
        'shipping_width': 'ShippingSize',
        'size': 'str',
        'size_system': 'str',
        'size_type': 'str',
        'tax': 'list[Tax]',
        'title': 'str',
        'unit_pricing_base_measure': 'UnitMeasure',
        'unit_pricing_measure': 'UnitMeasure'
    }

    attribute_map = {
        'id': 'id',
        'additional_image_link': 'additionalImageLink',
        'adult': 'adult',
        'adword_redirect': 'adwordRedirect',
        'age_group': 'ageGroup',
        'availability': 'availability',
        'availability_date': 'availabilityDate',
        'brand': 'brand',
        'color': 'color',
        'custom_label0': 'customLabel0',
        'custom_label1': 'customLabel1',
        'custom_label2': 'customLabel2',
        'custom_label3': 'customLabel3',
        'custom_label4': 'customLabel4',
        'description': 'description',
        'display_ads_id': 'displayAdsId',
        'display_ads_link': 'displayAdsLink',
        'display_ads_similar_ids': 'displayAdsSimilarIds',
        'display_ads_title': 'displayAdsTitle',
        'display_ads_value': 'displayAdsValue',
        'energy_efficiency_class': 'energyEfficiencyClass',
        'excluded_destination': 'excludedDestination',
        'expiration_date': 'expirationDate',
        'filters': 'filters',
        'gender': 'gender',
        'google_product_category': 'googleProductCategory',
        'gtin': 'gtin',
        'identifier_exists': 'identifierExists',
        'image_link': 'imageLink',
        'installment': 'installment',
        'is_bundle': 'isBundle',
        'item_group_id': 'itemGroupId',
        'link': 'link',
        'loyaty_points': 'loyatyPoints',
        'material': 'material',
        'max_handling_time': 'maxHandlingTime',
        'min_advertiser_price': 'minAdvertiserPrice',
        'min_handling_time': 'minHandlingTime',
        'mobile_ling': 'mobileLing',
        'model_number': 'modelNumber',
        'mpn': 'mpn',
        'multipack': 'multipack',
        'number_of_reviews': 'numberOfReviews',
        'pattern': 'pattern',
        'price': 'price',
        'product_rating': 'productRating',
        'product_type': 'productType',
        'product_type_key': 'productTypeKey',
        'promo_text': 'promoText',
        'promotion_id': 'promotionId',
        'sale_price': 'salePrice',
        'sale_price_effective_date': 'salePriceEffectiveDate',
        'shipping': 'shipping',
        'shipping_height': 'shippingHeight',
        'shipping_label': 'shippingLabel',
        'shipping_length': 'shippingLength',
        'shipping_weight': 'shippingWeight',
        'shipping_width': 'shippingWidth',
        'size': 'size',
        'size_system': 'sizeSystem',
        'size_type': 'sizeType',
        'tax': 'tax',
        'title': 'title',
        'unit_pricing_base_measure': 'unitPricingBaseMeasure',
        'unit_pricing_measure': 'unitPricingMeasure'
    }

    def __init__(self, id=None, additional_image_link=None, adult=None, adword_redirect=None, age_group=None, availability=None, availability_date=None, brand=None, color=None, custom_label0=None, custom_label1=None, custom_label2=None, custom_label3=None, custom_label4=None, description=None, display_ads_id=None, display_ads_link=None, display_ads_similar_ids=None, display_ads_title=None, display_ads_value=None, energy_efficiency_class=None, excluded_destination=None, expiration_date=None, filters=None, gender=None, google_product_category=None, gtin=None, identifier_exists=None, image_link=None, installment=None, is_bundle=None, item_group_id=None, link=None, loyaty_points=None, material=None, max_handling_time=None, min_advertiser_price=None, min_handling_time=None, mobile_ling=None, model_number=None, mpn=None, multipack=None, number_of_reviews=None, pattern=None, price=None, product_rating=None, product_type=None, product_type_key=None, promo_text=None, promotion_id=None, sale_price=None, sale_price_effective_date=None, shipping=None, shipping_height=None, shipping_label=None, shipping_length=None, shipping_weight=None, shipping_width=None, size=None, size_system=None, size_type=None, tax=None, title=None, unit_pricing_base_measure=None, unit_pricing_measure=None):  # noqa: E501
        """GoogleProduct - a model defined in OpenAPI"""  # noqa: E501

        self._id = None
        self._additional_image_link = None
        self._adult = None
        self._adword_redirect = None
        self._age_group = None
        self._availability = None
        self._availability_date = None
        self._brand = None
        self._color = None
        self._custom_label0 = None
        self._custom_label1 = None
        self._custom_label2 = None
        self._custom_label3 = None
        self._custom_label4 = None
        self._description = None
        self._display_ads_id = None
        self._display_ads_link = None
        self._display_ads_similar_ids = None
        self._display_ads_title = None
        self._display_ads_value = None
        self._energy_efficiency_class = None
        self._excluded_destination = None
        self._expiration_date = None
        self._filters = None
        self._gender = None
        self._google_product_category = None
        self._gtin = None
        self._identifier_exists = None
        self._image_link = None
        self._installment = None
        self._is_bundle = None
        self._item_group_id = None
        self._link = None
        self._loyaty_points = None
        self._material = None
        self._max_handling_time = None
        self._min_advertiser_price = None
        self._min_handling_time = None
        self._mobile_ling = None
        self._model_number = None
        self._mpn = None
        self._multipack = None
        self._number_of_reviews = None
        self._pattern = None
        self._price = None
        self._product_rating = None
        self._product_type = None
        self._product_type_key = None
        self._promo_text = None
        self._promotion_id = None
        self._sale_price = None
        self._sale_price_effective_date = None
        self._shipping = None
        self._shipping_height = None
        self._shipping_label = None
        self._shipping_length = None
        self._shipping_weight = None
        self._shipping_width = None
        self._size = None
        self._size_system = None
        self._size_type = None
        self._tax = None
        self._title = None
        self._unit_pricing_base_measure = None
        self._unit_pricing_measure = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if additional_image_link is not None:
            self.additional_image_link = additional_image_link
        if adult is not None:
            self.adult = adult
        if adword_redirect is not None:
            self.adword_redirect = adword_redirect
        if age_group is not None:
            self.age_group = age_group
        if availability is not None:
            self.availability = availability
        if availability_date is not None:
            self.availability_date = availability_date
        if brand is not None:
            self.brand = brand
        if color is not None:
            self.color = color
        if custom_label0 is not None:
            self.custom_label0 = custom_label0
        if custom_label1 is not None:
            self.custom_label1 = custom_label1
        if custom_label2 is not None:
            self.custom_label2 = custom_label2
        if custom_label3 is not None:
            self.custom_label3 = custom_label3
        if custom_label4 is not None:
            self.custom_label4 = custom_label4
        if description is not None:
            self.description = description
        if display_ads_id is not None:
            self.display_ads_id = display_ads_id
        if display_ads_link is not None:
            self.display_ads_link = display_ads_link
        if display_ads_similar_ids is not None:
            self.display_ads_similar_ids = display_ads_similar_ids
        if display_ads_title is not None:
            self.display_ads_title = display_ads_title
        if display_ads_value is not None:
            self.display_ads_value = display_ads_value
        if energy_efficiency_class is not None:
            self.energy_efficiency_class = energy_efficiency_class
        if excluded_destination is not None:
            self.excluded_destination = excluded_destination
        if expiration_date is not None:
            self.expiration_date = expiration_date
        if filters is not None:
            self.filters = filters
        if gender is not None:
            self.gender = gender
        if google_product_category is not None:
            self.google_product_category = google_product_category
        if gtin is not None:
            self.gtin = gtin
        if identifier_exists is not None:
            self.identifier_exists = identifier_exists
        if image_link is not None:
            self.image_link = image_link
        if installment is not None:
            self.installment = installment
        if is_bundle is not None:
            self.is_bundle = is_bundle
        if item_group_id is not None:
            self.item_group_id = item_group_id
        if link is not None:
            self.link = link
        if loyaty_points is not None:
            self.loyaty_points = loyaty_points
        if material is not None:
            self.material = material
        if max_handling_time is not None:
            self.max_handling_time = max_handling_time
        if min_advertiser_price is not None:
            self.min_advertiser_price = min_advertiser_price
        if min_handling_time is not None:
            self.min_handling_time = min_handling_time
        if mobile_ling is not None:
            self.mobile_ling = mobile_ling
        if model_number is not None:
            self.model_number = model_number
        if mpn is not None:
            self.mpn = mpn
        if multipack is not None:
            self.multipack = multipack
        if number_of_reviews is not None:
            self.number_of_reviews = number_of_reviews
        if pattern is not None:
            self.pattern = pattern
        if price is not None:
            self.price = price
        if product_rating is not None:
            self.product_rating = product_rating
        if product_type is not None:
            self.product_type = product_type
        if product_type_key is not None:
            self.product_type_key = product_type_key
        if promo_text is not None:
            self.promo_text = promo_text
        if promotion_id is not None:
            self.promotion_id = promotion_id
        if sale_price is not None:
            self.sale_price = sale_price
        if sale_price_effective_date is not None:
            self.sale_price_effective_date = sale_price_effective_date
        if shipping is not None:
            self.shipping = shipping
        if shipping_height is not None:
            self.shipping_height = shipping_height
        if shipping_label is not None:
            self.shipping_label = shipping_label
        if shipping_length is not None:
            self.shipping_length = shipping_length
        if shipping_weight is not None:
            self.shipping_weight = shipping_weight
        if shipping_width is not None:
            self.shipping_width = shipping_width
        if size is not None:
            self.size = size
        if size_system is not None:
            self.size_system = size_system
        if size_type is not None:
            self.size_type = size_type
        if tax is not None:
            self.tax = tax
        if title is not None:
            self.title = title
        if unit_pricing_base_measure is not None:
            self.unit_pricing_base_measure = unit_pricing_base_measure
        if unit_pricing_measure is not None:
            self.unit_pricing_measure = unit_pricing_measure

    @property
    def id(self):
        """Gets the id of this GoogleProduct.  # noqa: E501


        :return: The id of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleProduct.


        :param id: The id of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def additional_image_link(self):
        """Gets the additional_image_link of this GoogleProduct.  # noqa: E501


        :return: The additional_image_link of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._additional_image_link

    @additional_image_link.setter
    def additional_image_link(self, additional_image_link):
        """Sets the additional_image_link of this GoogleProduct.


        :param additional_image_link: The additional_image_link of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._additional_image_link = additional_image_link

    @property
    def adult(self):
        """Gets the adult of this GoogleProduct.  # noqa: E501


        :return: The adult of this GoogleProduct.  # noqa: E501
        :rtype: bool
        """
        return self._adult

    @adult.setter
    def adult(self, adult):
        """Sets the adult of this GoogleProduct.


        :param adult: The adult of this GoogleProduct.  # noqa: E501
        :type: bool
        """

        self._adult = adult

    @property
    def adword_redirect(self):
        """Gets the adword_redirect of this GoogleProduct.  # noqa: E501


        :return: The adword_redirect of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._adword_redirect

    @adword_redirect.setter
    def adword_redirect(self, adword_redirect):
        """Sets the adword_redirect of this GoogleProduct.


        :param adword_redirect: The adword_redirect of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._adword_redirect = adword_redirect

    @property
    def age_group(self):
        """Gets the age_group of this GoogleProduct.  # noqa: E501


        :return: The age_group of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._age_group

    @age_group.setter
    def age_group(self, age_group):
        """Sets the age_group of this GoogleProduct.


        :param age_group: The age_group of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._age_group = age_group

    @property
    def availability(self):
        """Gets the availability of this GoogleProduct.  # noqa: E501


        :return: The availability of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._availability

    @availability.setter
    def availability(self, availability):
        """Sets the availability of this GoogleProduct.


        :param availability: The availability of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._availability = availability

    @property
    def availability_date(self):
        """Gets the availability_date of this GoogleProduct.  # noqa: E501


        :return: The availability_date of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._availability_date

    @availability_date.setter
    def availability_date(self, availability_date):
        """Sets the availability_date of this GoogleProduct.


        :param availability_date: The availability_date of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._availability_date = availability_date

    @property
    def brand(self):
        """Gets the brand of this GoogleProduct.  # noqa: E501


        :return: The brand of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this GoogleProduct.


        :param brand: The brand of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._brand = brand

    @property
    def color(self):
        """Gets the color of this GoogleProduct.  # noqa: E501


        :return: The color of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this GoogleProduct.


        :param color: The color of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._color = color

    @property
    def custom_label0(self):
        """Gets the custom_label0 of this GoogleProduct.  # noqa: E501


        :return: The custom_label0 of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._custom_label0

    @custom_label0.setter
    def custom_label0(self, custom_label0):
        """Sets the custom_label0 of this GoogleProduct.


        :param custom_label0: The custom_label0 of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._custom_label0 = custom_label0

    @property
    def custom_label1(self):
        """Gets the custom_label1 of this GoogleProduct.  # noqa: E501


        :return: The custom_label1 of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._custom_label1

    @custom_label1.setter
    def custom_label1(self, custom_label1):
        """Sets the custom_label1 of this GoogleProduct.


        :param custom_label1: The custom_label1 of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._custom_label1 = custom_label1

    @property
    def custom_label2(self):
        """Gets the custom_label2 of this GoogleProduct.  # noqa: E501


        :return: The custom_label2 of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._custom_label2

    @custom_label2.setter
    def custom_label2(self, custom_label2):
        """Sets the custom_label2 of this GoogleProduct.


        :param custom_label2: The custom_label2 of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._custom_label2 = custom_label2

    @property
    def custom_label3(self):
        """Gets the custom_label3 of this GoogleProduct.  # noqa: E501


        :return: The custom_label3 of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._custom_label3

    @custom_label3.setter
    def custom_label3(self, custom_label3):
        """Sets the custom_label3 of this GoogleProduct.


        :param custom_label3: The custom_label3 of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._custom_label3 = custom_label3

    @property
    def custom_label4(self):
        """Gets the custom_label4 of this GoogleProduct.  # noqa: E501


        :return: The custom_label4 of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._custom_label4

    @custom_label4.setter
    def custom_label4(self, custom_label4):
        """Sets the custom_label4 of this GoogleProduct.


        :param custom_label4: The custom_label4 of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._custom_label4 = custom_label4

    @property
    def description(self):
        """Gets the description of this GoogleProduct.  # noqa: E501


        :return: The description of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleProduct.


        :param description: The description of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def display_ads_id(self):
        """Gets the display_ads_id of this GoogleProduct.  # noqa: E501


        :return: The display_ads_id of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._display_ads_id

    @display_ads_id.setter
    def display_ads_id(self, display_ads_id):
        """Sets the display_ads_id of this GoogleProduct.


        :param display_ads_id: The display_ads_id of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._display_ads_id = display_ads_id

    @property
    def display_ads_link(self):
        """Gets the display_ads_link of this GoogleProduct.  # noqa: E501


        :return: The display_ads_link of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._display_ads_link

    @display_ads_link.setter
    def display_ads_link(self, display_ads_link):
        """Sets the display_ads_link of this GoogleProduct.


        :param display_ads_link: The display_ads_link of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._display_ads_link = display_ads_link

    @property
    def display_ads_similar_ids(self):
        """Gets the display_ads_similar_ids of this GoogleProduct.  # noqa: E501


        :return: The display_ads_similar_ids of this GoogleProduct.  # noqa: E501
        :rtype: list[str]
        """
        return self._display_ads_similar_ids

    @display_ads_similar_ids.setter
    def display_ads_similar_ids(self, display_ads_similar_ids):
        """Sets the display_ads_similar_ids of this GoogleProduct.


        :param display_ads_similar_ids: The display_ads_similar_ids of this GoogleProduct.  # noqa: E501
        :type: list[str]
        """

        self._display_ads_similar_ids = display_ads_similar_ids

    @property
    def display_ads_title(self):
        """Gets the display_ads_title of this GoogleProduct.  # noqa: E501


        :return: The display_ads_title of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._display_ads_title

    @display_ads_title.setter
    def display_ads_title(self, display_ads_title):
        """Sets the display_ads_title of this GoogleProduct.


        :param display_ads_title: The display_ads_title of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._display_ads_title = display_ads_title

    @property
    def display_ads_value(self):
        """Gets the display_ads_value of this GoogleProduct.  # noqa: E501


        :return: The display_ads_value of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._display_ads_value

    @display_ads_value.setter
    def display_ads_value(self, display_ads_value):
        """Sets the display_ads_value of this GoogleProduct.


        :param display_ads_value: The display_ads_value of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._display_ads_value = display_ads_value

    @property
    def energy_efficiency_class(self):
        """Gets the energy_efficiency_class of this GoogleProduct.  # noqa: E501


        :return: The energy_efficiency_class of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._energy_efficiency_class

    @energy_efficiency_class.setter
    def energy_efficiency_class(self, energy_efficiency_class):
        """Sets the energy_efficiency_class of this GoogleProduct.


        :param energy_efficiency_class: The energy_efficiency_class of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._energy_efficiency_class = energy_efficiency_class

    @property
    def excluded_destination(self):
        """Gets the excluded_destination of this GoogleProduct.  # noqa: E501


        :return: The excluded_destination of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._excluded_destination

    @excluded_destination.setter
    def excluded_destination(self, excluded_destination):
        """Sets the excluded_destination of this GoogleProduct.


        :param excluded_destination: The excluded_destination of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._excluded_destination = excluded_destination

    @property
    def expiration_date(self):
        """Gets the expiration_date of this GoogleProduct.  # noqa: E501


        :return: The expiration_date of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this GoogleProduct.


        :param expiration_date: The expiration_date of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._expiration_date = expiration_date

    @property
    def filters(self):
        """Gets the filters of this GoogleProduct.  # noqa: E501


        :return: The filters of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this GoogleProduct.


        :param filters: The filters of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._filters = filters

    @property
    def gender(self):
        """Gets the gender of this GoogleProduct.  # noqa: E501


        :return: The gender of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this GoogleProduct.


        :param gender: The gender of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._gender = gender

    @property
    def google_product_category(self):
        """Gets the google_product_category of this GoogleProduct.  # noqa: E501


        :return: The google_product_category of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._google_product_category

    @google_product_category.setter
    def google_product_category(self, google_product_category):
        """Sets the google_product_category of this GoogleProduct.


        :param google_product_category: The google_product_category of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._google_product_category = google_product_category

    @property
    def gtin(self):
        """Gets the gtin of this GoogleProduct.  # noqa: E501


        :return: The gtin of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._gtin

    @gtin.setter
    def gtin(self, gtin):
        """Sets the gtin of this GoogleProduct.


        :param gtin: The gtin of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._gtin = gtin

    @property
    def identifier_exists(self):
        """Gets the identifier_exists of this GoogleProduct.  # noqa: E501


        :return: The identifier_exists of this GoogleProduct.  # noqa: E501
        :rtype: bool
        """
        return self._identifier_exists

    @identifier_exists.setter
    def identifier_exists(self, identifier_exists):
        """Sets the identifier_exists of this GoogleProduct.


        :param identifier_exists: The identifier_exists of this GoogleProduct.  # noqa: E501
        :type: bool
        """

        self._identifier_exists = identifier_exists

    @property
    def image_link(self):
        """Gets the image_link of this GoogleProduct.  # noqa: E501


        :return: The image_link of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._image_link

    @image_link.setter
    def image_link(self, image_link):
        """Sets the image_link of this GoogleProduct.


        :param image_link: The image_link of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._image_link = image_link

    @property
    def installment(self):
        """Gets the installment of this GoogleProduct.  # noqa: E501


        :return: The installment of this GoogleProduct.  # noqa: E501
        :rtype: Installment
        """
        return self._installment

    @installment.setter
    def installment(self, installment):
        """Sets the installment of this GoogleProduct.


        :param installment: The installment of this GoogleProduct.  # noqa: E501
        :type: Installment
        """

        self._installment = installment

    @property
    def is_bundle(self):
        """Gets the is_bundle of this GoogleProduct.  # noqa: E501


        :return: The is_bundle of this GoogleProduct.  # noqa: E501
        :rtype: bool
        """
        return self._is_bundle

    @is_bundle.setter
    def is_bundle(self, is_bundle):
        """Sets the is_bundle of this GoogleProduct.


        :param is_bundle: The is_bundle of this GoogleProduct.  # noqa: E501
        :type: bool
        """

        self._is_bundle = is_bundle

    @property
    def item_group_id(self):
        """Gets the item_group_id of this GoogleProduct.  # noqa: E501


        :return: The item_group_id of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._item_group_id

    @item_group_id.setter
    def item_group_id(self, item_group_id):
        """Sets the item_group_id of this GoogleProduct.


        :param item_group_id: The item_group_id of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._item_group_id = item_group_id

    @property
    def link(self):
        """Gets the link of this GoogleProduct.  # noqa: E501


        :return: The link of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this GoogleProduct.


        :param link: The link of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._link = link

    @property
    def loyaty_points(self):
        """Gets the loyaty_points of this GoogleProduct.  # noqa: E501


        :return: The loyaty_points of this GoogleProduct.  # noqa: E501
        :rtype: LoyatyPoints
        """
        return self._loyaty_points

    @loyaty_points.setter
    def loyaty_points(self, loyaty_points):
        """Sets the loyaty_points of this GoogleProduct.


        :param loyaty_points: The loyaty_points of this GoogleProduct.  # noqa: E501
        :type: LoyatyPoints
        """

        self._loyaty_points = loyaty_points

    @property
    def material(self):
        """Gets the material of this GoogleProduct.  # noqa: E501


        :return: The material of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._material

    @material.setter
    def material(self, material):
        """Sets the material of this GoogleProduct.


        :param material: The material of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._material = material

    @property
    def max_handling_time(self):
        """Gets the max_handling_time of this GoogleProduct.  # noqa: E501


        :return: The max_handling_time of this GoogleProduct.  # noqa: E501
        :rtype: int
        """
        return self._max_handling_time

    @max_handling_time.setter
    def max_handling_time(self, max_handling_time):
        """Sets the max_handling_time of this GoogleProduct.


        :param max_handling_time: The max_handling_time of this GoogleProduct.  # noqa: E501
        :type: int
        """

        self._max_handling_time = max_handling_time

    @property
    def min_advertiser_price(self):
        """Gets the min_advertiser_price of this GoogleProduct.  # noqa: E501


        :return: The min_advertiser_price of this GoogleProduct.  # noqa: E501
        :rtype: bool
        """
        return self._min_advertiser_price

    @min_advertiser_price.setter
    def min_advertiser_price(self, min_advertiser_price):
        """Sets the min_advertiser_price of this GoogleProduct.


        :param min_advertiser_price: The min_advertiser_price of this GoogleProduct.  # noqa: E501
        :type: bool
        """

        self._min_advertiser_price = min_advertiser_price

    @property
    def min_handling_time(self):
        """Gets the min_handling_time of this GoogleProduct.  # noqa: E501


        :return: The min_handling_time of this GoogleProduct.  # noqa: E501
        :rtype: int
        """
        return self._min_handling_time

    @min_handling_time.setter
    def min_handling_time(self, min_handling_time):
        """Sets the min_handling_time of this GoogleProduct.


        :param min_handling_time: The min_handling_time of this GoogleProduct.  # noqa: E501
        :type: int
        """

        self._min_handling_time = min_handling_time

    @property
    def mobile_ling(self):
        """Gets the mobile_ling of this GoogleProduct.  # noqa: E501


        :return: The mobile_ling of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._mobile_ling

    @mobile_ling.setter
    def mobile_ling(self, mobile_ling):
        """Sets the mobile_ling of this GoogleProduct.


        :param mobile_ling: The mobile_ling of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._mobile_ling = mobile_ling

    @property
    def model_number(self):
        """Gets the model_number of this GoogleProduct.  # noqa: E501


        :return: The model_number of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._model_number

    @model_number.setter
    def model_number(self, model_number):
        """Sets the model_number of this GoogleProduct.


        :param model_number: The model_number of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._model_number = model_number

    @property
    def mpn(self):
        """Gets the mpn of this GoogleProduct.  # noqa: E501


        :return: The mpn of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._mpn

    @mpn.setter
    def mpn(self, mpn):
        """Sets the mpn of this GoogleProduct.


        :param mpn: The mpn of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._mpn = mpn

    @property
    def multipack(self):
        """Gets the multipack of this GoogleProduct.  # noqa: E501


        :return: The multipack of this GoogleProduct.  # noqa: E501
        :rtype: int
        """
        return self._multipack

    @multipack.setter
    def multipack(self, multipack):
        """Sets the multipack of this GoogleProduct.


        :param multipack: The multipack of this GoogleProduct.  # noqa: E501
        :type: int
        """

        self._multipack = multipack

    @property
    def number_of_reviews(self):
        """Gets the number_of_reviews of this GoogleProduct.  # noqa: E501


        :return: The number_of_reviews of this GoogleProduct.  # noqa: E501
        :rtype: int
        """
        return self._number_of_reviews

    @number_of_reviews.setter
    def number_of_reviews(self, number_of_reviews):
        """Sets the number_of_reviews of this GoogleProduct.


        :param number_of_reviews: The number_of_reviews of this GoogleProduct.  # noqa: E501
        :type: int
        """

        self._number_of_reviews = number_of_reviews

    @property
    def pattern(self):
        """Gets the pattern of this GoogleProduct.  # noqa: E501


        :return: The pattern of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._pattern

    @pattern.setter
    def pattern(self, pattern):
        """Sets the pattern of this GoogleProduct.


        :param pattern: The pattern of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._pattern = pattern

    @property
    def price(self):
        """Gets the price of this GoogleProduct.  # noqa: E501


        :return: The price of this GoogleProduct.  # noqa: E501
        :rtype: Price
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this GoogleProduct.


        :param price: The price of this GoogleProduct.  # noqa: E501
        :type: Price
        """

        self._price = price

    @property
    def product_rating(self):
        """Gets the product_rating of this GoogleProduct.  # noqa: E501


        :return: The product_rating of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._product_rating

    @product_rating.setter
    def product_rating(self, product_rating):
        """Sets the product_rating of this GoogleProduct.


        :param product_rating: The product_rating of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._product_rating = product_rating

    @property
    def product_type(self):
        """Gets the product_type of this GoogleProduct.  # noqa: E501


        :return: The product_type of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this GoogleProduct.


        :param product_type: The product_type of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._product_type = product_type

    @property
    def product_type_key(self):
        """Gets the product_type_key of this GoogleProduct.  # noqa: E501


        :return: The product_type_key of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._product_type_key

    @product_type_key.setter
    def product_type_key(self, product_type_key):
        """Sets the product_type_key of this GoogleProduct.


        :param product_type_key: The product_type_key of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._product_type_key = product_type_key

    @property
    def promo_text(self):
        """Gets the promo_text of this GoogleProduct.  # noqa: E501


        :return: The promo_text of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._promo_text

    @promo_text.setter
    def promo_text(self, promo_text):
        """Sets the promo_text of this GoogleProduct.


        :param promo_text: The promo_text of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._promo_text = promo_text

    @property
    def promotion_id(self):
        """Gets the promotion_id of this GoogleProduct.  # noqa: E501


        :return: The promotion_id of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._promotion_id

    @promotion_id.setter
    def promotion_id(self, promotion_id):
        """Sets the promotion_id of this GoogleProduct.


        :param promotion_id: The promotion_id of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._promotion_id = promotion_id

    @property
    def sale_price(self):
        """Gets the sale_price of this GoogleProduct.  # noqa: E501


        :return: The sale_price of this GoogleProduct.  # noqa: E501
        :rtype: Price
        """
        return self._sale_price

    @sale_price.setter
    def sale_price(self, sale_price):
        """Sets the sale_price of this GoogleProduct.


        :param sale_price: The sale_price of this GoogleProduct.  # noqa: E501
        :type: Price
        """

        self._sale_price = sale_price

    @property
    def sale_price_effective_date(self):
        """Gets the sale_price_effective_date of this GoogleProduct.  # noqa: E501


        :return: The sale_price_effective_date of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._sale_price_effective_date

    @sale_price_effective_date.setter
    def sale_price_effective_date(self, sale_price_effective_date):
        """Sets the sale_price_effective_date of this GoogleProduct.


        :param sale_price_effective_date: The sale_price_effective_date of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._sale_price_effective_date = sale_price_effective_date

    @property
    def shipping(self):
        """Gets the shipping of this GoogleProduct.  # noqa: E501


        :return: The shipping of this GoogleProduct.  # noqa: E501
        :rtype: list[Shipping]
        """
        return self._shipping

    @shipping.setter
    def shipping(self, shipping):
        """Sets the shipping of this GoogleProduct.


        :param shipping: The shipping of this GoogleProduct.  # noqa: E501
        :type: list[Shipping]
        """

        self._shipping = shipping

    @property
    def shipping_height(self):
        """Gets the shipping_height of this GoogleProduct.  # noqa: E501


        :return: The shipping_height of this GoogleProduct.  # noqa: E501
        :rtype: ShippingSize
        """
        return self._shipping_height

    @shipping_height.setter
    def shipping_height(self, shipping_height):
        """Sets the shipping_height of this GoogleProduct.


        :param shipping_height: The shipping_height of this GoogleProduct.  # noqa: E501
        :type: ShippingSize
        """

        self._shipping_height = shipping_height

    @property
    def shipping_label(self):
        """Gets the shipping_label of this GoogleProduct.  # noqa: E501


        :return: The shipping_label of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._shipping_label

    @shipping_label.setter
    def shipping_label(self, shipping_label):
        """Sets the shipping_label of this GoogleProduct.


        :param shipping_label: The shipping_label of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._shipping_label = shipping_label

    @property
    def shipping_length(self):
        """Gets the shipping_length of this GoogleProduct.  # noqa: E501


        :return: The shipping_length of this GoogleProduct.  # noqa: E501
        :rtype: ShippingSize
        """
        return self._shipping_length

    @shipping_length.setter
    def shipping_length(self, shipping_length):
        """Sets the shipping_length of this GoogleProduct.


        :param shipping_length: The shipping_length of this GoogleProduct.  # noqa: E501
        :type: ShippingSize
        """

        self._shipping_length = shipping_length

    @property
    def shipping_weight(self):
        """Gets the shipping_weight of this GoogleProduct.  # noqa: E501


        :return: The shipping_weight of this GoogleProduct.  # noqa: E501
        :rtype: UnitMeasure
        """
        return self._shipping_weight

    @shipping_weight.setter
    def shipping_weight(self, shipping_weight):
        """Sets the shipping_weight of this GoogleProduct.


        :param shipping_weight: The shipping_weight of this GoogleProduct.  # noqa: E501
        :type: UnitMeasure
        """

        self._shipping_weight = shipping_weight

    @property
    def shipping_width(self):
        """Gets the shipping_width of this GoogleProduct.  # noqa: E501


        :return: The shipping_width of this GoogleProduct.  # noqa: E501
        :rtype: ShippingSize
        """
        return self._shipping_width

    @shipping_width.setter
    def shipping_width(self, shipping_width):
        """Sets the shipping_width of this GoogleProduct.


        :param shipping_width: The shipping_width of this GoogleProduct.  # noqa: E501
        :type: ShippingSize
        """

        self._shipping_width = shipping_width

    @property
    def size(self):
        """Gets the size of this GoogleProduct.  # noqa: E501


        :return: The size of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this GoogleProduct.


        :param size: The size of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._size = size

    @property
    def size_system(self):
        """Gets the size_system of this GoogleProduct.  # noqa: E501


        :return: The size_system of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._size_system

    @size_system.setter
    def size_system(self, size_system):
        """Sets the size_system of this GoogleProduct.


        :param size_system: The size_system of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._size_system = size_system

    @property
    def size_type(self):
        """Gets the size_type of this GoogleProduct.  # noqa: E501


        :return: The size_type of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._size_type

    @size_type.setter
    def size_type(self, size_type):
        """Sets the size_type of this GoogleProduct.


        :param size_type: The size_type of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._size_type = size_type

    @property
    def tax(self):
        """Gets the tax of this GoogleProduct.  # noqa: E501


        :return: The tax of this GoogleProduct.  # noqa: E501
        :rtype: list[Tax]
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this GoogleProduct.


        :param tax: The tax of this GoogleProduct.  # noqa: E501
        :type: list[Tax]
        """

        self._tax = tax

    @property
    def title(self):
        """Gets the title of this GoogleProduct.  # noqa: E501


        :return: The title of this GoogleProduct.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this GoogleProduct.


        :param title: The title of this GoogleProduct.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def unit_pricing_base_measure(self):
        """Gets the unit_pricing_base_measure of this GoogleProduct.  # noqa: E501


        :return: The unit_pricing_base_measure of this GoogleProduct.  # noqa: E501
        :rtype: UnitMeasure
        """
        return self._unit_pricing_base_measure

    @unit_pricing_base_measure.setter
    def unit_pricing_base_measure(self, unit_pricing_base_measure):
        """Sets the unit_pricing_base_measure of this GoogleProduct.


        :param unit_pricing_base_measure: The unit_pricing_base_measure of this GoogleProduct.  # noqa: E501
        :type: UnitMeasure
        """

        self._unit_pricing_base_measure = unit_pricing_base_measure

    @property
    def unit_pricing_measure(self):
        """Gets the unit_pricing_measure of this GoogleProduct.  # noqa: E501


        :return: The unit_pricing_measure of this GoogleProduct.  # noqa: E501
        :rtype: UnitMeasure
        """
        return self._unit_pricing_measure

    @unit_pricing_measure.setter
    def unit_pricing_measure(self, unit_pricing_measure):
        """Sets the unit_pricing_measure of this GoogleProduct.


        :param unit_pricing_measure: The unit_pricing_measure of this GoogleProduct.  # noqa: E501
        :type: UnitMeasure
        """

        self._unit_pricing_measure = unit_pricing_measure

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GoogleProduct):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
