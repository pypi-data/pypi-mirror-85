# coding: utf-8

"""
    VeeRoute.UD

    VeeRoute.UD API  # noqa: E501

    The version of the OpenAPI document: 3.7.163569
    Contact: support@veeroute.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import vrt_ud
from vrt_ud.models.facts_result import FactsResult  # noqa: E501
from vrt_ud.rest import ApiException

class TestFactsResult(unittest.TestCase):
    """FactsResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test FactsResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = vrt_ud.models.facts_result.FactsResult()  # noqa: E501
        if include_optional :
            return FactsResult(
                job_done = [
                    vrt_ud.models.fact_job_done.FactJobDone(
                        performer_id = 'f_887', 
                        trip_id = 'default', 
                        order_id = 'default', 
                        demand_key = 'default', 
                        job_number = 1, 
                        job_name = 'default', 
                        message = 'default', 
                        storage_server_file_ids = [
                            'fileid'
                            ], 
                        fact_time = '2020-11-21T09:30+03:00', )
                    ], 
                demand_done = [
                    vrt_ud.models.fact_demand_done.FactDemandDone(
                        performer_id = 'f_887', 
                        trip_id = 'default', 
                        order_id = 'default', 
                        demand_key = 'default', 
                        merchandise_lines = [
                            vrt_ud.models.merchandise_line.MerchandiseLine(
                                goods_name = 'boxes', 
                                goods_unit_name = 'box', 
                                goods_unit_price = 500, 
                                goods_amount = 2, 
                                goods_value = 1000, 
                                vat_rate = 'VAT0000', 
                                barcode = 'default', 
                                fact_time = '2020-11-21T09:30+03:00', )
                            ], 
                        cancellations = [
                            vrt_ud.models.order_cancellation.OrderCancellation(
                                goods_name = 'boxes', 
                                goods_amount = 2, 
                                cancellation_reason = 'no reason', 
                                fact_time = '2020-11-21T09:30+03:00', )
                            ], 
                        fact_time = '2020-11-21T09:30+03:00', )
                    ], 
                demand_cancellation = [
                    vrt_ud.models.fact_demand_cancellation.FactDemandCancellation(
                        performer_id = 'f_887', 
                        trip_id = 'default', 
                        order_id = 'default', 
                        demand_key = 'default', 
                        cancellation_reason = 'no reason', 
                        fact_time = '2020-11-21T09:30+03:00', )
                    ], 
                demand_payment = [
                    vrt_ud.models.fact_demand_payment.FactDemandPayment(
                        performer_id = 'f_887', 
                        trip_id = 'default', 
                        order_id = 'default', 
                        demand_key = 'default', 
                        payment_details = vrt_ud.models.payment_details.PaymentDetails(
                            bill_number_in_shift = '1', 
                            bill_date_time = 'default', 
                            customer_email = 'customer@company.com', 
                            bill_amount_total = 1000, 
                            fd_number = 'default', 
                            fn_number = 'default', 
                            qr_code = 'default', 
                            payment_type = 'default', 
                            approval_code = 'default', 
                            kkt_registration_number = 'default', 
                            invoice = 'default', 
                            f_mark = 'default', 
                            f_shift = 'default', 
                            handmade_prepayment = 1000, 
                            merchandise_lines = [
                                vrt_ud.models.merchandise_line.MerchandiseLine(
                                    goods_name = 'boxes', 
                                    goods_unit_name = 'box', 
                                    goods_unit_price = 500, 
                                    goods_amount = 2, 
                                    goods_value = 1000, 
                                    vat_rate = 'VAT0000', 
                                    barcode = 'default', 
                                    fact_time = '2020-11-21T09:30+03:00', )
                                ], ), 
                        fact_time = '2020-11-21T09:30+03:00', )
                    ], 
                demand_resumed = [
                    vrt_ud.models.fact_demand_resumed.FactDemandResumed(
                        performer_id = 'f_887', 
                        trip_id = 'default', 
                        order_id = 'default', 
                        demand_key = 'default', 
                        fact_time = '2020-11-21T09:30+03:00', )
                    ], 
                event_window_changed = [
                    vrt_ud.models.fact_event_window_changed.FactEventWindowChanged(
                        performer_id = 'f_887', 
                        trip_id = 'default', 
                        order_id = 'default', 
                        demand_key = 'default', 
                        location_id = 'default', 
                        old_hard_time_from = '2020-11-21T09:30+03:00', 
                        old_hard_time_to = '2020-11-21T09:30+03:00', 
                        old_soft_time_from = '2020-11-21T09:30+03:00', 
                        old_soft_time_to = '2020-11-21T09:30+03:00', 
                        new_hard_time_from = '2020-11-21T09:30+03:00', 
                        new_hard_time_to = '2020-11-21T09:30+03:00', 
                        new_soft_time_from = '2020-11-21T09:30+03:00', 
                        new_soft_time_to = '2020-11-21T09:30+03:00', 
                        window_change_reason = 'no reason', 
                        fact_time = '2020-11-21T09:30+03:00', )
                    ], 
                performer_message = [
                    vrt_ud.models.fact_performer_message.FactPerformerMessage(
                        performer_id = 'f_887', 
                        trip_id = 'default', 
                        transport_id = 'default', 
                        message_topic = 'default', 
                        message = 'default', 
                        storage_server_file_ids = [
                            'fileid'
                            ], 
                        fact_time = '2020-11-21T09:30+03:00', )
                    ], 
                trip_status_notice = [
                    vrt_ud.models.fact_trip_status_notice.FactTripStatusNotice(
                        performer_id = 'f_887', 
                        trip_id = 'default', 
                        name = 'RECEIVED', 
                        fact_time = '2020-11-21T09:30+03:00', )
                    ], 
                tripaction_comment_changed = [
                    vrt_ud.models.fact_tripaction_comment_changed.FactTripactionCommentChanged(
                        performer_id = 'f_887', 
                        trip_id = 'default', 
                        order_id = 'default', 
                        demand_key = 'default', 
                        old_comment_value = 'default', 
                        new_comment_value = 'default', 
                        fact_time = '2020-11-21T09:30+03:00', )
                    ], 
                work_started = [
                    vrt_ud.models.fact_work_started.FactWorkStarted(
                        performer_id = 'f_887', 
                        trip_id = 'default', 
                        order_id = 'default', 
                        demand_key = 'default', 
                        fact_time = '2020-11-21T09:30+03:00', )
                    ], 
                trip_progress = [
                    vrt_ud.models.fact_trip_progress.FactTripProgress(
                        trip_id = 'default', 
                        executed_orders_in_trip = 0.3, 
                        executed_orders_for_current_time = 1.2, 
                        fact_time = '2020-11-21T09:30+03:00', )
                    ], 
                photo = [
                    vrt_ud.models.fact_photo.FactPhoto(
                        performer_id = 'f_887', 
                        trip_id = 'default', 
                        order_id = 'default', 
                        demand_key = 'default', 
                        message = 'default', 
                        storage_server_file_id = 'fileid', 
                        fact_time = '2020-11-21T09:30+03:00', )
                    ]
            )
        else :
            return FactsResult(
        )

    def testFactsResult(self):
        """Test FactsResult"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
