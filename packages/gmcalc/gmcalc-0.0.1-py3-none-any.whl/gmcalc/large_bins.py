from .heap_config import HeapConfig


def calc_large_bin_size(index: int, config: HeapConfig) -> (int, int):
    bins_index = config.start_large_index + index - 1
    large_bins = get_large_bins(config)
    return large_bins[bins_index]


def calc_large_bin_index(size: int, config: HeapConfig) -> int:
    large_bins = get_large_bins(config)

    for k, v in large_bins.items():
        min_size, max_size = v
        if min_size <= size <= max_size:
            return k

    return 126


def get_large_bins(config: HeapConfig) -> dict:
    if config.bits == 64:
        return large_bins_64

    if config.align == 16:
        return large_bins_32_16

    return large_bins_32_8


large_bins_64 = {
    # range 64 bytes
    64: (0x400, 0x430),
    65: (0x440, 0x470),
    66: (0x480, 0x4b0),
    67: (0x4c0, 0x4f0),
    68: (0x500, 0x530),
    69: (0x540, 0x570),
    70: (0x580, 0x5b0),
    71: (0x5c0, 0x5f0),
    72: (0x600, 0x630),
    73: (0x640, 0x670),
    74: (0x680, 0x6b0),
    75: (0x6c0, 0x6f0),
    76: (0x700, 0x730),
    77: (0x740, 0x770),
    78: (0x780, 0x7b0),
    79: (0x7c0, 0x7f0),
    80: (0x800, 0x830),
    81: (0x840, 0x870),
    82: (0x880, 0x8b0),
    83: (0x8c0, 0x8f0),
    84: (0x900, 0x930),
    85: (0x940, 0x970),
    86: (0x980, 0x9b0),
    87: (0x9c0, 0x9f0),
    88: (0xa00, 0xa30),
    89: (0xa40, 0xa70),
    90: (0xa80, 0xab0),
    91: (0xac0, 0xaf0),
    92: (0xb00, 0xb30),
    93: (0xb40, 0xb70),
    94: (0xb80, 0xbb0),
    95: (0xbc0, 0xbf0),
    96: (0xc00, 0xc30),

    97: (0xc40, 0xdf0),
    98: (0xe00, 0xff0),
    99: (0x1000, 0x11f0),
    100: (0x1200, 0x13f0),
    101: (0x1400, 0x15f0),
    102: (0x1600, 0x17f0),
    103: (0x1800, 0x19f0),
    104: (0x1a00, 0x1bf0),
    105: (0x1c00, 0x1df0),
    106: (0x1e00, 0x1ff0),
    107: (0x2000, 0x21f0),
    108: (0x2200, 0x23f0),
    109: (0x2400, 0x25f0),
    110: (0x2600, 0x27f0),
    111: (0x2800, 0x29f0),
    112: (0x2a00, 0x2ff0),
    113: (0x3000, 0x3ff0),
    114: (0x4000, 0x4ff0),
    115: (0x5000, 0x5ff0),
    116: (0x6000, 0x6ff0),
    117: (0x7000, 0x7ff0),
    118: (0x8000, 0x8ff0),
    119: (0x9000, 0x9ff0),
    120: (0xa000, 0xfff0),
    121: (0x10000, 0x17ff0),
    122: (0x18000, 0x1fff0),
    123: (0x20000, 0x27ff0),
    124: (0x28000, 0x5fff0),
    125: (0x60000, 0xffff0),
    126: (0x100000, -1),
}


large_bins_32_16 = {
    # range 64 bytes
    65: (0x400, 0x430),
    66: (0x440, 0x470),
    67: (0x480, 0x4b0),
    68: (0x4c0, 0x4f0),
    69: (0x500, 0x530),
    70: (0x540, 0x570),
    71: (0x580, 0x5b0),
    72: (0x5c0, 0x5f0),
    73: (0x600, 0x630),
    74: (0x640, 0x670),
    75: (0x680, 0x6b0),
    76: (0x6c0, 0x6f0),
    77: (0x700, 0x730),
    78: (0x740, 0x770),
    79: (0x780, 0x7b0),
    80: (0x7c0, 0x7f0),
    81: (0x800, 0x830),
    82: (0x840, 0x870),
    83: (0x880, 0x8b0),
    84: (0x8c0, 0x8f0),
    85: (0x900, 0x930),
    86: (0x940, 0x970),
    87: (0x980, 0x9b0),
    88: (0x9c0, 0x9f0),
    89: (0xa00, 0xa30),
    90: (0xa40, 0xa70),
    91: (0xa80, 0xab0),
    92: (0xac0, 0xaf0),
    93: (0xb00, 0xb30),
    94: (0xb40, 0xb70),
    95: (-1, -1),
    96: (0xb80, 0xbf0),
    97: (0xc00, 0xdf0),
    98: (0xe00, 0xff0),
    99: (0x1000, 0x11f0),
    100: (0x1200, 0x13f0),
    101: (0x1400, 0x15f0),
    102: (0x1600, 0x17f0),
    103: (0x1800, 0x19f0),
    104: (0x1a00, 0x1bf0),
    105: (0x1c00, 0x1df0),
    106: (0x1e00, 0x1ff0),
    107: (0x2000, 0x21f0),
    108: (0x2200, 0x23f0),
    109: (0x2400, 0x25f0),
    110: (0x2600, 0x27f0),
    111: (0x2800, 0x29f0),
    112: (0x2a00, 0x2ff0),
    113: (0x3000, 0x3ff0),
    114: (0x4000, 0x4ff0),
    115: (0x5000, 0x5ff0),
    116: (0x6000, 0x6ff0),
    117: (0x7000, 0x7ff0),
    118: (0x8000, 0x8ff0),
    119: (0x9000, 0x9ff0),
    120: (0xa000, 0xfff0),
    121: (0x10000, 0x17ff0),
    122: (0x18000, 0x1fff0),
    123: (0x20000, 0x27ff0),
    124: (0x28000, 0x5fff0),
    125: (0x60000, 0xffff0),
    126: (0x100000, -1),
}


large_bins_32_8 = {
    # range 64 bytes
    64: (0x200, 0x238),
    65: (0x240, 0x278),
    66: (0x280, 0x2b8),
    67: (0x2c0, 0x2f8),
    68: (0x300, 0x338),
    69: (0x340, 0x378),
    70: (0x380, 0x3b8),
    71: (0x3c0, 0x3f8),
    72: (0x400, 0x438),
    73: (0x440, 0x478),
    74: (0x480, 0x4b8),
    75: (0x4c0, 0x4f8),
    76: (0x500, 0x538),
    77: (0x540, 0x578),
    78: (0x580, 0x5b8),
    79: (0x5c0, 0x5f8),
    80: (0x600, 0x638),
    81: (0x640, 0x678),
    82: (0x680, 0x6b8),
    83: (0x6c0, 0x6f8),
    84: (0x700, 0x738),
    85: (0x740, 0x778),
    86: (0x780, 0x7b8),
    87: (0x7c0, 0x7f8),
    88: (0x800, 0x838),
    89: (0x840, 0x878),
    90: (0x880, 0x8b8),
    91: (0x8c0, 0x8f8),
    92: (0x900, 0x938),
    93: (0x940, 0x978),
    94: (0x980, 0x9b8),
    95: (0x9c0, 0x9f8),
    96: (0xa00, 0xbf8),
    97: (0xc00, 0xdf8),
    98: (0xe00, 0xff8),
    99: (0x1000, 0x11f8),
    100: (0x1200, 0x13f8),
    101: (0x1400, 0x15f8),
    102: (0x1600, 0x17f8),
    103: (0x1800, 0x19f8),
    104: (0x1a00, 0x1bf8),
    105: (0x1c00, 0x1df8),
    106: (0x1e00, 0x1ff8),
    107: (0x2000, 0x21f8),
    108: (0x2200, 0x23f8),
    109: (0x2400, 0x25f8),
    110: (0x2600, 0x27f8),
    111: (0x2800, 0x29f8),
    112: (0x2a00, 0x2ff8),
    113: (0x3000, 0x3ff8),
    114: (0x4000, 0x4ff8),
    115: (0x5000, 0x5ff8),
    116: (0x6000, 0x6ff8),
    117: (0x7000, 0x7ff8),
    118: (0x8000, 0x8ff8),
    119: (0x9000, 0x9ff8),
    120: (0xa000, 0xfff8),
    121: (0x10000, 0x17ff8),
    122: (0x18000, 0x1fff8),
    123: (0x20000, 0x27ff8),
    124: (0x28000, 0x5fff8),
    125: (0x60000, 0xffff8),
    126: (0x100000, -1),
}
