name: Build

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install package
      run: |
        pip install .[develop]
    - name: Lint with pylint
      run: |
        pylint --rcfile=toolscfg/pylintrc protobuf3_models setup_commands tests
    - name: Typecheck with mypy
      run: |
        mypy --config-file toolscfg/mypy.ini
    - name: Test
      run: |
        python setup.py pytest
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: ./coverage.xml

  coverage:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags') == false
    steps:
    - name: Download coverage
      uses: actions/download-artifact@v2
      with:
        name: coverage
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        fail_ci_if_error: true

  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install build tools
      run: pip install twine wheel
    - name: Package build
      run: python setup.py sdist bdist_wheel
    - name: PyPi Publish
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
