# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/13_commons.ipynb (unless otherwise specified).

__all__ = ['__all__', 'GlobalInstances', 'test', 'test_eq', 'listify', 'setify', 'jsonify_deltalake']

# Cell
#export
from collections import namedtuple
import operator
import json

# Cell
__all__=['GlobalInstances','test','test_eq','listify','setify', 'jsonify_deltalake']

# Cell
class GlobalInstances:
    "stores all the global instances"
    spark=None

# Cell
def test(a,b,cmp,cname=None):
    if cname is None: cname=cmp.__name__
    assert cmp(a,b),f"{cname}:\n{a}\n{b}"

def test_eq(a,b): test(a,b,operator.eq,'==')

# Cell
def listify(o):
    if o is None: return []
    if isinstance(o, list): return o
    if isinstance(o, str): return [o]
    if isinstance(o, dict): return o.values()
    if isinstance(o, Iterable): return list(o)
    return [o]

# Cell
def setify(o): return o if isinstance(o,set) else set(listify(o))

# Cell
def jsonify_deltalake(dataframe):
    return dataframe.toJSON().map(lambda j: json.loads(j)).collect()