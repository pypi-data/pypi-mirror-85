from samson.math.algebra.rings.integer_ring import ZZ
from samson.math.general import pohlig_hellman, random_int_between
from samson.encoding.general import PKIEncoding
from samson.encoding.pkcs1.pkcs1_diffie_hellman_parameters import PKCS1DiffieHellmanParameters
from samson.encoding.pkcs8.pkcs8_diffie_hellman_private_key import PKCS8DiffieHellmanPrivateKey
from samson.encoding.x509.x509_diffie_hellman_public_key import X509DiffieHellmanPublicKey
from samson.encoding.x509.x509_diffie_hellman_certificate import X509DiffieHellmanCertificate, X509DiffieHellmanCertificateSigningRequest
from samson.encoding.dns_key.dns_key_dh_key import DNSKeyDHPrivateKey, DNSKeyDHPublicKey

from samson.core.primitives import KeyExchangeAlg, Primitive
from samson.core.encodable_pki import EncodablePKI
from samson.core.metadata import FrequencyType
from samson.ace.decorators import register_primitive


@register_primitive()
class DiffieHellman(KeyExchangeAlg, EncodablePKI):
    """
    Diffie-Hellman exchange
    """

    PRIV_ENCODINGS = {
        PKIEncoding.PKCS8: PKCS8DiffieHellmanPrivateKey,
        PKIEncoding.DNS_KEY: DNSKeyDHPrivateKey
    }

    PUB_ENCODINGS = {
        PKIEncoding.PKCS1: PKCS1DiffieHellmanParameters,
        PKIEncoding.X509: X509DiffieHellmanPublicKey,
        PKIEncoding.X509_CERT: X509DiffieHellmanCertificate,
        PKIEncoding.DNS_KEY: DNSKeyDHPublicKey,
        PKIEncoding.X509_CSR: X509DiffieHellmanCertificateSigningRequest
    }

    USAGE_FREQUENCY = FrequencyType.PROLIFIC

    # https://tools.ietf.org/html/rfc2409#section-6
    # Oakley groups
    MODP_768  = 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A63A3620FFFFFFFFFFFFFFFF
    MODP_1024 = 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE65381FFFFFFFFFFFFFFFF

    # https://www.ietf.org/rfc/rfc3526.txt
    MODP_1536 = 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA237327FFFFFFFFFFFFFFFF
    MODP_2048 = 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AACAA68FFFFFFFFFFFFFFFF
    MODP_3072 = 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF
    MODP_4096 = 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D788719A10BDBA5B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8DBBBC2DB04DE8EF92E8EFC141FBECAA6287C59474E6BC05D99B2964FA090C3A2233BA186515BE7ED1F612970CEE2D7AFB81BDD762170481CD0069127D5B05AA993B4EA988D8FDDC186FFB7DC90A6C08F4DF435C934063199FFFFFFFFFFFFFFFF
    MODP_6144 = 0x
    MODP_8192 = 0x

    def __init__(self, g: int=2, p: int=MODP_2048, q: int=None, key: int=None, y: int=None):
        """
        Parameters:
            key (int): Secret key.
            g   (int): Exponent base.
            p   (int): Modulus.
            q   (int): Order.
        """
        Primitive.__init__(self)
        self.key = key or random_int_between(2, q or p)
        self.g = g
        self.p = p
        self.q = q
        self.y = y or self.get_challenge()



    def get_challenge(self) -> int:
        """
        Gets the challenge.

        Returns:
            int: The challenge.
        """
        return pow(self.g, self.key, self.p)



    def derive_key(self, challenge: int) -> int:
        """
        Derives the shared key from the other instance's challenge.

        Parameters:
            challenge (int): The other instance's challenge.
        
        Returns:
            int: Shared key.
        """
        return pow(challenge, self.key, self.p)



    def factor_key_from_smooth_p(self, challenge: int) -> int:
        """
        If `p` is smooth, this will factor it and recover the private key from the challenge/public key.

        Parameters:
            challenge (int): The challenge observed.
        
        Returns:
            int: The challenger's private key.
        """
        R = (ZZ/ZZ(self.p)).mul_group()
        return pohlig_hellman(R(self.g), R(challenge), self.p - 1)


DHModToGroup = {
    DiffieHellman.MODP_768: 1,
    DiffieHellman.MODP_1024: 2,
    DiffieHellman.MODP_1536: 5,
    DiffieHellman.MODP_2048: 14,
    DiffieHellman.MODP_3072: 15,
    DiffieHellman.MODP_4096: 16,
    DiffieHellman.MODP_6144: 17,
    DiffieHellman.MODP_8192: 18
}

DHGroupToMod = {v:k for k,v in DHModToGroup.items()}
