from samson.ace.consequence import Consequence, Manipulation
from samson.core.base_object import BaseObject

class DynamicExploit(BaseObject):
    def __init__(self, attack, consequence, requirements):
        self.attack = attack
        self.consequence  = consequence
        self.requirements = requirements


class KeyPossession(BaseObject):
    def __init__(self):
        self.consequence  = Consequence.KEY_RECOVERY
        self.requirements = [Consequence.KEY_RECOVERY]


class IdentityExploit(BaseObject):
    def __init__(self, consequence):
        self.consequence  = consequence
        self.requirements = []


class PlaintextPossession(IdentityExploit):
    def __init__(self):
        self.consequence  = Consequence.PLAINTEXT_RECOVERY
        self.requirements = []


class BitlevelMalleability(IdentityExploit):
    def __init__(self):
        self.consequence  = Consequence.ENCRYPTION_BYPASS
        self.requirements = [Manipulation.PT_BIT_LEVEL]
