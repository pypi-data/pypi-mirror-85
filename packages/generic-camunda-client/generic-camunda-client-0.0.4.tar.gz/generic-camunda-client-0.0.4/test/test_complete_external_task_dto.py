# coding: utf-8

"""
    Camunda BPM REST API

    OpenApi Spec for Camunda BPM REST API.  # noqa: E501

    The version of the OpenAPI document: 7.14.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import generic_camunda_client
from generic_camunda_client.models.complete_external_task_dto import CompleteExternalTaskDto  # noqa: E501
from generic_camunda_client.rest import ApiException

class TestCompleteExternalTaskDto(unittest.TestCase):
    """CompleteExternalTaskDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CompleteExternalTaskDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = generic_camunda_client.models.complete_external_task_dto.CompleteExternalTaskDto()  # noqa: E501
        if include_optional :
            return CompleteExternalTaskDto(
                worker_id = '0', 
                variables = {
                    'key' : generic_camunda_client.models.variable_value_dto.VariableValueDto(
                        value = generic_camunda_client.models.value.value(), 
                        type = '0', 
                        value_info = { }, )
                    }, 
                local_variables = {
                    'key' : generic_camunda_client.models.variable_value_dto.VariableValueDto(
                        value = generic_camunda_client.models.value.value(), 
                        type = '0', 
                        value_info = { }, )
                    }
            )
        else :
            return CompleteExternalTaskDto(
        )

    def testCompleteExternalTaskDto(self):
        """Test CompleteExternalTaskDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
