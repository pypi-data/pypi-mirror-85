@startuml





/' Objects '/

abstract class Class01 {
	+{abstract} AbstractPublicMethod(int param) : bool
	+PublicMethod(int param) : bool {query}
	+{static} StaticPublicMethod(bool param) : bool
	#{abstract} _AbstractMethod(int param) : bool
	#_ProtectedMethod(int param) : bool
	#{static} _StaticProtectedMethod(bool param) : bool
	#_protected_var : int
	+public_var : int
}


class Class02 {
	+AbstractPublicMethod(int param) : bool
	-_AbstractMethod(int param) : bool
	-_PrivateMethod(int param) : bool
	-{static} _StaticPrivateMethod(bool param) : bool
	-_private_var : int
}


class Class03 <template<typename T>> {
	+Class03()
	+~Class03()
	-_data : Class01*
	-_obj : Class01*
	-_typed_obj : T*
	-_obj_list : list<Class02>
	+Method(Interface::Class04& c4) : void
}


namespace Interface {
	class Class04 {
		+Class04()
		+~Class04()
		-_obj : Class01*
		-_flag : bool
	}
}


namespace Interface {
	class Class04_derived {
		+Class04_derived()
		+~Class04_derived()
		-_var : int
	}
}


enum Enum01 {
	VALUE_0
	VALUE_1
	VALUE_2
}





/' Inheritance relationships '/

.Class01 <|-- .Class02


namespace Interface {
	Class04 <|-- Class04_derived
}





/' Aggregation relationships '/

.Class03 "2" o-- .Class01


.Class03 *-- .Class02


Interface.Class04 o-- .Class01





@enduml
