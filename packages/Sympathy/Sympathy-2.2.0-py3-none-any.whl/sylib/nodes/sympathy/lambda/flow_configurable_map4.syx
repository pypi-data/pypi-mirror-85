<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" tag="Generic.Lambda" uuid="{3299d22b-35ab-4da8-beea-57a1979c95e4}" id="org.sysess.lambda.configurablemap4flow">
  <label>Parallel Map 4 Configurable</label>
  <description>Map flow that can be configured to run one to four parallel processes.</description>
  <icon>map.svg</icon>
  <aggregation type="json">
  {
    "conf_view": "TabBuilder",
    "override": true,
    "selected_uuids": [
      "{785f8bd6-6a3f-4cc1-adee-1a880bf4eb09}",
      "{8408b843-3a9c-4eae-be02-d1c3ea72cb0d}"
    ]
  }
  </aggregation>
  <ports>
    <input index="0" key="Port" parent="True" scheme="hdf5" type="table -&gt; table" uuid="{088c5a81-4333-4a21-8fc0-ca0452df53fd}" x="1375.0" y="1850.0">
      <label>Port</label>
    </input>
    <input index="1" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{02cf34fe-6faf-4e9d-b13f-e530c60837b6}" x="1375.0" y="2150.0">
      <label>Port</label>
    </input>
    <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{5e933d3d-292c-4e43-9fe5-a07b3eb507fe}" x="2275.0" y="2000.0">
      <label>Port</label>
    </output>
  </ports>
  <flow cls="Flow" uuid="{785f8bd6-6a3f-4cc1-adee-1a880bf4eb09}" x="1525.0" y="2150.0">
    <label>Config Processes</label>
    <aggregation type="json">
    {
      "conf_view": "TabBuilder",
      "override": true,
      "selected_uuids": [
        "{eab17a55-605a-4161-b88a-dfe6c5d53c44}"
      ]
    }
    </aggregation>
    <ports>
      <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{aa80f1b2-477e-49c5-ae35-7b3471c27704}" x="1450.0" y="2250.0">
        <label>Port</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[[table]]" uuid="{de62881f-6e8e-4970-839d-058c463fdc95}" x="1900.0" y="2250.0">
        <label>Port</label>
      </output>
    </ports>
    <node id="org.sysess.sympathy.create.createparameters" port_format="1.1" uuid="{6ca16553-71e8-404c-ad2a-48f11abc0a17}" x="1450.0" y="2350.0">
      <label>Manually Create Parameters</label>
      <version>0.1</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "code": {
          "editor": {
            "language": "python",
            "type": "code"
          },
          "label": "",
          "order": 0,
          "type": "string",
          "value": "parameters.set_integer(\n    'length',\n    label= 'Number of Map processes to use',\n    description='Select the number of Map processes to use.',\n    value=1,\n    editor=synode.editors.bounded_spinbox_editor(\n        1, 4, 1))\n\nparameters.set_integer(\n    'minimum',\n    label= 'Number of minimum elements for each process (0 = unlimited)',\n    description=('Select number of minimum elements for each process. '\n                 'This may result in fewer processes used if the data is small. '\n                 '(0 = unlimited).'),\n    value=0,\n    editor=synode.editors.bounded_lineedit_editor(\n        0, None))\n\n"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="output" scheme="hdf5" type="json" type_base="json" uuid="{f69a5edf-d09d-4796-a492-d5d6bd71ea56}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.chunklist" port_format="1.1" uuid="{8e791f77-88ba-431f-9fb2-3d3d32e41f40}" x="1750.0" y="2250.0">
      <label>Chunk List</label>
      <version>1.0</version>
      <description>Split a list into several chunks of at most the specified length or a specified number of chunks</description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "length": {
          "editor": null,
          "label": "Length",
          "order": 0,
          "type": "integer",
          "value": 4
        },
        "minimum": {
          "editor": null,
          "label": "Minimum chunk size",
          "order": 2,
          "type": "integer",
          "value": 0
        },
        "mode": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": ["Length of each chunk", "Length of chunk list"],
            "type": "combobox"
          },
          "label": "Length specifies",
          "order": 1,
          "type": "string",
          "value": "Length of chunk list"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{1db5f4e7-699a-422d-9b2e-5f0d8b5b8c03}">
          <label>List</label>
        </input>
        <input key="__sy_conf__" scheme="hdf5" type="json" type_base="json" uuid="{ac5f9efa-33b9-4689-a703-61883d9c6f1e}">
          <label>Configuration port</label>
        </input>
        <output key="chunks" scheme="hdf5" type="[[table]]" type_base="[[&lt;a&gt;]]" uuid="{9bf97cf1-2dc8-43dc-921f-ac23c5be4b84}">
          <label>Chunk List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.configureparameters" port_format="1.1" uuid="{eab17a55-605a-4161-b88a-dfe6c5d53c44}" x="1600.0" y="2350.0">
      <label>Map Setup</label>
      <version>0.1</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "length": {
          "editor": {
            "max": 4,
            "min": 1,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Number of Map processes to use",
          "type": "integer",
          "value": 4
        },
        "minimum": {
          "editor": {
            "max": null,
            "min": 0,
            "type": "lineedit"
          },
          "label": "Number of minimum elements for each process (0 = unlimited)",
          "type": "integer",
          "value": 0
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="json_parameters" scheme="hdf5" type="json" type_base="json" uuid="{48248a34-3c98-4807-96a2-7d87fc4a8b02}">
          <label>Json Parameters</label>
        </input>
        <output key="json_parameters" scheme="hdf5" type="json" type_base="json" uuid="{36c30010-23fc-4f09-b24d-4f264ac230e9}">
          <label>Json Parameters</label>
        </output>
        <output key="table_parameters" scheme="hdf5" type="table" type_base="table" uuid="{db53a0e3-d860-4883-b86b-2066542a8ff8}">
          <label>Table Parameters</label>
        </output>
      </ports>
    </node>
    <connection type="json" uuid="{89922df3-a86e-4f76-abae-51bcdd9131b1}">
      <source node="{eab17a55-605a-4161-b88a-dfe6c5d53c44}" port="{36c30010-23fc-4f09-b24d-4f264ac230e9}"/>
      <destination node="{8e791f77-88ba-431f-9fb2-3d3d32e41f40}" port="{ac5f9efa-33b9-4689-a703-61883d9c6f1e}"/>
    </connection>
    <connection type="[table]" uuid="{a93d353f-4c5a-4a1f-9227-1cebc6ac003b}">
      <source node="{785f8bd6-6a3f-4cc1-adee-1a880bf4eb09}" port="{aa80f1b2-477e-49c5-ae35-7b3471c27704}"/>
      <destination node="{8e791f77-88ba-431f-9fb2-3d3d32e41f40}" port="{1db5f4e7-699a-422d-9b2e-5f0d8b5b8c03}"/>
    </connection>
    <connection type="[[table]]" uuid="{c73e5d8e-2c40-4575-b5be-0a236e60ec3d}">
      <source node="{8e791f77-88ba-431f-9fb2-3d3d32e41f40}" port="{9bf97cf1-2dc8-43dc-921f-ac23c5be4b84}"/>
      <destination node="{785f8bd6-6a3f-4cc1-adee-1a880bf4eb09}" port="{de62881f-6e8e-4970-839d-058c463fdc95}"/>
    </connection>
    <connection type="json" uuid="{f3b325d9-9bcc-4747-9cdf-4e11c2d339b2}">
      <source node="{6ca16553-71e8-404c-ad2a-48f11abc0a17}" port="{f69a5edf-d09d-4796-a492-d5d6bd71ea56}"/>
      <destination node="{eab17a55-605a-4161-b88a-dfe6c5d53c44}" port="{48248a34-3c98-4807-96a2-7d87fc4a8b02}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.slice.slicelist" port_format="1.1" uuid="{01212bef-9238-41bb-9069-75cdf9cb5e15}" x="1675.0" y="1850.0">
    <label>Slice List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "limit": {
        "editor": {
          "max": 10000,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Limit preview to",
        "order": 1,
        "type": "integer",
        "value": 100
      },
      "slice": {
        "editor": null,
        "label": "Slice",
        "order": 0,
        "type": "string",
        "value": "[::4]"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[[table]]" type_base="[&lt;a&gt;]" uuid="{90ccdb93-cce6-476a-b4d4-909e8f2a9b4d}">
        <label>Input List</label>
      </input>
      <output key="list" scheme="hdf5" type="[[table]]" type_base="[&lt;a&gt;]" uuid="{336d9125-bc9f-4651-93a5-fe503584e4a8}">
        <label>Sliced output List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.slice.slicelist" port_format="1.1" uuid="{0371b9a9-0da0-4e1e-8c18-7679c10b43b9}" x="1675.0" y="2150.0">
    <label>Slice List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "limit": {
        "editor": {
          "max": 10000,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Limit preview to",
        "order": 1,
        "type": "integer",
        "value": 100
      },
      "slice": {
        "editor": null,
        "label": "Slice",
        "order": 0,
        "type": "string",
        "value": "[3::4]"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[[table]]" type_base="[&lt;a&gt;]" uuid="{2d4fcc86-b223-42ef-9734-700ee7bc7dcc}">
        <label>Input List</label>
      </input>
      <output key="list" scheme="hdf5" type="[[table]]" type_base="[&lt;a&gt;]" uuid="{4abbd7aa-fda9-4fb4-af63-ebe3d003bf11}">
        <label>Sliced output List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.flattenlist" port_format="1.1" uuid="{0a5bf8b2-e959-4378-9ab0-17e5f980c945}" x="1825.0" y="2150.0">
    <label>Flatten List</label>
    <version>1.0</version>
    <description>Flatten a nested list</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[[table]]" type_base="[[&lt;a&gt;]]" uuid="{886d3870-e616-428f-8c44-453f51d3c43b}">
        <label>Nested List</label>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{fae0dcb6-9d32-4a09-ac50-095ecf6ec571}">
        <label>Flattened List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.slice.slicelist" port_format="1.1" uuid="{2e6205eb-d813-4248-8e43-42f1c2073df2}" x="1675.0" y="2050.0">
    <label>Slice List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "limit": {
        "editor": {
          "max": 10000,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Limit preview to",
        "order": 1,
        "type": "integer",
        "value": 100
      },
      "slice": {
        "editor": null,
        "label": "Slice",
        "order": 0,
        "type": "string",
        "value": "[2::4]"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[[table]]" type_base="[&lt;a&gt;]" uuid="{b8a69e1b-500c-4d42-9fa2-d14708436047}">
        <label>Input List</label>
      </input>
      <output key="list" scheme="hdf5" type="[[table]]" type_base="[&lt;a&gt;]" uuid="{f8e32636-111d-4f70-a7cf-363b65d537c8}">
        <label>Sliced output List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" port_format="1.1" uuid="{2fa0540a-6531-4e6b-a100-6939076960cd}" x="1975.0" y="1950.0">
    <label>Worker Map 2</label>
    <version>1.0</version>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "fail_strategy": {
        "editor": {
          "display": null,
          "edit": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Action on exception",
        "list": ["Error", "Create Empty Item", "Skip Item"],
        "mode": "selected",
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="table -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{f1d5b6f0-507f-41bd-8aea-b1a7a06f125c}">
        <label>Lambda Function to Map</label>
      </input>
      <input key="List" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{5f6b2aae-10d5-4552-8dc6-ef453aeed854}">
        <label>Argument List</label>
      </input>
      <input key="__sy_conf__" scheme="hdf5" type="json" type_base="&lt;z&gt;" uuid="{6dffd8e0-60a4-4860-b65d-f01b1763bf9c}">
        <label>Configuration port</label>
      </input>
      <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{6f0dcb95-01ba-45ba-8616-53df65bc508c}">
        <label>Output List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.empty" port_format="1.1" uuid="{337a93cc-b0df-4d26-b687-b1a2bc0a6f88}" x="1375.0" y="2000.0">
    <label>Empty</label>
    <version>1.1</version>
    <description>Generate empty data of inferred or specified type</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "datatype": {
        "editor": null,
        "label": "Datatype",
        "order": 0,
        "type": "string",
        "value": "&lt;a&gt;"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{3d780579-3138-44e8-a8c1-571f46427e5c}">
        <label>Output port containing empty data (must be connected or specified)</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.extendlist" port_format="1.1" uuid="{3ada62f8-544e-4ef1-b543-d3687ffbcf2f}" x="2125.0" y="2000.0">
    <label>Extend List</label>
    <version>1.0</version>
    <description>Extend a list</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{e062e56b-8455-486e-ac1d-ae890c79f3cb}">
        <label>List that will be added</label>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{1c43a3de-0ee0-48f0-8a3e-fecae1cae765}">
        <label>List that will be added</label>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{32910049-046a-40f6-be77-8e0aa9eb109e}">
        <label>List that will be added</label>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{2adf6fdf-07f6-48c4-99ac-3a494285a710}">
        <label>List that will be added</label>
      </input>
      <output key="output" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{1125acf0-61ba-4b09-9366-feddf5ea8a24}">
        <label>The extended List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.flattenlist" port_format="1.1" uuid="{48d96c87-624f-4934-8b65-040c7d91302b}" x="1825.0" y="1850.0">
    <label>Flatten List</label>
    <version>1.0</version>
    <description>Flatten a nested list</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[[table]]" type_base="[[&lt;a&gt;]]" uuid="{ca1e3467-1f53-44a1-bdb3-84ab060c8486}">
        <label>Nested List</label>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{ecdb0a0e-20cf-45c2-89e5-bc9003a80167}">
        <label>Flattened List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" port_format="1.1" uuid="{796024ad-199d-42bf-af4c-6124909c502a}" x="1975.0" y="2050.0">
    <label>Worker Map 3</label>
    <version>1.0</version>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "fail_strategy": {
        "editor": {
          "display": null,
          "edit": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Action on exception",
        "list": ["Error", "Create Empty Item", "Skip Item"],
        "mode": "selected",
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="table -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{72bc65bb-2617-48e4-bdbf-2c208568aa47}">
        <label>Lambda Function to Map</label>
      </input>
      <input key="List" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{ab3a837d-930f-4121-98a9-1a3e0212431d}">
        <label>Argument List</label>
      </input>
      <input key="__sy_conf__" scheme="hdf5" type="json" type_base="&lt;z&gt;" uuid="{446d12f3-f928-4a4d-b58f-4d3f1c1d87fa}">
        <label>Configuration port</label>
      </input>
      <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{91c1f74b-a400-43d6-9516-978923e39270}">
        <label>Output List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" port_format="1.1" uuid="{8408b843-3a9c-4eae-be02-d1c3ea72cb0d}" x="1525.0" y="2000.0">
    <label>Error handling</label>
    <version>1.0</version>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "fail_strategy": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Action on exception",
        "list": ["Error", "Create Empty Item", "Skip Item"],
        "mode": "selected",
        "order": 0,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="table -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{e3d6edc4-3fac-4a08-8642-2c84b1fabfad}">
        <label>Lambda Function to Map</label>
      </input>
      <input key="List" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{ce0c2954-bba8-4922-94a7-381d0ada52fb}">
        <label>Argument List</label>
      </input>
      <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{e3807773-91da-4035-80f3-8bf056cff630}">
        <label>Output List</label>
      </output>
      <output key="__sy_conf__" scheme="hdf5" type="json" type_base="json" uuid="{8f19658a-3103-404b-9719-00b4b168849e}">
        <label>Configuration port</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" port_format="1.1" uuid="{a9d16105-1006-4142-9dce-ecde28fabbda}" x="1975.0" y="1850.0">
    <label>Worker Map 1</label>
    <version>1.0</version>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "fail_strategy": {
        "editor": {
          "display": null,
          "edit": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Action on exception",
        "list": ["Error", "Create Empty Item", "Skip Item"],
        "mode": "selected",
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="table -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{fd7b435a-0c51-4e45-9c62-f911e9e2a66d}">
        <label>Lambda Function to Map</label>
      </input>
      <input key="List" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{2fb25918-a6a9-4e82-b7ce-9299a5769c8d}">
        <label>Argument List</label>
      </input>
      <input key="__sy_conf__" scheme="hdf5" type="json" type_base="&lt;z&gt;" uuid="{1304796e-2a5b-4189-a257-7ab11156af72}">
        <label>Configuration port</label>
      </input>
      <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{ebca5dc3-2aca-4371-b1b6-f269705dc5ad}">
        <label>Output List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" port_format="1.1" uuid="{addb2470-3696-4e75-b18e-468b9a289f15}" x="1975.0" y="2150.0">
    <label>Worker Map 4</label>
    <version>1.0</version>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "fail_strategy": {
        "editor": {
          "display": null,
          "edit": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Action on exception",
        "list": ["Error", "Create Empty Item", "Skip Item"],
        "mode": "selected",
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="table -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{95c574ad-acb2-4b73-bc88-3b87ca3706a4}">
        <label>Lambda Function to Map</label>
      </input>
      <input key="List" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{991f4935-b7d3-4277-b074-78df9417bc56}">
        <label>Argument List</label>
      </input>
      <input key="__sy_conf__" scheme="hdf5" type="json" type_base="&lt;z&gt;" uuid="{aaca83c9-2d89-4a42-9558-96aac3b9bac5}">
        <label>Configuration port</label>
      </input>
      <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{9660984b-bd3a-4a9a-976e-3959fb5fe764}">
        <label>Output List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.flattenlist" port_format="1.1" uuid="{b26fead6-fbcf-49ac-abf0-192dcfca16ab}" x="1825.0" y="1950.0">
    <label>Flatten List</label>
    <version>1.0</version>
    <description>Flatten a nested list</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[[table]]" type_base="[[&lt;a&gt;]]" uuid="{c92208dd-fce8-4817-890e-57e7de9c3849}">
        <label>Nested List</label>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{8f95f7c1-9775-426f-b11b-7347ab76cd16}">
        <label>Flattened List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.flattenlist" port_format="1.1" uuid="{cc4fea00-613b-460c-9966-e1e338972504}" x="1825.0" y="2050.0">
    <label>Flatten List</label>
    <version>1.0</version>
    <description>Flatten a nested list</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[[table]]" type_base="[[&lt;a&gt;]]" uuid="{75815190-2533-43c6-ba7c-05c0c5c6da2e}">
        <label>Nested List</label>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{dd8cb7d0-0625-47af-880e-58d0dd1f3e3e}">
        <label>Flattened List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.slice.slicelist" port_format="1.1" uuid="{e189f5e9-a45d-4be2-b194-386f09a7bb74}" x="1675.0" y="1950.0">
    <label>Slice List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "limit": {
        "editor": {
          "max": 10000,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Limit preview to",
        "order": 1,
        "type": "integer",
        "value": 100
      },
      "slice": {
        "editor": null,
        "label": "Slice",
        "order": 0,
        "type": "string",
        "value": "[1::4]"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[[table]]" type_base="[&lt;a&gt;]" uuid="{a3027407-2efb-4be9-a406-62e5a9ae5687}">
        <label>Input List</label>
      </input>
      <output key="list" scheme="hdf5" type="[[table]]" type_base="[&lt;a&gt;]" uuid="{22c9632e-1b32-4dfb-a470-27179c26a806}">
        <label>Sliced output List</label>
      </output>
    </ports>
  </node>
  <connection type="json" uuid="{031b8bec-da69-4f3b-8984-9d09d3861f30}">
    <source node="{8408b843-3a9c-4eae-be02-d1c3ea72cb0d}" port="{8f19658a-3103-404b-9719-00b4b168849e}"/>
    <destination node="{796024ad-199d-42bf-af4c-6124909c502a}" port="{446d12f3-f928-4a4d-b58f-4d3f1c1d87fa}"/>
  </connection>
  <connection type="[[table]]" uuid="{04599570-7a10-4f7f-a2ef-b9feac98e058}">
    <source node="{785f8bd6-6a3f-4cc1-adee-1a880bf4eb09}" port="{de62881f-6e8e-4970-839d-058c463fdc95}"/>
    <destination node="{0371b9a9-0da0-4e1e-8c18-7679c10b43b9}" port="{2d4fcc86-b223-42ef-9734-700ee7bc7dcc}"/>
  </connection>
  <connection type="[[table]]" uuid="{0789619c-81c1-45e3-b357-c8105d4a20bc}">
    <source node="{785f8bd6-6a3f-4cc1-adee-1a880bf4eb09}" port="{de62881f-6e8e-4970-839d-058c463fdc95}"/>
    <destination node="{e189f5e9-a45d-4be2-b194-386f09a7bb74}" port="{a3027407-2efb-4be9-a406-62e5a9ae5687}"/>
  </connection>
  <connection type="table -&gt; table" uuid="{336fabd3-67cf-49ee-b023-fb6806a78a58}">
    <source node="{3299d22b-35ab-4da8-beea-57a1979c95e4}" port="{088c5a81-4333-4a21-8fc0-ca0452df53fd}"/>
    <destination node="{2fa0540a-6531-4e6b-a100-6939076960cd}" port="{f1d5b6f0-507f-41bd-8aea-b1a7a06f125c}"/>
  </connection>
  <connection type="[table]" uuid="{337df5db-c218-4cb1-a206-a2d00fd2d62a}">
    <source node="{3ada62f8-544e-4ef1-b543-d3687ffbcf2f}" port="{1125acf0-61ba-4b09-9366-feddf5ea8a24}"/>
    <destination node="{3299d22b-35ab-4da8-beea-57a1979c95e4}" port="{5e933d3d-292c-4e43-9fe5-a07b3eb507fe}"/>
  </connection>
  <connection type="json" uuid="{3591fe51-42d5-427b-91ea-6558a17c828a}">
    <source node="{8408b843-3a9c-4eae-be02-d1c3ea72cb0d}" port="{8f19658a-3103-404b-9719-00b4b168849e}"/>
    <destination node="{a9d16105-1006-4142-9dce-ecde28fabbda}" port="{1304796e-2a5b-4189-a257-7ab11156af72}"/>
  </connection>
  <connection type="[table]" uuid="{3bc0ff58-7010-467b-941a-e5503ac1f3ea}">
    <source node="{b26fead6-fbcf-49ac-abf0-192dcfca16ab}" port="{8f95f7c1-9775-426f-b11b-7347ab76cd16}"/>
    <destination node="{2fa0540a-6531-4e6b-a100-6939076960cd}" port="{5f6b2aae-10d5-4552-8dc6-ef453aeed854}"/>
  </connection>
  <connection type="[table]" uuid="{46745f0b-e22a-4380-80c7-2c42dc7e40ae}">
    <source node="{a9d16105-1006-4142-9dce-ecde28fabbda}" port="{ebca5dc3-2aca-4371-b1b6-f269705dc5ad}"/>
    <destination node="{3ada62f8-544e-4ef1-b543-d3687ffbcf2f}" port="{e062e56b-8455-486e-ac1d-ae890c79f3cb}"/>
  </connection>
  <connection type="table -&gt; table" uuid="{4dca05c8-c5e0-46ef-820d-e1c1a7fe6f2f}">
    <source node="{3299d22b-35ab-4da8-beea-57a1979c95e4}" port="{088c5a81-4333-4a21-8fc0-ca0452df53fd}"/>
    <destination node="{796024ad-199d-42bf-af4c-6124909c502a}" port="{72bc65bb-2617-48e4-bdbf-2c208568aa47}"/>
  </connection>
  <connection type="[table]" uuid="{4ec8afbe-6b74-4d37-9d26-0cb3580c00c3}">
    <source node="{3299d22b-35ab-4da8-beea-57a1979c95e4}" port="{02cf34fe-6faf-4e9d-b13f-e530c60837b6}"/>
    <destination node="{785f8bd6-6a3f-4cc1-adee-1a880bf4eb09}" port="{aa80f1b2-477e-49c5-ae35-7b3471c27704}"/>
  </connection>
  <connection type="table -&gt; table" uuid="{526a952d-fc2c-4326-8a23-50a14fb90a73}">
    <source node="{3299d22b-35ab-4da8-beea-57a1979c95e4}" port="{088c5a81-4333-4a21-8fc0-ca0452df53fd}"/>
    <destination node="{addb2470-3696-4e75-b18e-468b9a289f15}" port="{95c574ad-acb2-4b73-bc88-3b87ca3706a4}"/>
  </connection>
  <connection type="[table]" uuid="{6d544b16-e1bc-450c-8183-42644037add1}">
    <source node="{cc4fea00-613b-460c-9966-e1e338972504}" port="{dd8cb7d0-0625-47af-880e-58d0dd1f3e3e}"/>
    <destination node="{796024ad-199d-42bf-af4c-6124909c502a}" port="{ab3a837d-930f-4121-98a9-1a3e0212431d}"/>
  </connection>
  <connection type="[table]" uuid="{7335bf1c-3928-4a1f-a3a3-b0da4fc1b77a}">
    <source node="{2fa0540a-6531-4e6b-a100-6939076960cd}" port="{6f0dcb95-01ba-45ba-8616-53df65bc508c}"/>
    <destination node="{3ada62f8-544e-4ef1-b543-d3687ffbcf2f}" port="{1c43a3de-0ee0-48f0-8a3e-fecae1cae765}"/>
  </connection>
  <connection type="json" uuid="{74b6f5a8-38ff-4008-8ee5-26ba2d036109}">
    <source node="{8408b843-3a9c-4eae-be02-d1c3ea72cb0d}" port="{8f19658a-3103-404b-9719-00b4b168849e}"/>
    <destination node="{addb2470-3696-4e75-b18e-468b9a289f15}" port="{aaca83c9-2d89-4a42-9558-96aac3b9bac5}"/>
  </connection>
  <connection type="[table]" uuid="{7644b5bf-17ba-47a2-a2fe-5e03ffae9de1}">
    <source node="{0a5bf8b2-e959-4378-9ab0-17e5f980c945}" port="{fae0dcb6-9d32-4a09-ac50-095ecf6ec571}"/>
    <destination node="{addb2470-3696-4e75-b18e-468b9a289f15}" port="{991f4935-b7d3-4277-b074-78df9417bc56}"/>
  </connection>
  <connection type="[table]" uuid="{89b1c483-fe04-4812-be66-48c36a9d2be4}">
    <source node="{337a93cc-b0df-4d26-b687-b1a2bc0a6f88}" port="{3d780579-3138-44e8-a8c1-571f46427e5c}"/>
    <destination node="{8408b843-3a9c-4eae-be02-d1c3ea72cb0d}" port="{ce0c2954-bba8-4922-94a7-381d0ada52fb}"/>
  </connection>
  <connection type="[table]" uuid="{8b2d6a27-a3e6-48e4-902d-f8276f4350f0}">
    <source node="{48d96c87-624f-4934-8b65-040c7d91302b}" port="{ecdb0a0e-20cf-45c2-89e5-bc9003a80167}"/>
    <destination node="{a9d16105-1006-4142-9dce-ecde28fabbda}" port="{2fb25918-a6a9-4e82-b7ce-9299a5769c8d}"/>
  </connection>
  <connection type="[[table]]" uuid="{974de9d1-d6c5-47e5-acc1-053be9985c90}">
    <source node="{785f8bd6-6a3f-4cc1-adee-1a880bf4eb09}" port="{de62881f-6e8e-4970-839d-058c463fdc95}"/>
    <destination node="{01212bef-9238-41bb-9069-75cdf9cb5e15}" port="{90ccdb93-cce6-476a-b4d4-909e8f2a9b4d}"/>
  </connection>
  <connection type="[[table]]" uuid="{9ba45de1-0cf6-4f8b-924f-1494a571b583}">
    <source node="{785f8bd6-6a3f-4cc1-adee-1a880bf4eb09}" port="{de62881f-6e8e-4970-839d-058c463fdc95}"/>
    <destination node="{2e6205eb-d813-4248-8e43-42f1c2073df2}" port="{b8a69e1b-500c-4d42-9fa2-d14708436047}"/>
  </connection>
  <connection type="[table]" uuid="{9e8baca6-ca7d-4ec6-af58-959737c93a71}">
    <source node="{796024ad-199d-42bf-af4c-6124909c502a}" port="{91c1f74b-a400-43d6-9516-978923e39270}"/>
    <destination node="{3ada62f8-544e-4ef1-b543-d3687ffbcf2f}" port="{32910049-046a-40f6-be77-8e0aa9eb109e}"/>
  </connection>
  <connection type="[[table]]" uuid="{a2a940c4-8f0e-4f79-8a2a-75e77ab13774}">
    <source node="{0371b9a9-0da0-4e1e-8c18-7679c10b43b9}" port="{4abbd7aa-fda9-4fb4-af63-ebe3d003bf11}"/>
    <destination node="{0a5bf8b2-e959-4378-9ab0-17e5f980c945}" port="{886d3870-e616-428f-8c44-453f51d3c43b}"/>
  </connection>
  <connection type="[[table]]" uuid="{b78217a2-aa53-4aef-90f3-b0622b26f9fd}">
    <source node="{01212bef-9238-41bb-9069-75cdf9cb5e15}" port="{336d9125-bc9f-4651-93a5-fe503584e4a8}"/>
    <destination node="{48d96c87-624f-4934-8b65-040c7d91302b}" port="{ca1e3467-1f53-44a1-bdb3-84ab060c8486}"/>
  </connection>
  <connection type="table -&gt; table" uuid="{ba78377e-f2aa-4103-98cc-216bff4a7dbc}">
    <source node="{3299d22b-35ab-4da8-beea-57a1979c95e4}" port="{088c5a81-4333-4a21-8fc0-ca0452df53fd}"/>
    <destination node="{a9d16105-1006-4142-9dce-ecde28fabbda}" port="{fd7b435a-0c51-4e45-9c62-f911e9e2a66d}"/>
  </connection>
  <connection type="[table]" uuid="{c004cf33-2607-4050-9170-2817d1a982c5}">
    <source node="{addb2470-3696-4e75-b18e-468b9a289f15}" port="{9660984b-bd3a-4a9a-976e-3959fb5fe764}"/>
    <destination node="{3ada62f8-544e-4ef1-b543-d3687ffbcf2f}" port="{2adf6fdf-07f6-48c4-99ac-3a494285a710}"/>
  </connection>
  <connection type="json" uuid="{cc5d8718-7ee4-4c93-a57d-371342975b61}">
    <source node="{8408b843-3a9c-4eae-be02-d1c3ea72cb0d}" port="{8f19658a-3103-404b-9719-00b4b168849e}"/>
    <destination node="{2fa0540a-6531-4e6b-a100-6939076960cd}" port="{6dffd8e0-60a4-4860-b65d-f01b1763bf9c}"/>
  </connection>
  <connection type="[[table]]" uuid="{e199e9ab-a79b-4a73-b84a-16406ee62437}">
    <source node="{2e6205eb-d813-4248-8e43-42f1c2073df2}" port="{f8e32636-111d-4f70-a7cf-363b65d537c8}"/>
    <destination node="{cc4fea00-613b-460c-9966-e1e338972504}" port="{75815190-2533-43c6-ba7c-05c0c5c6da2e}"/>
  </connection>
  <connection type="table -&gt; table" uuid="{f330e2a5-2800-49b6-9a64-5ef9dbd68639}">
    <source node="{3299d22b-35ab-4da8-beea-57a1979c95e4}" port="{088c5a81-4333-4a21-8fc0-ca0452df53fd}"/>
    <destination node="{8408b843-3a9c-4eae-be02-d1c3ea72cb0d}" port="{e3d6edc4-3fac-4a08-8642-2c84b1fabfad}"/>
  </connection>
  <connection type="[[table]]" uuid="{fc048427-a8b1-4d34-a132-03f436f02de8}">
    <source node="{e189f5e9-a45d-4be2-b194-386f09a7bb74}" port="{22c9632e-1b32-4dfb-a470-27179c26a806}"/>
    <destination node="{b26fead6-fbcf-49ac-abf0-192dcfca16ab}" port="{c92208dd-fce8-4817-890e-57e7de9c3849}"/>
  </connection>
</flow>
