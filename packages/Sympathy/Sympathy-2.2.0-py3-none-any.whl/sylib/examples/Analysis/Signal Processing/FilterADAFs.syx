<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" uuid="{4ae9288a-6ef6-41a3-8d1a-6f0f19c973f4}">
  <label></label>
  <ports/>
  <node id="org.sysess.sympathy.list.itemtolist" port_format="1.1" uuid="{2c710576-4eb5-4e05-8e36-d6aae646c4bc}" x="1725.0" y="1875.0">
    <label>Item to List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="adaf" type_base="&lt;a&gt;" uuid="{15c4e09f-6a36-4aee-b2ef-d0172fee9450}">
        <label>Input Item</label>
      </input>
      <output key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{5aa080b9-7360-45bf-b8db-356d249d18e6}">
        <label>Item as List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.table2adaf" port_format="1.1" uuid="{318944ec-bbe3-4b54-aaf0-db03bec78e16}" x="1600.0" y="1875.0">
    <label>Table to ADAF</label>
    <version>1.0</version>
    <description>Export content of Table to specified container in ADAF.</description>
    <author>Alexander Busck</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "export_to_group": {
        "editor": {
          "options": [],
          "type": "combobox"
        },
        "label": "Export to group",
        "list": ["Meta", "Result", "Time series"],
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [2],
        "value_names": ["Time series"]
      },
      "raster": {
        "editor": null,
        "label": "Time series raster name",
        "order": 2,
        "type": "string",
        "value": "t"
      },
      "system": {
        "editor": null,
        "label": "Time series system name",
        "order": 1,
        "type": "string",
        "value": "cosine"
      },
      "tb": {
        "editor": {
          "filter": true,
          "type": "listview"
        },
        "label": "Time basis column",
        "list": ["index", "cosines1"],
        "order": 3,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": ["index"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{2968ff3d-3663-4728-9089-32dc25cd1a54}">
        <label>Input Table</label>
      </input>
      <output key="port1" scheme="hdf5" type="adaf" type_base="adaf" uuid="{c7a2f409-2f90-4508-854a-c48162da07b2}">
        <label>ADAF with data in input Table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" port_format="1.1" uuid="{835a6d54-f57c-4847-a3d0-e8cac0a4d39c}" x="1925.0" y="1875.0">
    <label>Get Item List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "index": {
        "editor": {
          "options": [],
          "type": "combobox"
        },
        "label": "Index",
        "list": ["0"],
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": []
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{54a319d9-8b11-45d9-9da1-a471d952a6a8}">
        <label>Input List</label>
      </input>
      <output key="item" scheme="hdf5" type="adaf" type_base="&lt;a&gt;" uuid="{66f61e91-8c44-4e54-a10d-aa0f6f7898a2}">
        <label>Output selected Item from List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" port_format="1.1" uuid="{97a576e9-0e9f-46c9-bc53-7a73c5786e31}" x="2300.0" y="1875.0">
    <label>Item to List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="text" type="figure" type_base="&lt;a&gt;" uuid="{27624789-edb8-439b-ad4f-0a50d20baf43}">
        <label>Input Item</label>
      </input>
      <output key="list" scheme="hdf5" type="[figure]" type_base="[&lt;a&gt;]" uuid="{3c24c0e3-9c1d-4ba3-8ebe-1b68d136643b}">
        <label>Item as List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.visualize.figuresubplot" port_format="1.1" uuid="{984c4c04-7632-4779-b053-334a86c93a79}" x="2550.0" y="1950.0">
    <label>Layout Figures in Subplots</label>
    <version>0.2</version>
    <description>Layout a list of Figures in a Subplot</description>
    <author>Benedikt Ziegler</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "columns": {
        "editor": {
          "max": 100,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Number of columns (0 = best):",
        "order": 1,
        "type": "integer",
        "value": 0
      },
      "join_colorbars": {
        "editor": null,
        "label": "Make first colorbar global",
        "order": 4,
        "type": "boolean",
        "value": false
      },
      "join_legends": {
        "editor": null,
        "label": "Make first legend global",
        "order": 5,
        "type": "boolean",
        "value": false
      },
      "recolor": {
        "editor": null,
        "label": "Auto recolor",
        "order": 2,
        "type": "boolean",
        "value": true
      },
      "remove_internal_ticks": {
        "editor": null,
        "label": "Remove internal ticks",
        "order": 3,
        "type": "boolean",
        "value": false
      },
      "rows": {
        "editor": {
          "max": 100,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Number of rows (0 = best):",
        "order": 0,
        "type": "integer",
        "value": 0
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[figure]" type_base="[figure]" uuid="{b39c6886-0a76-4105-ba5b-17877cfffbf0}">
        <label>List of Figures</label>
      </input>
      <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{8f78f228-b7d9-453c-8016-0a911591346c}">
        <label>A Figure with several subplot axes</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.appendlistnew" port_format="1.1" uuid="{a38a8bdd-4a34-41ce-a97f-2f61583f46bd}" x="2425.0" y="1950.0">
    <label>Append List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[figure]" type_base="[&lt;a&gt;]" uuid="{4e27258f-b3b6-492f-8ed0-6869fed41231}">
        <label>Appended List</label>
      </input>
      <input key="item" scheme="text" type="figure" type_base="&lt;a&gt;" uuid="{1bcd3d55-4f9a-471f-96a9-1f608b78086a}">
        <label>The Item to be appended</label>
      </input>
      <output key="list" scheme="hdf5" type="[figure]" type_base="[&lt;a&gt;]" uuid="{2d319497-0c9c-4860-af95-b58a15c1a850}">
        <label>Appended List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.visualize.figure" port_format="1.1" uuid="{a8e3360f-f82e-45b4-b1ee-11f2e417793b}" x="2150.0" y="1875.0">
    <label>Figure</label>
    <version>0.1</version>
    <description>Create a Figure from some data.</description>
    <author>Benedikt Ziegler &amp; Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "parameters": {
        "description": "The full configuration for this figure.",
        "editor": null,
        "label": "",
        "order": 0,
        "type": "json",
        "value": {"axes": [{"xaxis": {"position": ["bottom", "value"]}, "yaxis": {"position": ["left", "value"]}, "plots": [{"xdata": ["arg['t']", "py"], "ydata": ["arg['cosines1']", "py"], "type": "line"}]}]}
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="input" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{2709c2bc-2ecd-4130-b87a-a5d89759e483}">
        <label>Input</label>
      </input>
      <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{999312a8-146f-49ba-b84a-6417bbb35428}">
        <label>Output figure</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.adaf.filteradafswithplot" port_format="1.1" uuid="{a989020f-e0b8-4aae-8b60-6c51d544635b}" x="1825.0" y="1875.0">
    <label>Filter ADAFs</label>
    <version>1.1</version>
    <description>Filter ADAF data.</description>
    <author>Helena Olen &amp; Benedikt Ziegler</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "auto_plot": {
        "editor": null,
        "label": "Auto refresh",
        "order": 14,
        "type": "boolean",
        "value": false
      },
      "filter_type": {
        "editor": {
          "options": [],
          "type": "combobox"
        },
        "label": "Filter type",
        "list": ["IIR", "FIR"],
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": []
      },
      "filtering": {
        "editor": {
          "options": [],
          "type": "combobox"
        },
        "label": "Filtering",
        "list": ["Forward", "Forward-Backward"],
        "order": 12,
        "passthrough": false,
        "type": "list",
        "value": [1],
        "value_names": []
      },
      "fir_cutoff": {
        "editor": {
          "placeholder": "0.2, ..",
          "type": "lineedit"
        },
        "label": "Cutoff frequency",
        "order": 4,
        "type": "string",
        "value": "0.2"
      },
      "fir_len": {
        "editor": {
          "placeholder": "11",
          "type": "lineedit"
        },
        "label": "Filter length",
        "order": 3,
        "type": "integer",
        "value": 11
      },
      "fir_w1": {
        "editor": {
          "placeholder": "1.0",
          "type": "lineedit"
        },
        "label": "Beta",
        "order": 5,
        "type": "float",
        "value": 1.0
      },
      "fir_w2": {
        "editor": {
          "placeholder": "1.0",
          "type": "lineedit"
        },
        "label": "Sigma",
        "order": 6,
        "type": "float",
        "value": 1.0
      },
      "fir_windows": {
        "editor": {
          "options": [],
          "type": "combobox"
        },
        "label": "Filter windows",
        "list": ["Bartlett", "Bartlett-Hann", "Blackman", "Blackman-Harris", "Bohman", "Boxcar", "Dolph-Chebyshev", "Flat top", "Gaussian", "Generalized Gaussian", "Hamming", "Hann", "Kaiser", "Nuttall", "Parzen", "Slepian", "Triangular"],
        "order": 2,
        "passthrough": false,
        "type": "list",
        "value": [9],
        "value_names": []
      },
      "freq_type": {
        "editor": {
          "options": [],
          "type": "combobox"
        },
        "label": "Frequency pass type",
        "list": ["Lowpass", "Highpass", "Bandpass", "Bandstop"],
        "order": 1,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": []
      },
      "iir_filters": {
        "editor": {
          "options": [],
          "type": "combobox"
        },
        "label": "Filter designs",
        "list": ["Butterworth", "Chebyshev 1", "Chebyshev 2", "Elliptic"],
        "order": 7,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": []
      },
      "iir_gpass": {
        "editor": {
          "placeholder": "2.0",
          "type": "lineedit"
        },
        "label": "Max loss in passband (dB)",
        "order": 10,
        "type": "float",
        "value": 1.0
      },
      "iir_gstop": {
        "editor": {
          "placeholder": "1.0",
          "type": "lineedit"
        },
        "label": "Min attenuation in stopband (dB)",
        "order": 11,
        "type": "float",
        "value": 10.0
      },
      "iir_wp": {
        "editor": {
          "placeholder": "0.2 or [0.2, 0.3]",
          "type": "lineedit"
        },
        "label": "Passband edge frequency",
        "order": 8,
        "type": "string",
        "value": "0.2"
      },
      "iir_ws": {
        "editor": {
          "placeholder": "0.4 or [0.1, 0.4]",
          "type": "lineedit"
        },
        "label": "Stopband edge frequency",
        "order": 9,
        "type": "string",
        "value": "0.4"
      },
      "signal_select": {
        "editor": {
          "options": [],
          "type": "combobox"
        },
        "label": "Select Signal",
        "list": [],
        "order": 13,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": []
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{dcdf9232-6ecd-43d4-bdf1-de491dd1c548}">
        <label>Input ADAFs</label>
      </input>
      <output key="port1" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{0c057841-263f-482d-a5f8-be9625967a81}">
        <label>Output ADAFs with filter applied</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generate.signaltable" port_format="1.1" uuid="{ac4f4198-7744-4012-a37a-5b66160b9604}" x="1450.0" y="1875.0">
    <label>Generate Signal Table</label>
    <version>0.1</version>
    <description>Generate a Table with signals like sine, cosine, etc., with or without random noise.</description>
    <author>Benedikt Ziegler</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "signal_params": {
        "add_noise": {
          "editor": null,
          "label": "Add random noise",
          "order": 6,
          "type": "boolean",
          "value": true
        },
        "amplitude": {
          "editor": null,
          "label": "Amplitude",
          "order": 1,
          "type": "float",
          "value": 1.0
        },
        "frequency": {
          "editor": null,
          "label": "Frequency",
          "order": 2,
          "type": "float",
          "value": 0.01
        },
        "index_column": {
          "editor": null,
          "label": "First column as index",
          "order": 8,
          "type": "boolean",
          "value": true
        },
        "label": "Signal",
        "noise_amplitude": {
          "editor": {
            "decimals": 2,
            "step": 0.05,
            "type": "spinbox"
          },
          "label": "Amplitude of noise",
          "order": 7,
          "type": "float",
          "value": 0.1
        },
        "order": 1,
        "period": {
          "editor": null,
          "label": "Period",
          "order": 3,
          "type": "float",
          "value": 100.0
        },
        "phase_offset": {
          "editor": null,
          "label": "Phase offset",
          "order": 5,
          "type": "float",
          "value": 0.0
        },
        "signal_type": {
          "editor": {
            "options": [],
            "type": "combobox"
          },
          "label": "Signal type",
          "list": ["cosines", "sinus", "tangent"],
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": []
        },
        "type": "page",
        "use_period": {
          "editor": null,
          "label": "Period or Frequency",
          "order": 4,
          "type": "boolean",
          "value": true
        }
      },
      "table_params": {
        "column_entries": {
          "editor": {
            "max": 1000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column entries",
          "order": 0,
          "type": "integer",
          "value": 2
        },
        "column_length": {
          "editor": {
            "max": 100000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column length",
          "order": 1,
          "type": "integer",
          "value": 100
        },
        "label": "Table",
        "order": 0,
        "type": "page"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{f3d4b921-190a-4677-89fd-79bfe2258037}">
        <label>Signal Table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.visualize.figure" port_format="1.1" uuid="{d294220b-2707-4fd8-9352-2de9188eb302}" x="1675.0" y="1975.0">
    <label>Figure</label>
    <version>0.1</version>
    <description>Create a Figure from some data.</description>
    <author>Benedikt Ziegler &amp; Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "parameters": {
        "description": "The full configuration for this figure.",
        "editor": null,
        "label": "",
        "order": 0,
        "type": "json",
        "value": {"axes": [{"xaxis": {"position": ["bottom", "value"]}, "yaxis": {"position": ["left", "value"]}, "plots": [{"xdata": ["arg['index']", "py"], "ydata": ["arg['cosines1']", "py"], "type": "line"}]}]}
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="input" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{4350eb94-7143-4b26-9079-7f1da1772d47}">
        <label>Input</label>
      </input>
      <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{f98c4e65-aaa4-4126-97fe-54219e7559cc}">
        <label>Output figure</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.adaf.adaf2table" port_format="1.1" uuid="{fd644fcb-eb03-430e-9a1c-e9f6f510dc21}" x="2025.0" y="1875.0">
    <label>ADAF to Table</label>
    <version>1.0</version>
    <description>Export of data from an ADAF to a Table.</description>
    <author>Alexander Busck</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "export_group": {
        "editor": {
          "options": [],
          "type": "combobox"
        },
        "label": "Export group",
        "list": ["Meta", "Result", "Time series"],
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [2],
        "value_names": ["Time series"]
      },
      "tb": {
        "editor": {
          "filter": true,
          "type": "listview"
        },
        "label": "Time basis raster",
        "list": ["cosine/t/"],
        "order": 1,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": ["cosine/t/"]
      },
      "tb_col_name": {
        "editor": null,
        "label": "Time basis column name",
        "order": 2,
        "type": "string",
        "value": ""
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="adaf" type_base="adaf" uuid="{348de41d-ba60-4a70-95c0-9c5edfe5ba82}">
        <label>Input ADAF</label>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{c78571e1-009d-476a-8901-15562d33a03c}">
        <label>Table with the content of a specified group in the incoming ADAF</label>
      </output>
    </ports>
  </node>
  <connection type="figure" uuid="{05eb4296-1c03-4cd2-8cba-4726acdfaadb}">
    <source node="{d294220b-2707-4fd8-9352-2de9188eb302}" port="{f98c4e65-aaa4-4126-97fe-54219e7559cc}"/>
    <destination node="{a38a8bdd-4a34-41ce-a97f-2f61583f46bd}" port="{1bcd3d55-4f9a-471f-96a9-1f608b78086a}"/>
  </connection>
  <connection type="table" uuid="{09813261-7d4d-47ba-b837-0f1acf692479}">
    <source node="{ac4f4198-7744-4012-a37a-5b66160b9604}" port="{f3d4b921-190a-4677-89fd-79bfe2258037}"/>
    <destination node="{d294220b-2707-4fd8-9352-2de9188eb302}" port="{4350eb94-7143-4b26-9079-7f1da1772d47}"/>
  </connection>
  <connection type="[figure]" uuid="{1922d740-bf52-4e47-bce5-7a044be5f1ff}">
    <source node="{a38a8bdd-4a34-41ce-a97f-2f61583f46bd}" port="{2d319497-0c9c-4860-af95-b58a15c1a850}"/>
    <destination node="{984c4c04-7632-4779-b053-334a86c93a79}" port="{b39c6886-0a76-4105-ba5b-17877cfffbf0}"/>
  </connection>
  <connection type="figure" uuid="{2a0dde62-8626-40f0-9d06-95eb27c72338}">
    <source node="{a8e3360f-f82e-45b4-b1ee-11f2e417793b}" port="{999312a8-146f-49ba-b84a-6417bbb35428}"/>
    <destination node="{97a576e9-0e9f-46c9-bc53-7a73c5786e31}" port="{27624789-edb8-439b-ad4f-0a50d20baf43}"/>
  </connection>
  <connection type="adaf" uuid="{396ce407-9835-4e57-bb41-a49ae2db7e03}">
    <source node="{318944ec-bbe3-4b54-aaf0-db03bec78e16}" port="{c7a2f409-2f90-4508-854a-c48162da07b2}"/>
    <destination node="{2c710576-4eb5-4e05-8e36-d6aae646c4bc}" port="{15c4e09f-6a36-4aee-b2ef-d0172fee9450}"/>
  </connection>
  <connection type="[adaf]" uuid="{3c9e4288-ecee-479f-a55f-10edbcec68de}">
    <source node="{2c710576-4eb5-4e05-8e36-d6aae646c4bc}" port="{5aa080b9-7360-45bf-b8db-356d249d18e6}"/>
    <destination node="{a989020f-e0b8-4aae-8b60-6c51d544635b}" port="{dcdf9232-6ecd-43d4-bdf1-de491dd1c548}"/>
  </connection>
  <connection type="table" uuid="{45a3af5c-ef48-4631-9c55-54d42e22998f}">
    <source node="{fd644fcb-eb03-430e-9a1c-e9f6f510dc21}" port="{c78571e1-009d-476a-8901-15562d33a03c}"/>
    <destination node="{a8e3360f-f82e-45b4-b1ee-11f2e417793b}" port="{2709c2bc-2ecd-4130-b87a-a5d89759e483}"/>
  </connection>
  <connection type="[figure]" uuid="{5c9fc9db-a7e8-4c80-9553-437986911914}">
    <source node="{97a576e9-0e9f-46c9-bc53-7a73c5786e31}" port="{3c24c0e3-9c1d-4ba3-8ebe-1b68d136643b}"/>
    <destination node="{a38a8bdd-4a34-41ce-a97f-2f61583f46bd}" port="{4e27258f-b3b6-492f-8ed0-6869fed41231}"/>
  </connection>
  <connection type="table" uuid="{739c1b84-1240-45d3-98af-0c3974108c23}">
    <source node="{ac4f4198-7744-4012-a37a-5b66160b9604}" port="{f3d4b921-190a-4677-89fd-79bfe2258037}"/>
    <destination node="{318944ec-bbe3-4b54-aaf0-db03bec78e16}" port="{2968ff3d-3663-4728-9089-32dc25cd1a54}"/>
  </connection>
  <connection type="[adaf]" uuid="{98a21e2d-23a5-425d-8a2f-1f89d44889b7}">
    <source node="{a989020f-e0b8-4aae-8b60-6c51d544635b}" port="{0c057841-263f-482d-a5f8-be9625967a81}"/>
    <destination node="{835a6d54-f57c-4847-a3d0-e8cac0a4d39c}" port="{54a319d9-8b11-45d9-9da1-a471d952a6a8}"/>
  </connection>
  <connection type="adaf" uuid="{9a17863d-a85f-4432-be2a-55d589bab11d}">
    <source node="{835a6d54-f57c-4847-a3d0-e8cac0a4d39c}" port="{66f61e91-8c44-4e54-a10d-aa0f6f7898a2}"/>
    <destination node="{fd644fcb-eb03-430e-9a1c-e9f6f510dc21}" port="{348de41d-ba60-4a70-95c0-9c5edfe5ba82}"/>
  </connection>
  <text color="Beige" height="75.0" uuid="{3d694fdb-e6fc-4212-b08a-fd2310863480}" width="175.0" x="1200.0" y="1875.0">Clean up a noisy signal by using filtering.</text>
  <text color="Beige" height="50.0" uuid="{5cae3dd0-02e6-4049-b9a7-4f797031dab7}" width="325.0" x="1450.0" y="2075.0">
- Node example: *org.sysess.sympathy.data.adaf.filteradafswithplot*</text>
</flow>
