<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" uuid="{a6baa5b9-e252-419c-84f5-72c2517724d6}" width="50.0" x="0.0" y="0.0" id="">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <parameters type="json">{}</parameters>
  <ports/>
  <node id="org.sysess.sympathy.datasources.filedatasource" uuid="{02befa42-6c97-412a-aa2e-7d2fd1d66f16}" x="1900.0" y="1975.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 0, "type": "string", "value": "table.sydata", "editor": {"states": null, "type": "filename", "filter": ["Any files (*)"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "order": 1, "type": "string", "value": "mssql+pyodbc:///"}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "order": 2, "type": "string", "value": "ODBC", "editor": {"display": null, "include_empty": false, "type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 4, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 5, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 6, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 7, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 8, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "mode": "selected", "order": 9, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": []}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{b3c5df76-4dd8-4633-9867-96b51e9b9c97}">
        <label>Datasource with path to file</label>
        <description>Datasource with path to file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtable" uuid="{8893ce22-8476-4138-9e91-f8646b384c1e}" x="2025.0" y="1975.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "Table"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "editor": null, "label": "", "type": "string", "value": ";"}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "editor": null, "label": "Remove double quotations", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "mode": "selected", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": [], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "editor": null, "label": "", "type": "string", "value": null}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "source_coding": {"description": "", "editor": null, "label": "", "type": "string", "value": null}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input data", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}}, "MAT": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "mode": "selected", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": [], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "custom_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "join_column_selection": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_columns": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_tables": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "lineedit_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "preview_query": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "table_columns": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["test"], "value": [0], "value_names": []}, "table_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": true}, "where_add_comparison": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["=", "&lt;", "&gt;", "&gt;=", "&lt;=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": []}, "where_condition": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}}, "Table": {"label": "", "type": "group"}, "XLS": {"label": "", "type": "group", "data_end_row": {"description": "The last data row.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}}}, "fail_strategy": {"description": "Decide how failure to import a file should be handled.", "label": "Action on import failure", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": [], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{b8274b3a-18e6-46f7-81e8-67aebd0cb824}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{f56e5912-2d99-4150-9fd8-c58be0d331e9}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.text.table2text" uuid="{eb6db114-cb10-4b4b-8d28-5a3bb89ed4ca}" x="2150.0" y="1975.0">
    <label>Table to Text</label>
    <description>Convert Table to Text</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "name": {"description": "Specify name for input column.", "label": "Column name", "order": 0, "type": "string", "value": "Text", "editor": {"display": null, "include_empty": false, "type": "combobox", "options": ["Text"]}}}</parameters>
    <ports>
      <input key="table" scheme="hdf5" type="table" type_base="table" uuid="{da64d7d9-43bc-402d-8c15-df1dd0aa09ee}">
        <label>Table with input Text</label>
        <description>Table with input Text</description>
      </input>
      <output key="text" scheme="hdf5" type="text" type_base="text" uuid="{d9f7be8a-006e-4c7f-82a3-c6623c80dd73}">
        <label>Output Text</label>
        <description>Output Text</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{1d2f71bb-e46d-4c0e-afa6-89d506a4ba62}">
    <source node="{8893ce22-8476-4138-9e91-f8646b384c1e}" port="{f56e5912-2d99-4150-9fd8-c58be0d331e9}"/>
    <destination node="{eb6db114-cb10-4b4b-8d28-5a3bb89ed4ca}" port="{da64d7d9-43bc-402d-8c15-df1dd0aa09ee}"/>
  </connection>
  <connection type="datasource" uuid="{f40c4e49-2c23-4f26-a436-16d2f3e0ac81}">
    <source node="{02befa42-6c97-412a-aa2e-7d2fd1d66f16}" port="{b3c5df76-4dd8-4633-9867-96b51e9b9c97}"/>
    <destination node="{8893ce22-8476-4138-9e91-f8646b384c1e}" port="{b8274b3a-18e6-46f7-81e8-67aebd0cb824}"/>
  </connection>
  <text color="Beige" height="50.0" uuid="{55305ce1-41e8-44e4-a31f-28f3a940ea54}" width="300.0" x="1900.0" y="2075.0">
- Node example: *org.sysess.sympathy.data.text.table2text*</text>
</flow>
