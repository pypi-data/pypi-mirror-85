<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" uuid="{4ae9288a-6ef6-41a3-8d1a-6f0f19c973f4}">
  <label></label>
  <ports/>
  <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{2bd5507e-2ee3-4dc0-80ea-777908d3b076}" x="1825.0" y="2450.0">
    <label>Manually Create Table</label>
    <version>1.0</version>
    <description>Create a Table from scratch in a configuration Gui.</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "json_table": {
        "editor": null,
        "label": "GUI",
        "order": 0,
        "type": "string",
        "value": "[[\"Names\", \"text\", [\"index\", \"cosines\"]]]"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{03082abf-94a9-47c0-8eb8-3da447461d12}">
        <label>Manually created table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.setcolumnnamesintableswithtable" port_format="1.1" uuid="{625bd0c7-9f66-467e-89dd-d4b7ee0cc71a}" x="2000.0" y="2325.0">
    <label>Set column names in Tables with Table</label>
    <version>1.0</version>
    <description>Set column names from separate table column.</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "name": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": ["Names"],
          "type": "combobox"
        },
        "label": "New names",
        "order": 0,
        "type": "string",
        "value": "Names"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="data" scheme="hdf5" type="[table]" type_base="[table]" uuid="{976b1284-4797-4ae9-b627-31fba9344527}">
        <label>Data</label>
      </input>
      <input key="name" scheme="hdf5" type="table" type_base="table" uuid="{40210ed3-769d-413c-adec-aa2a79e7603d}">
        <label>Name</label>
      </input>
      <output key="data" scheme="hdf5" type="[table]" type_base="[table]" uuid="{7e606785-b99d-47b1-ab32-972871795d30}">
        <label>Data</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" port_format="1.1" uuid="{6f777e0d-6113-405d-a83d-03dab1d538bd}" x="1825.0" y="2325.0">
    <label>Item to List</label>
    <version>1.0</version>
    <description>Create a single item list containing item.</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{fbbad746-5ae9-43c4-9558-b0fa22c196a5}">
        <label>Input Item</label>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{99671f54-7ec9-40a7-b50e-aa3a1de7f03e}">
        <label>Item as List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.renametablecolumnstable" port_format="1.1" uuid="{7f72faac-965a-43f8-9a6e-9f133fdcdae9}" x="2000.0" y="1875.0">
    <label>Rename columns in Tables with Table</label>
    <version>1.0</version>
    <description>Rename columns in Tables by using an additional Table as a dictionary.

The dictionary Table must include one column with keywords and another
column with replacements. When the node is executed all column names in the
input Tables are checked against keyword column in the ditionary Table. If
a match is found the corresponding name in the replacement column will
replace the original column name.  For the case with no match the column
names are left unchanged.

If a name appears more than once in the keywords column of the dictionary
Table, that column will be renamed to each of the replacement names.
Esentially copying the single input column to several columns in the
output.

If a name appears more than once in the replacements column the last one
that is also present in the data table will be used. Also note that renamed
columns always take precedence over non-renamed ones.</description>
    <author>Greger Cronquist</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "destination": {
        "editor": {
          "options": [],
          "type": "combobox"
        },
        "label": "Replacement column",
        "list": ["Find", "Replace"],
        "order": 1,
        "passthrough": false,
        "type": "list",
        "value": [1],
        "value_names": ["Replace"]
      },
      "source": {
        "editor": {
          "options": [],
          "type": "combobox"
        },
        "label": "Keyword column",
        "list": ["Find", "Replace"],
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": []
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="dictionary" scheme="hdf5" type="table" type_base="table" uuid="{ddb6c43f-3649-47fe-b5f0-169bb9fb4725}">
        <label>Dictionary</label>
      </input>
      <input key="tables" scheme="hdf5" type="[table]" type_base="[table]" uuid="{15895bb6-5c3d-4f89-be8e-57084d13d516}">
        <label>Input Tables</label>
      </input>
      <output key="tables" scheme="hdf5" type="[table]" type_base="[table]" uuid="{80e00bc1-5e90-4985-baea-78ade8f8456d}">
        <label>Tables with renamed columns</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{90486a11-24fa-4155-a9e6-355e3c558cf3}" x="1825.0" y="1750.0">
    <label>Manually Create Table</label>
    <version>1.0</version>
    <description>Create a Table from scratch in a configuration Gui.</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "json_table": {
        "editor": null,
        "label": "GUI",
        "order": 0,
        "type": "string",
        "value": "[[\"Find\", \"U\", [\"cosines1\"]], [\"Replace\", \"U\", [\"cosines\"]]]"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{72d5909b-ac88-4730-b711-bb5562bfb99b}">
        <label>Manually created table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.renamesingletablecolumns" port_format="1.1" uuid="{adef71eb-e6ed-4a16-908d-d742e6e58f4d}" x="2000.0" y="1975.0">
    <label>Rename columns in Table</label>
    <version>1.0</version>
    <description>Rename the Table columns by using regular expressions.</description>
    <author>Greger Cronquist</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "dst_expr": {
        "editor": null,
        "label": "Replacement expression",
        "order": 0,
        "type": "string",
        "value": "cosines"
      },
      "src_expr": {
        "editor": null,
        "label": "Search expression",
        "order": 1,
        "type": "string",
        "value": "cosines1"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="Input" scheme="hdf5" type="table" type_base="table" uuid="{9b8d9558-bb90-42e5-8a9b-8ddcf235c8da}">
        <label>Input</label>
      </input>
      <output key="Output" scheme="hdf5" type="table" type_base="table" uuid="{9a4155eb-704b-4740-a8cf-40a082e752e9}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generate.signaltable" port_format="1.1" uuid="{cb851992-7acf-4286-bce3-cfc33431bf1f}" x="1675.0" y="1975.0">
    <label>Generate Signal Table</label>
    <version>0.1</version>
    <description>Generate a Table with signals like sine, cosine, etc., with or without random noise.</description>
    <author>Benedikt Ziegler</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "signal_params": {
        "add_noise": {
          "editor": null,
          "label": "Add random noise",
          "order": 6,
          "type": "boolean",
          "value": false
        },
        "amplitude": {
          "editor": null,
          "label": "Amplitude",
          "order": 1,
          "type": "float",
          "value": 1.0
        },
        "frequency": {
          "editor": null,
          "label": "Frequency",
          "order": 2,
          "type": "float",
          "value": 0.01
        },
        "index_column": {
          "editor": null,
          "label": "First column as index",
          "order": 8,
          "type": "boolean",
          "value": true
        },
        "label": "Signal",
        "noise_amplitude": {
          "editor": {
            "decimals": 2,
            "step": 0.05,
            "type": "spinbox"
          },
          "label": "Amplitude of noise",
          "order": 7,
          "type": "float",
          "value": 0.01
        },
        "order": 1,
        "period": {
          "editor": null,
          "label": "Period",
          "order": 3,
          "type": "float",
          "value": 100.0
        },
        "phase_offset": {
          "editor": null,
          "label": "Phase offset",
          "order": 5,
          "type": "float",
          "value": 0.0
        },
        "signal_type": {
          "editor": {
            "options": [],
            "type": "combobox"
          },
          "label": "Signal type",
          "list": ["cosines", "sinus", "tangent"],
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": []
        },
        "type": "page",
        "use_period": {
          "editor": null,
          "label": "Period or Frequency",
          "order": 4,
          "type": "boolean",
          "value": true
        }
      },
      "table_params": {
        "column_entries": {
          "editor": {
            "max": 1000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column entries",
          "order": 0,
          "type": "integer",
          "value": 2
        },
        "column_length": {
          "editor": {
            "max": 100000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column length",
          "order": 1,
          "type": "integer",
          "value": 100
        },
        "label": "Table",
        "order": 0,
        "type": "page"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{d9175fe8-4ff7-4ba0-86dc-c3cab9bda685}">
        <label>Signal Table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.setcolumnnamesintablewithtable" port_format="1.1" uuid="{f3765879-6f05-47e7-804d-6091e2325589}" x="2000.0" y="2225.0">
    <label>Set column names in Table with Table</label>
    <version>1.0</version>
    <description>Set column names from separate table column.</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "name": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": ["Names"],
          "type": "combobox"
        },
        "label": "New names",
        "order": 0,
        "type": "string",
        "value": "Names"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="data" scheme="hdf5" type="table" type_base="table" uuid="{57b5be3c-8176-4e14-8cac-c0741499eba4}">
        <label>Data</label>
      </input>
      <input key="name" scheme="hdf5" type="table" type_base="table" uuid="{b8eeb48b-1fec-4155-8088-f500260a7263}">
        <label>Name</label>
      </input>
      <output key="data" scheme="hdf5" type="table" type_base="table" uuid="{d91e39dd-a36f-46eb-8c79-b853e194f6a9}">
        <label>Data</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" port_format="1.1" uuid="{f50de138-8693-4100-a9d5-d8f9bad38eb7}" x="1825.0" y="1875.0">
    <label>Item to List</label>
    <version>1.0</version>
    <description>Create a single item list containing item.</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{9a7b63a0-5b15-44c5-a901-019b0b484b47}">
        <label>Input Item</label>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{2da30427-4a96-4944-b4c8-0d671710ff48}">
        <label>Item as List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generate.signaltable" port_format="1.1" uuid="{f84bfa72-52f2-46d3-b325-ac5579980c6b}" x="1675.0" y="2225.0">
    <label>Generate Signal Table</label>
    <version>0.1</version>
    <description>Generate a Table with signals like sine, cosine, etc., with or without random noise.</description>
    <author>Benedikt Ziegler</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "signal_params": {
        "add_noise": {
          "editor": null,
          "label": "Add random noise",
          "order": 6,
          "type": "boolean",
          "value": false
        },
        "amplitude": {
          "editor": null,
          "label": "Amplitude",
          "order": 1,
          "type": "float",
          "value": 1.0
        },
        "frequency": {
          "editor": null,
          "label": "Frequency",
          "order": 2,
          "type": "float",
          "value": 0.01
        },
        "index_column": {
          "editor": null,
          "label": "First column as index",
          "order": 8,
          "type": "boolean",
          "value": true
        },
        "label": "Signal",
        "noise_amplitude": {
          "editor": {
            "decimals": 2,
            "step": 0.05,
            "type": "spinbox"
          },
          "label": "Amplitude of noise",
          "order": 7,
          "type": "float",
          "value": 0.01
        },
        "order": 1,
        "period": {
          "editor": null,
          "label": "Period",
          "order": 3,
          "type": "float",
          "value": 100.0
        },
        "phase_offset": {
          "editor": null,
          "label": "Phase offset",
          "order": 5,
          "type": "float",
          "value": 0.0
        },
        "signal_type": {
          "editor": {
            "options": [],
            "type": "combobox"
          },
          "label": "Signal type",
          "list": ["cosines", "sinus", "tangent"],
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": []
        },
        "type": "page",
        "use_period": {
          "editor": null,
          "label": "Period or Frequency",
          "order": 4,
          "type": "boolean",
          "value": true
        }
      },
      "table_params": {
        "column_entries": {
          "editor": {
            "max": 1000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column entries",
          "order": 0,
          "type": "integer",
          "value": 2
        },
        "column_length": {
          "editor": {
            "max": 100000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column length",
          "order": 1,
          "type": "integer",
          "value": 100
        },
        "label": "Table",
        "order": 0,
        "type": "page"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{c18b1be6-4a29-4ae0-bb22-bcb5451c2b48}">
        <label>Signal Table</label>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{313d3ed5-bdb7-4515-b6d7-02b302330263}">
    <source node="{f84bfa72-52f2-46d3-b325-ac5579980c6b}" port="{c18b1be6-4a29-4ae0-bb22-bcb5451c2b48}"/>
    <destination node="{f3765879-6f05-47e7-804d-6091e2325589}" port="{57b5be3c-8176-4e14-8cac-c0741499eba4}"/>
  </connection>
  <connection type="table" uuid="{37bb360a-5cb2-4d8c-a5cd-924bc467dd6d}">
    <source node="{cb851992-7acf-4286-bce3-cfc33431bf1f}" port="{d9175fe8-4ff7-4ba0-86dc-c3cab9bda685}"/>
    <destination node="{adef71eb-e6ed-4a16-908d-d742e6e58f4d}" port="{9b8d9558-bb90-42e5-8a9b-8ddcf235c8da}"/>
  </connection>
  <connection type="table" uuid="{44b4771f-3334-4f31-b175-c9688207681e}">
    <source node="{cb851992-7acf-4286-bce3-cfc33431bf1f}" port="{d9175fe8-4ff7-4ba0-86dc-c3cab9bda685}"/>
    <destination node="{f50de138-8693-4100-a9d5-d8f9bad38eb7}" port="{9a7b63a0-5b15-44c5-a901-019b0b484b47}"/>
  </connection>
  <connection type="table" uuid="{4b66e1fd-e3fc-4e85-ac1c-8ae42a6a0f92}">
    <source node="{f84bfa72-52f2-46d3-b325-ac5579980c6b}" port="{c18b1be6-4a29-4ae0-bb22-bcb5451c2b48}"/>
    <destination node="{6f777e0d-6113-405d-a83d-03dab1d538bd}" port="{fbbad746-5ae9-43c4-9558-b0fa22c196a5}"/>
  </connection>
  <connection type="[table]" uuid="{55a54a44-fd94-40fc-8515-73af1b8b1e1a}">
    <source node="{6f777e0d-6113-405d-a83d-03dab1d538bd}" port="{99671f54-7ec9-40a7-b50e-aa3a1de7f03e}"/>
    <destination node="{625bd0c7-9f66-467e-89dd-d4b7ee0cc71a}" port="{976b1284-4797-4ae9-b627-31fba9344527}"/>
  </connection>
  <connection type="table" uuid="{5f36d7de-650f-4ecf-8134-0d8656ff824d}">
    <source node="{2bd5507e-2ee3-4dc0-80ea-777908d3b076}" port="{03082abf-94a9-47c0-8eb8-3da447461d12}"/>
    <destination node="{625bd0c7-9f66-467e-89dd-d4b7ee0cc71a}" port="{40210ed3-769d-413c-adec-aa2a79e7603d}"/>
  </connection>
  <connection type="table" uuid="{9092923e-a9da-4261-8ee5-d2ea1a4ea6fa}">
    <source node="{90486a11-24fa-4155-a9e6-355e3c558cf3}" port="{72d5909b-ac88-4730-b711-bb5562bfb99b}"/>
    <destination node="{7f72faac-965a-43f8-9a6e-9f133fdcdae9}" port="{ddb6c43f-3649-47fe-b5f0-169bb9fb4725}"/>
  </connection>
  <connection type="table" uuid="{c3372988-64b2-4cbf-9218-633f1730375f}">
    <source node="{2bd5507e-2ee3-4dc0-80ea-777908d3b076}" port="{03082abf-94a9-47c0-8eb8-3da447461d12}"/>
    <destination node="{f3765879-6f05-47e7-804d-6091e2325589}" port="{b8eeb48b-1fec-4155-8088-f500260a7263}"/>
  </connection>
  <connection type="[table]" uuid="{f7fd73ed-544c-46e2-b087-96f453b07d7b}">
    <source node="{f50de138-8693-4100-a9d5-d8f9bad38eb7}" port="{2da30427-4a96-4944-b4c8-0d671710ff48}"/>
    <destination node="{7f72faac-965a-43f8-9a6e-9f133fdcdae9}" port="{15895bb6-5c3d-4f89-be8e-57084d13d516}"/>
  </connection>
  <text color="Beige" height="100.0" uuid="{7e70c5b2-4307-463d-8898-4de675679fc5}" width="400.0" x="1675.0" y="2075.0">
- Node example: *org.sysess.sympathy.data.table.renamesingletablecolumns*
- Node example: *org.sysess.sympathy.data.table.renametablecolumnstable*
- Node example: *org.sysess.sympathy.setcolumnnamesintablewithtable*
- Node example: *org.sysess.sympathy.setcolumnnamesintableswithtable*</text>
</flow>
