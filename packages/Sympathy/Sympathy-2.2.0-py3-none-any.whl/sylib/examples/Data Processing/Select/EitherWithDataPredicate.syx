<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" uuid="{4ae9288a-6ef6-41a3-8d1a-6f0f19c973f4}">
  <label></label>
  <ports/>
  <flow cls="Lambda" uuid="{5126a448-7a8c-49aa-b20e-bd69451f727b}" x="2350.0" y="2075.0">
    <label>Elemtwise Either With Data Predicate
Predicate &gt; 0.5</label>
    <ports>
      <input index="0" key="Port" parent="False" scheme="hdf5" type="((table, table), table)" uuid="{48105599-1ba0-4576-b6c6-8ac7baa93b27}" x="1650.0" y="1925.0">
        <label>Port</label>
      </input>
      <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{072dbfe1-a076-48d0-9b3b-8c0534357aa3}" x="2350.0" y="1925.0">
        <label>Port</label>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" scheme="hdf5" type="((table, table), table) -&gt; table" type_base="&lt;a&gt;" uuid="{b94430af-c44a-4241-a437-9ddef12e48cc}">
        <label>Lambda function</label>
      </output>
    </basic_ports>
    <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{763489ed-cf37-4dda-bf4e-07e0e02b1781}" x="1825.0" y="1925.0">
      <label>Untuple2</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="((table, table), table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{471d4fea-a386-4933-926c-5d37bab48134}">
          <label>Input</label>
        </input>
        <output key="output" scheme="hdf5" type="(table, table)" type_base="&lt;a&gt;" uuid="{5204c174-8696-4903-95bf-e7e8157bb5a0}">
          <label>Output</label>
        </output>
        <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{31e7db62-e215-45e7-9c78-c7d640241b7d}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.eitherwithdatapredicate" port_format="1.1" uuid="{d2cad146-061b-48f2-a14c-b7634cf7032b}" x="2175.0" y="1925.0">
      <label>Either with Data Predicate
Compare first element in input to predicate</label>
      <version>1.0</version>
      <description>Uses a condition to propagate either one of the two inputs.</description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "predicate": {
          "editor": {
            "language": "python",
            "type": "code"
          },
          "label": "Either predicate function",
          "order": 0,
          "type": "string",
          "value": "lambda table: table.get_column_to_array('0')[0] &lt; 0.5\n"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="true" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{04906f81-ed7a-4086-a968-50250c4a2676}">
          <label>First, returned if predicate held true</label>
        </input>
        <input key="false" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{a2a17b37-e38d-48ed-a8f4-5172377634ec}">
          <label>Second, returned if predicate did not hold true</label>
        </input>
        <input key="data" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{044aa8be-3548-48e6-a961-7b5737c214ea}">
          <label>Data for the predicate comparison</label>
        </input>
        <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{76bf55f2-d299-4da9-af82-c2dbf45d26b5}">
          <label>Output, First if the predicate holds true otherwise Second</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{e4abb6c9-b772-4abc-be5e-d9a66dbdd5a4}" x="2000.0" y="1925.0">
      <label>Untuple2</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{da6b0683-1d55-4810-a6d5-12c17048fcd2}">
          <label>Input</label>
        </input>
        <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{c2ea5375-4e26-423a-bfb3-3585059d71fe}">
          <label>Output</label>
        </output>
        <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{13e673e4-159c-4d49-aca6-bab829535e8c}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <connection type="table" uuid="{129a5b36-fae4-4f2c-b8a8-d936fca27e40}">
      <source node="{763489ed-cf37-4dda-bf4e-07e0e02b1781}" port="{31e7db62-e215-45e7-9c78-c7d640241b7d}"/>
      <destination node="{d2cad146-061b-48f2-a14c-b7634cf7032b}" port="{044aa8be-3548-48e6-a961-7b5737c214ea}"/>
      <route x="2025.0" y="2000.0"/>
    </connection>
    <connection type="((table, table), table)" uuid="{33e7219c-9fa0-489f-8a8f-a23e22bbedcf}">
      <source node="{5126a448-7a8c-49aa-b20e-bd69451f727b}" port="{48105599-1ba0-4576-b6c6-8ac7baa93b27}"/>
      <destination node="{763489ed-cf37-4dda-bf4e-07e0e02b1781}" port="{471d4fea-a386-4933-926c-5d37bab48134}"/>
    </connection>
    <connection type="table" uuid="{7cde3ede-282c-48e8-8cd8-149ec42f8ada}">
      <source node="{e4abb6c9-b772-4abc-be5e-d9a66dbdd5a4}" port="{c2ea5375-4e26-423a-bfb3-3585059d71fe}"/>
      <destination node="{d2cad146-061b-48f2-a14c-b7634cf7032b}" port="{04906f81-ed7a-4086-a968-50250c4a2676}"/>
    </connection>
    <connection type="table" uuid="{9a71e6ea-7e95-4b89-806f-ea3f24a70ff2}">
      <source node="{d2cad146-061b-48f2-a14c-b7634cf7032b}" port="{76bf55f2-d299-4da9-af82-c2dbf45d26b5}"/>
      <destination node="{5126a448-7a8c-49aa-b20e-bd69451f727b}" port="{072dbfe1-a076-48d0-9b3b-8c0534357aa3}"/>
    </connection>
    <connection type="(table, table)" uuid="{e0e844a4-7c8e-46f2-a86a-7fc5f0c80ac6}">
      <source node="{763489ed-cf37-4dda-bf4e-07e0e02b1781}" port="{5204c174-8696-4903-95bf-e7e8157bb5a0}"/>
      <destination node="{e4abb6c9-b772-4abc-be5e-d9a66dbdd5a4}" port="{da6b0683-1d55-4810-a6d5-12c17048fcd2}"/>
    </connection>
    <connection type="table" uuid="{ed525856-fdf5-4e85-9a97-8a0346297e9d}">
      <source node="{e4abb6c9-b772-4abc-be5e-d9a66dbdd5a4}" port="{13e673e4-159c-4d49-aca6-bab829535e8c}"/>
      <destination node="{d2cad146-061b-48f2-a14c-b7634cf7032b}" port="{a2a17b37-e38d-48ed-a8f4-5172377634ec}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.generate.signaltable" port_format="1.1" uuid="{1c9e0d90-a261-4550-97a6-62d54529da22}" x="2000.0" y="1825.0">
    <label>Generate Signal Table
Sinus</label>
    <version>0.1</version>
    <description></description>
    <author>Benedikt Ziegler</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "signal_params": {
        "add_noise": {
          "editor": null,
          "label": "Add random noise",
          "order": 6,
          "type": "boolean",
          "value": false
        },
        "amplitude": {
          "editor": null,
          "label": "Amplitude",
          "order": 1,
          "type": "float",
          "value": 1.0
        },
        "frequency": {
          "editor": null,
          "label": "Frequency",
          "order": 2,
          "type": "float",
          "value": 0.01
        },
        "index_column": {
          "editor": null,
          "label": "First column as index",
          "order": 8,
          "type": "boolean",
          "value": true
        },
        "label": "Signal",
        "noise_amplitude": {
          "editor": {
            "decimals": 2,
            "step": 0.05,
            "type": "spinbox"
          },
          "label": "Amplitude of noise",
          "order": 7,
          "type": "float",
          "value": 0.01
        },
        "order": 1,
        "period": {
          "editor": null,
          "label": "Period",
          "order": 3,
          "type": "float",
          "value": 100.0
        },
        "phase_offset": {
          "editor": null,
          "label": "Phase offset",
          "order": 5,
          "type": "float",
          "value": 0.0
        },
        "signal_type": {
          "editor": {
            "options": [],
            "type": "combobox"
          },
          "label": "Signal type",
          "list": ["cosines", "sinus", "tangent"],
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [1],
          "value_names": ["sinus"]
        },
        "type": "page",
        "use_period": {
          "editor": null,
          "label": "Period or Frequency",
          "order": 4,
          "type": "boolean",
          "value": true
        }
      },
      "table_params": {
        "column_entries": {
          "editor": {
            "max": 1000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column entries",
          "order": 0,
          "type": "integer",
          "value": 100
        },
        "column_length": {
          "editor": {
            "max": 100000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column length",
          "order": 1,
          "type": "integer",
          "value": 1000
        },
        "label": "Table",
        "order": 0,
        "type": "page"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{5329bcf5-455f-40ec-b4b4-f64b96c0aa9e}">
        <label>Signal Table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generate.signaltables" port_format="1.1" uuid="{3f66b9f4-77cf-46c2-b37d-ad329c7afb42}" x="2000.0" y="2175.0">
    <label>Generate Signal Tables
Sinus</label>
    <version>0.1</version>
    <description></description>
    <author>Benedikt Ziegler</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "signal_params": {
        "add_noise": {
          "editor": null,
          "label": "Add random noise",
          "order": 6,
          "type": "boolean",
          "value": false
        },
        "amplitude": {
          "editor": null,
          "label": "Amplitude",
          "order": 1,
          "type": "float",
          "value": 1.0
        },
        "frequency": {
          "editor": null,
          "label": "Frequency",
          "order": 2,
          "type": "float",
          "value": 0.01
        },
        "index_column": {
          "editor": null,
          "label": "First column as index",
          "order": 8,
          "type": "boolean",
          "value": true
        },
        "label": "Signal",
        "noise_amplitude": {
          "editor": {
            "decimals": 2,
            "step": 0.05,
            "type": "spinbox"
          },
          "label": "Amplitude of noise",
          "order": 7,
          "type": "float",
          "value": 0.01
        },
        "order": 1,
        "period": {
          "editor": null,
          "label": "Period",
          "order": 3,
          "type": "float",
          "value": 100.0
        },
        "phase_offset": {
          "editor": null,
          "label": "Phase offset",
          "order": 5,
          "type": "float",
          "value": 0.0
        },
        "signal_type": {
          "editor": {
            "options": [],
            "type": "combobox"
          },
          "label": "Signal type",
          "list": ["cosines", "sinus", "tangent"],
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["cosines"]
        },
        "type": "page",
        "use_period": {
          "editor": null,
          "label": "Period or Frequency",
          "order": 4,
          "type": "boolean",
          "value": true
        }
      },
      "table_params": {
        "column_entries": {
          "editor": {
            "max": 1000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column entries",
          "order": 0,
          "type": "integer",
          "value": 2
        },
        "column_length": {
          "editor": {
            "max": 100000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column length",
          "order": 1,
          "type": "integer",
          "value": 10
        },
        "label": "Table",
        "length": {
          "editor": {
            "max": 10000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Table list length",
          "order": 2,
          "type": "integer",
          "value": 5
        },
        "order": 0,
        "type": "page"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{642886bb-450e-44e8-8049-cce1913be6b4}">
        <label>Signal Tables</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generate.signaltable" port_format="1.1" uuid="{42c370e3-a451-45cc-bcb1-6106a3fa671e}" x="2000.0" y="1725.0">
    <label>Generate Signal Table
Cosine</label>
    <version>0.1</version>
    <description></description>
    <author>Benedikt Ziegler</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "signal_params": {
        "add_noise": {
          "editor": null,
          "label": "Add random noise",
          "order": 6,
          "type": "boolean",
          "value": false
        },
        "amplitude": {
          "editor": null,
          "label": "Amplitude",
          "order": 1,
          "type": "float",
          "value": 1.0
        },
        "frequency": {
          "editor": null,
          "label": "Frequency",
          "order": 2,
          "type": "float",
          "value": 0.01
        },
        "index_column": {
          "editor": null,
          "label": "First column as index",
          "order": 8,
          "type": "boolean",
          "value": true
        },
        "label": "Signal",
        "noise_amplitude": {
          "editor": {
            "decimals": 2,
            "step": 0.05,
            "type": "spinbox"
          },
          "label": "Amplitude of noise",
          "order": 7,
          "type": "float",
          "value": 0.01
        },
        "order": 1,
        "period": {
          "editor": null,
          "label": "Period",
          "order": 3,
          "type": "float",
          "value": 100.0
        },
        "phase_offset": {
          "editor": null,
          "label": "Phase offset",
          "order": 5,
          "type": "float",
          "value": 0.0
        },
        "signal_type": {
          "editor": {
            "options": [],
            "type": "combobox"
          },
          "label": "Signal type",
          "list": ["cosines", "sinus", "tangent"],
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": []
        },
        "type": "page",
        "use_period": {
          "editor": null,
          "label": "Period or Frequency",
          "order": 4,
          "type": "boolean",
          "value": true
        }
      },
      "table_params": {
        "column_entries": {
          "editor": {
            "max": 1000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column entries",
          "order": 0,
          "type": "integer",
          "value": 100
        },
        "column_length": {
          "editor": {
            "max": 100000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column length",
          "order": 1,
          "type": "integer",
          "value": 1000
        },
        "label": "Table",
        "order": 0,
        "type": "page"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{efdc1c24-df90-4555-bb13-84869f9c9824}">
        <label>Signal Table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtable" port_format="1.1" uuid="{498e67c9-f782-4ee3-8a97-cb64163c1884}" x="2000.0" y="2275.0">
    <label>Random Table
Predicate</label>
    <version>0.1</version>
    <description>Random Table generator.</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "column_entries": {
        "editor": {
          "max": 1000000,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Column entries",
        "order": 0,
        "type": "integer",
        "value": 1
      },
      "column_length": {
        "editor": {
          "max": 100000000,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Column length",
        "order": 1,
        "type": "integer",
        "value": 5
      },
      "mask_values": {
        "editor": null,
        "label": "Randomly mask values",
        "order": 2,
        "type": "boolean",
        "value": false
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{a0d5fab9-7eca-4ec1-a480-3ebeef71047b}">
        <label>Table with random numbers. The specifications of the Table are declared in the configuration.</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtable" port_format="1.1" uuid="{670676b3-edb0-41ef-bc31-4862b75cbfcc}" x="2000.0" y="1925.0">
    <label>Random Table
Predicate</label>
    <version>0.1</version>
    <description>Random Table generator.</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "column_entries": {
        "editor": {
          "max": 1000000,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Column entries",
        "order": 0,
        "type": "integer",
        "value": 1
      },
      "column_length": {
        "editor": {
          "max": 100000000,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Column length",
        "order": 1,
        "type": "integer",
        "value": 1
      },
      "mask_values": {
        "editor": null,
        "label": "Randomly mask values",
        "order": 2,
        "type": "boolean",
        "value": false
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{7203fc59-967c-4f6c-b365-2dbe5a0d0acf}">
        <label>Table with random numbers. The specifications of the Table are declared in the configuration.</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{99deaa38-9856-41f6-8dc7-b7ae61c4c8cd}" x="2150.0" y="2125.0">
    <label>Zip Tuple2</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{cc2ceeb3-dd60-452c-bbbe-acbec1c65340}">
        <label>Input</label>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{62dd5a3c-b9d5-4be9-894e-67284a11834e}">
        <label>Input</label>
      </input>
      <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{8a7c38a9-e97a-443b-a834-eb98993b060f}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{9c470ab0-0122-4a74-a033-6504fb4ab211}" x="2350.0" y="2200.0">
    <label>Zip Tuple2</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{4ac80481-9f6d-4c80-8a82-fe892f876182}">
        <label>Input</label>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{897cf97c-a5f0-4806-af71-9efe15104c2f}">
        <label>Input</label>
      </input>
      <output key="output" scheme="hdf5" type="[((table, table), table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{2ae68a64-9c99-4484-b538-066a67359663}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.eitherwithdatapredicate" port_format="1.1" uuid="{e45b90e1-77bc-43d1-81dd-33d61fe2daa1}" x="2175.0" y="1825.0">
    <label>Either with Data Predicate</label>
    <version>1.0</version>
    <description>Uses a condition to propagate either one of the two inputs.</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "predicate": {
        "editor": {
          "language": "python",
          "type": "code"
        },
        "label": "Either predicate function",
        "order": 0,
        "type": "string",
        "value": "lambda table: table.get_column_to_array('0')[0] &lt; 0.5"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="true" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{3f5fee5a-dc4b-4003-aecc-b022fddfd5e3}">
        <label>First, returned if predicate held true</label>
      </input>
      <input key="false" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{acc6f477-60d6-4504-b2fc-3f8c3067182b}">
        <label>Second, returned if predicate did not hold true</label>
      </input>
      <input key="data" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{cb691f1b-2c59-428b-bc04-278b1533bb24}">
        <label>Data for the predicate comparison</label>
      </input>
      <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{f696ddef-a022-46d3-adf9-1721b3a0956a}">
        <label>Output, First if the predicate holds true otherwise Second</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generate.signaltables" port_format="1.1" uuid="{ed9bfa56-bec3-4025-b0f8-d2cb5bdb18d5}" x="2000.0" y="2075.0">
    <label>Generate Signal Tables
Sinus</label>
    <version>0.1</version>
    <description></description>
    <author>Benedikt Ziegler</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "signal_params": {
        "add_noise": {
          "editor": null,
          "label": "Add random noise",
          "order": 6,
          "type": "boolean",
          "value": false
        },
        "amplitude": {
          "editor": null,
          "label": "Amplitude",
          "order": 1,
          "type": "float",
          "value": 1.0
        },
        "frequency": {
          "editor": null,
          "label": "Frequency",
          "order": 2,
          "type": "float",
          "value": 0.01
        },
        "index_column": {
          "editor": null,
          "label": "First column as index",
          "order": 8,
          "type": "boolean",
          "value": true
        },
        "label": "Signal",
        "noise_amplitude": {
          "editor": {
            "decimals": 2,
            "step": 0.05,
            "type": "spinbox"
          },
          "label": "Amplitude of noise",
          "order": 7,
          "type": "float",
          "value": 0.01
        },
        "order": 1,
        "period": {
          "editor": null,
          "label": "Period",
          "order": 3,
          "type": "float",
          "value": 100.0
        },
        "phase_offset": {
          "editor": null,
          "label": "Phase offset",
          "order": 5,
          "type": "float",
          "value": 0.0
        },
        "signal_type": {
          "editor": {
            "options": [],
            "type": "combobox"
          },
          "label": "Signal type",
          "list": ["cosines", "sinus", "tangent"],
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [1],
          "value_names": ["sinus"]
        },
        "type": "page",
        "use_period": {
          "editor": null,
          "label": "Period or Frequency",
          "order": 4,
          "type": "boolean",
          "value": true
        }
      },
      "table_params": {
        "column_entries": {
          "editor": {
            "max": 1000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column entries",
          "order": 0,
          "type": "integer",
          "value": 2
        },
        "column_length": {
          "editor": {
            "max": 100000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column length",
          "order": 1,
          "type": "integer",
          "value": 10
        },
        "label": "Table",
        "length": {
          "editor": {
            "max": 10000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Table list length",
          "order": 2,
          "type": "integer",
          "value": 5
        },
        "order": 0,
        "type": "page"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{aa5bd20e-7225-4aa5-8f05-489bbd4e1d74}">
        <label>Signal Tables</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" port_format="1.1" uuid="{f156e394-35ef-4980-aba7-86e2015b172b}" x="2550.0" y="2200.0">
    <label>Map</label>
    <version>1.0</version>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "fail_strategy": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Action on exception",
        "list": ["Error", "Create Empty Item", "Skip Item"],
        "mode": "selected",
        "order": 0,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="((table, table), table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{39164182-1040-41f4-beb2-bb489226b869}">
        <label>Lambda Function to Map</label>
      </input>
      <input key="List" scheme="hdf5" type="[((table, table), table)]" type_base="[&lt;a&gt;]" uuid="{b54388d8-9674-4a22-a639-beea86fe1585}">
        <label>Argument List</label>
      </input>
      <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{b78db6d8-884b-46d4-b09d-e87f9064f425}">
        <label>Output List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.vsplittablenode" port_format="1.1" uuid="{f4f7a134-e3e9-4afd-b3b1-1ec131a3442d}" x="2150.0" y="2275.0">
    <label>VSplit Table</label>
    <version>1.0</version>
    <description>Vertical split of Table into Tables.</description>
    <author>Alexander Busck</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "input_index": {
        "editor": {
          "options": [],
          "type": "combobox"
        },
        "label": "Input index",
        "order": 3,
        "type": "string",
        "value": ""
      },
      "no_index": {
        "editor": null,
        "label": "One table for each row.",
        "order": 2,
        "type": "boolean",
        "value": true
      },
      "remove_fill": {
        "editor": null,
        "label": "Remove complement columns",
        "order": 1,
        "type": "boolean",
        "value": false
      },
      "require_index": {
        "editor": null,
        "label": "Require input index",
        "order": 0,
        "type": "boolean",
        "value": true
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{90a78960-c52c-4a6e-9b1e-d394c0b6e0dd}">
        <label>Input Table</label>
      </input>
      <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{fea01b8e-5741-4d30-877f-8764b9df8c5d}">
        <label>Split Tables</label>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{10e52023-e9db-4d04-b620-0c501405a4ad}">
    <source node="{1c9e0d90-a261-4550-97a6-62d54529da22}" port="{5329bcf5-455f-40ec-b4b4-f64b96c0aa9e}"/>
    <destination node="{e45b90e1-77bc-43d1-81dd-33d61fe2daa1}" port="{acc6f477-60d6-4504-b2fc-3f8c3067182b}"/>
  </connection>
  <connection type="[table]" uuid="{40227d63-2075-4804-b5ce-1293b7ad8089}">
    <source node="{3f66b9f4-77cf-46c2-b37d-ad329c7afb42}" port="{642886bb-450e-44e8-8049-cce1913be6b4}"/>
    <destination node="{99deaa38-9856-41f6-8dc7-b7ae61c4c8cd}" port="{62dd5a3c-b9d5-4be9-894e-67284a11834e}"/>
  </connection>
  <connection type="table" uuid="{4215a588-d15b-4b11-8520-b35e6e174661}">
    <source node="{42c370e3-a451-45cc-bcb1-6106a3fa671e}" port="{efdc1c24-df90-4555-bb13-84869f9c9824}"/>
    <destination node="{e45b90e1-77bc-43d1-81dd-33d61fe2daa1}" port="{3f5fee5a-dc4b-4003-aecc-b022fddfd5e3}"/>
  </connection>
  <connection type="[table]" uuid="{507876aa-0425-4ec5-990b-8ca704463afa}">
    <source node="{f4f7a134-e3e9-4afd-b3b1-1ec131a3442d}" port="{fea01b8e-5741-4d30-877f-8764b9df8c5d}"/>
    <destination node="{9c470ab0-0122-4a74-a033-6504fb4ab211}" port="{897cf97c-a5f0-4806-af71-9efe15104c2f}"/>
  </connection>
  <connection type="((table, table), table) -&gt; table" uuid="{7643b87b-c1eb-4f9b-9dca-3d8f1312824a}">
    <source node="{5126a448-7a8c-49aa-b20e-bd69451f727b}" port="{b94430af-c44a-4241-a437-9ddef12e48cc}"/>
    <destination node="{f156e394-35ef-4980-aba7-86e2015b172b}" port="{39164182-1040-41f4-beb2-bb489226b869}"/>
  </connection>
  <connection type="table" uuid="{8227ab5d-41bb-44bd-910c-7893f053540a}">
    <source node="{498e67c9-f782-4ee3-8a97-cb64163c1884}" port="{a0d5fab9-7eca-4ec1-a480-3ebeef71047b}"/>
    <destination node="{f4f7a134-e3e9-4afd-b3b1-1ec131a3442d}" port="{90a78960-c52c-4a6e-9b1e-d394c0b6e0dd}"/>
  </connection>
  <connection type="[(table, table)]" uuid="{b524a6e1-fdbc-4474-bd4c-1e5444dcf36d}">
    <source node="{99deaa38-9856-41f6-8dc7-b7ae61c4c8cd}" port="{8a7c38a9-e97a-443b-a834-eb98993b060f}"/>
    <destination node="{9c470ab0-0122-4a74-a033-6504fb4ab211}" port="{4ac80481-9f6d-4c80-8a82-fe892f876182}"/>
  </connection>
  <connection type="[((table, table), table)]" uuid="{bf762c77-44a2-411c-b4e9-185853a9d3c7}">
    <source node="{9c470ab0-0122-4a74-a033-6504fb4ab211}" port="{2ae68a64-9c99-4484-b538-066a67359663}"/>
    <destination node="{f156e394-35ef-4980-aba7-86e2015b172b}" port="{b54388d8-9674-4a22-a639-beea86fe1585}"/>
  </connection>
  <connection type="table" uuid="{da5d0b18-aaea-4ed8-b56c-e82bd2f388ab}">
    <source node="{670676b3-edb0-41ef-bc31-4862b75cbfcc}" port="{7203fc59-967c-4f6c-b365-2dbe5a0d0acf}"/>
    <destination node="{e45b90e1-77bc-43d1-81dd-33d61fe2daa1}" port="{cb691f1b-2c59-428b-bc04-278b1533bb24}"/>
  </connection>
  <connection type="[table]" uuid="{eb0d091a-fe9c-482e-9709-a4943943a2b9}">
    <source node="{ed9bfa56-bec3-4025-b0f8-d2cb5bdb18d5}" port="{aa5bd20e-7225-4aa5-8f05-489bbd4e1d74}"/>
    <destination node="{99deaa38-9856-41f6-8dc7-b7ae61c4c8cd}" port="{cc2ceeb3-dd60-452c-bbbe-acbec1c65340}"/>
  </connection>
  <text color="Beige" height="200.0" uuid="{7dd5de8e-1f97-45a9-a2c8-db43ff68166c}" width="175.0" x="1725.0" y="2100.0">Advanced:
Select tables using the predicate x &gt; 0.5, where x is the value in the Random Table corresponding to the same index in the Signal Tables.

The result is a merged list of the siggal tables, with the same length as the initial tables (5 in this case)</text>
  <text color="Beige" height="100.0" uuid="{be94f2d0-6531-420a-aac5-1ca38a148d59}" width="175.0" x="1725.0" y="1800.0">Select either cosine or sinus table depending on the fvalue in the random table</text>
  <text color="Beige" height="50.0" uuid="{1c8cd259-6999-49e8-9b43-44b818a43d19}" width="325.0" x="2000.0" y="2375.0">
- Node example: *org.sysess.sympathy.list.eitherwithdatapredicate*</text>
</flow>
