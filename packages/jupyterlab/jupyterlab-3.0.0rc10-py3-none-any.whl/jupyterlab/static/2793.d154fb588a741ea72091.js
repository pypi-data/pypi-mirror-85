(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[2793],{22793:(e,n,t)=>{"use strict";t.r(n);t.d(n,{default:()=>u});var a=t(91180);var r=t.n(a);var i=t(21644);var d=t.n(i);var o=t(21157);var l=t.n(o);var s;(function(e){e.handleLink="rendermime:handle-local-link"})(s||(s={}));const c={id:"@jupyterlab/rendermime-extension:plugin",requires:[o.ITranslator],optional:[a.IDocumentManager,i.ILatexTypesetter],provides:i.IRenderMimeRegistry,activate:p,autoStart:true};const u=c;function p(e,n,t,a){const r=n.load("jupyterlab");if(t){e.commands.addCommand(s.handleLink,{label:r.__("Handle Local Link"),execute:e=>{const n=e["path"];const a=e["id"];if(!n){return}return t.services.contents.get(n,{content:false}).then((()=>{const e=t.registry.defaultRenderedWidgetFactory(n);const r=t.openOrReveal(n,e.name);if(r&&a){r.setFragment(a)}}))}})}return new i.RenderMimeRegistry({initialFactories:i.standardRendererFactories,linkHandler:!t?undefined:{handleLink:(n,t,a)=>{if(n.tagName==="A"&&n.hasAttribute("download")){return}e.commandLinker.connectNode(n,s.handleLink,{path:t,id:a})}},latexTypesetter:a!==null&&a!==void 0?a:undefined,translator:n})}}}]);