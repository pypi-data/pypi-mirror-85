(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[20,9780],{39780:(n,e,t)=>{"use strict";t.r(e);t.d(e,{default:()=>p});var s=t(44626);var a=t(5762);var i=t(21157);var o=t(29103);var l=t(93269);var r=t(63117);var d=t(18834);class h{constructor(n){this._tabsChanged=new r.Signal(this);this._widgets=[];this._labShell=n;this._labShell.layoutModified.connect(this._emitTabsChanged,this)}get tabsChanged(){return this._tabsChanged}addWidget(n){n.title.changed.connect(this._emitTabsChanged,this);this._widgets.push(n)}_emitTabsChanged(){this._widgets.forEach((n=>{n.title.changed.disconnect(this._emitTabsChanged,this)}));this._widgets=[];this._tabsChanged.emit(void 0)}}function u(n,e,t){const s=new h(t);const a=e.load("jupyterlab");n.add({name:a.__("Open Tabs"),running:()=>(0,l.toArray)(t.widgets("main")).map((n=>{s.addWidget(n);return new i(n)})),shutdownAll:()=>{(0,l.toArray)(t.widgets("main")).forEach((n=>{n.close()}))},refreshRunning:()=>void 0,runningChanged:s.tabsChanged,shutdownLabel:a.__("Close"),shutdownAllLabel:a.__("Close All"),shutdownAllConfirmationText:a.__("Are you sure you want to close all open tabs?")});class i{constructor(n){this._widget=n}open(){t.activateById(this._widget.id)}shutdown(){this._widget.close()}icon(){const n=this._widget.title.icon;return n instanceof o.LabIcon?n:o.fileIcon}label(){return this._widget.title.label}labelTitle(){let n;if(this._widget instanceof d.DocumentWidget){n=this._widget.context.path}else{n=this._widget.title.label}return n}}}var c=t(66995);function g(n,e,t){const s=e.load("jupyterlab");const a=t.serviceManager.sessions;const i=t.serviceManager.kernelspecs;function r(n){return!!((n.name||c.PathExt.basename(n.path)).indexOf(".")!==-1||n.name)}n.add({name:s.__("Kernels"),running:()=>(0,l.toArray)(a.running()).filter(r).map((n=>new d(n))),shutdownAll:()=>a.shutdownAll(),refreshRunning:()=>a.refreshRunning(),runningChanged:a.runningChanged,shutdownLabel:s.__("Shut Down"),shutdownAllLabel:s.__("Shut Down All"),shutdownAllConfirmationText:s.__("Are you sure you want to permanently shut down all running kernels?")});class d{constructor(n){this._model=n}open(){const{path:n,type:e}=this._model;if(e.toLowerCase()==="console"){void t.commands.execute("console:open",{path:n})}else{void t.commands.execute("docmanager:open",{path:n})}}shutdown(){return a.shutdown(this._model.id)}icon(){const{name:n,path:e,type:t}=this._model;if((n||c.PathExt.basename(e)).indexOf(".ipynb")!==-1){return o.notebookIcon}else if(t.toLowerCase()==="console"){return o.consoleIcon}return o.fileIcon}label(){return this._model.name||c.PathExt.basename(this._model.path)}labelTitle(){const{kernel:n,path:e}=this._model;let t=n===null||n===void 0?void 0:n.name;if(t&&i.specs){const n=i.specs.kernelspecs[t];t=n?n.display_name:"unknown"}return s.__("Path: %1\nKernel: %2",e,t)}}}const _={activate:w,id:"@jupyterlab/running-extension:plugin",provides:a.IRunningSessionManagers,requires:[i.ITranslator],optional:[s.ILayoutRestorer,s.ILabShell],autoStart:true};const p=_;function w(n,e,t,s){const i=e.load("jupyterlab");const l=new a.RunningSessionManagers;const r=new a.RunningSessions(l,e);r.id="jp-running-sessions";r.title.caption=i.__("Running Terminals and Kernels");r.title.icon=o.runningIcon;if(t){t.add(r,"running-sessions")}if(s){u(l,e,s)}g(l,e,n);n.shell.add(r,"left",{rank:200});return l}}}]);