(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[4360,1020],{34360:(e,n,t)=>{"use strict";t.r(n);t.d(n,{default:()=>L});var a=t(44626);var o=t.n(a);var r=t(90265);var i=t.n(r);var s=t(53703);var c=t.n(s);var d=t(39193);var l=t.n(d);var u=t(66995);var g=t.n(u);var v=t(46548);var b=t.n(v);var p=t(18834);var m=t.n(p);var h=t(5328);var I=t.n(h);var f=t(68677);var C=t.n(f);var y=t(11368);var w=t.n(y);var D=t(21157);var S=t.n(D);const k={id:"@jupyterlab/debugger-extension:consoles",autoStart:true,requires:[v.IDebugger,d.IConsoleTracker],optional:[a.ILabShell],activate:(e,n,t,a)=>{const o=new v.Debugger.Handler({type:"console",shell:e.shell,service:n});const r=async n=>{const{sessionContext:t}=n;await t.ready;await o.updateContext(n,t);e.commands.notifyCommandChanged()};if(a){a.currentChanged.connect((async(e,n)=>{const t=n.newValue;if(!(t instanceof d.ConsolePanel)){return}await r(t)}));return}t.currentChanged.connect((async(e,n)=>{if(n){void r(n)}}))}};const _={id:"@jupyterlab/debugger-extension:files",autoStart:true,requires:[v.IDebugger,h.IEditorTracker],optional:[a.ILabShell],activate:(e,n,t,a)=>{const o=new v.Debugger.Handler({type:"file",shell:e.shell,service:n});const r={};const i=async n=>{const t=e.serviceManager.sessions;try{const a=await t.findByPath(n.context.path);if(!a){return}let i=r[a.id];if(!i){i=t.connectTo({model:a});r[a.id]=i}await o.update(n,i);e.commands.notifyCommandChanged()}catch(a){return}};if(a){a.currentChanged.connect((async(e,n)=>{const t=n.newValue;if(!(t instanceof p.DocumentWidget)){return}const a=t.content;if(!(a instanceof h.FileEditor)){return}await i(t)}))}t.currentChanged.connect((async(e,n)=>{await i(n)}))}};const x={id:"@jupyterlab/debugger-extension:notebooks",autoStart:true,requires:[v.IDebugger,f.INotebookTracker],optional:[a.ILabShell],activate:(e,n,t,a)=>{const o=new v.Debugger.Handler({type:"notebook",shell:e.shell,service:n});const r=async n=>{const{sessionContext:t}=n;await t.ready;await o.updateContext(n,t);e.commands.notifyCommandChanged()};if(a){a.currentChanged.connect((async(e,n)=>{const t=n.newValue;if(!(t instanceof f.NotebookPanel)){return}await r(t)}));return}t.currentChanged.connect((async(e,n)=>{await r(n)}))}};const T={id:"@jupyterlab/debugger-extension:service",autoStart:true,provides:v.IDebugger,requires:[v.IDebuggerConfig],optional:[v.IDebuggerSources],activate:(e,n,t)=>new v.Debugger.Service({config:n,debuggerSources:t,specsManager:e.serviceManager.kernelspecs})};const E={id:"@jupyterlab/debugger-extension:config",provides:v.IDebuggerConfig,autoStart:true,activate:()=>new v.Debugger.Config};const j={id:"@jupyterlab/debugger-extension:sources",autoStart:true,provides:v.IDebuggerSources,requires:[v.IDebuggerConfig,s.IEditorServices],optional:[f.INotebookTracker,d.IConsoleTracker,h.IEditorTracker],activate:(e,n,t,a,o,r)=>new v.Debugger.Sources({config:n,shell:e.shell,editorServices:t,notebookTracker:a,consoleTracker:o,editorTracker:r})};const O={id:"@jupyterlab/debugger-extension:variables",autoStart:true,requires:[v.IDebugger,D.ITranslator],optional:[r.IThemeManager],activate:(e,n,t,a)=>{const o=t.load("jupyterlab");const{commands:i,shell:s}=e;const c=new r.WidgetTracker({namespace:"debugger/inspect-variable"});const d=v.Debugger.CommandIDs;i.addCommand(d.inspectVariable,{label:o.__("Inspect Variable"),caption:o.__("Inspect Variable"),execute:async e=>{var t,o;const{variableReference:d}=e;if(!d||d===0){return}const l=await n.inspectVariable(d);const u=e.title;const g=`jp-debugger-variable-${u}`;if(!l||l.length===0||c.find((e=>e.id===g))){return}const b=n.model.variables;const p=new r.MainAreaWidget({content:new v.Debugger.VariablesGrid({model:b,commands:i,scopes:[{name:u,variables:l}],themeManager:a})});p.addClass("jp-DebuggerVariables");p.id=g;p.title.icon=v.Debugger.Icons.variableIcon;p.title.label=`${(o=(t=n.session)===null||t===void 0?void 0:t.connection)===null||o===void 0?void 0:o.name} - ${u}`;void c.add(p);b.changed.connect((()=>p.dispose()));s.add(p,"main",{mode:c.currentWidget?"split-right":"split-bottom"})}})}};const M={id:"@jupyterlab/debugger-extension:sidebar",provides:v.IDebuggerSidebar,requires:[v.IDebugger,s.IEditorServices,D.ITranslator],optional:[r.IThemeManager,y.ISettingRegistry],autoStart:true,activate:async(e,n,t,a,o,r)=>{const{commands:i}=e;const s=v.Debugger.CommandIDs;const c={registry:i,continue:s.debugContinue,terminate:s.terminate,next:s.next,stepIn:s.stepIn,stepOut:s.stepOut};const d=new v.Debugger.Sidebar({service:n,callstackCommands:c,editorServices:t,themeManager:o,translator:a});if(r){const e=await r.load(q.id);const t=()=>{var t,a,o,r;const i=e.get("variableFilters").composite;const s=(r=(o=(a=(t=n.session)===null||t===void 0?void 0:t.connection)===null||a===void 0?void 0:a.kernel)===null||o===void 0?void 0:o.name)!==null&&r!==void 0?r:"";if(s&&i[s]){d.variables.filter=new Set(i[s])}};t();e.changed.connect(t);n.sessionChanged.connect(t)}return d}};const q={id:"@jupyterlab/debugger-extension:main",requires:[v.IDebugger,s.IEditorServices,D.ITranslator,v.IDebuggerSidebar],optional:[a.ILabShell,a.ILayoutRestorer,r.ICommandPalette,v.IDebuggerSources],autoStart:true,activate:async(e,n,t,a,o,r,i,s,c)=>{var d;const l=a.load("jupyterlab");const{commands:g,shell:b,serviceManager:p}=e;const{kernelspecs:m}=p;const h=v.Debugger.CommandIDs;const I=u.PageConfig.getOption("alwaysShowDebuggerExtension").toLowerCase()==="true";if(!I){await m.ready;const e=(d=m.specs)===null||d===void 0?void 0:d.kernelspecs;if(!e){return}const n=Object.keys(e).some((n=>{var t,a,o;return!!((o=(a=(t=e[n])===null||t===void 0?void 0:t.metadata)===null||a===void 0?void 0:a["debugger"])!==null&&o!==void 0?o:false)}));if(!n){return}}g.addCommand(h.debugContinue,{label:l.__("Continue"),caption:l.__("Continue"),icon:v.Debugger.Icons.continueIcon,isEnabled:()=>n.hasStoppedThreads(),execute:async()=>{await n.continue();g.notifyCommandChanged()}});g.addCommand(h.terminate,{label:l.__("Terminate"),caption:l.__("Terminate"),icon:v.Debugger.Icons.terminateIcon,isEnabled:()=>n.hasStoppedThreads(),execute:async()=>{await n.restart();g.notifyCommandChanged()}});g.addCommand(h.next,{label:l.__("Next"),caption:l.__("Next"),icon:v.Debugger.Icons.stepOverIcon,isEnabled:()=>n.hasStoppedThreads(),execute:async()=>{await n.next()}});g.addCommand(h.stepIn,{label:l.__("Step In"),caption:l.__("Step In"),icon:v.Debugger.Icons.stepIntoIcon,isEnabled:()=>n.hasStoppedThreads(),execute:async()=>{await n.stepIn()}});g.addCommand(h.stepOut,{label:l.__("Step Out"),caption:l.__("Step Out"),icon:v.Debugger.Icons.stepOutIcon,isEnabled:()=>n.hasStoppedThreads(),execute:async()=>{await n.stepOut()}});n.eventMessage.connect(((e,n)=>{g.notifyCommandChanged();if(r&&n.event==="initialized"){r.expandRight()}}));n.sessionChanged.connect((e=>{g.notifyCommandChanged()}));if(i){i.add(o,"debugger-sidebar")}b.add(o,"right");if(s){const e=l.__("Debugger");[h.debugContinue,h.terminate,h.next,h.stepIn,h.stepOut].forEach((n=>{s.addItem({command:n,category:e})}))}if(c){const{model:e}=n;const a=new v.Debugger.ReadOnlyEditorFactory({editorServices:t});const o=(e,t)=>{var a,o,r,i,s,d,l,u,g;c.find({focus:true,kernel:(i=(r=(o=(a=n.session)===null||a===void 0?void 0:a.connection)===null||o===void 0?void 0:o.kernel)===null||r===void 0?void 0:r.name)!==null&&i!==void 0?i:"",path:(l=(d=(s=n.session)===null||s===void 0?void 0:s.connection)===null||d===void 0?void 0:d.path)!==null&&l!==void 0?l:"",source:(g=(u=t===null||t===void 0?void 0:t.source)===null||u===void 0?void 0:u.path)!==null&&g!==void 0?g:""}).forEach((e=>{requestAnimationFrame((()=>{v.Debugger.EditorHandler.showCurrentLine(e,t.line)}))}))};const r=(e,t)=>{var o,r,i,s,d,l,g;if(!t){return}const{content:b,mimeType:p,path:m}=t;const h=c.find({focus:true,kernel:(s=(i=(r=(o=n.session)===null||o===void 0?void 0:o.connection)===null||r===void 0?void 0:r.kernel)===null||i===void 0?void 0:i.name)!==null&&s!==void 0?s:"",path:(g=(l=(d=n.session)===null||d===void 0?void 0:d.connection)===null||l===void 0?void 0:l.path)!==null&&g!==void 0?g:"",source:m});if(h.length>0){return}const I=a.createNewEditor({content:b,mimeType:p,path:m});const f=I.editor;const C=new v.Debugger.EditorHandler({debuggerService:n,editor:f,path:m});I.disposed.connect((()=>C.dispose()));c.open({label:u.PathExt.basename(m),caption:m,editorWrapper:I});const y=n.model.callstack.frame;if(y){v.Debugger.EditorHandler.showCurrentLine(f,y.line)}};e.callstack.currentFrameChanged.connect(o);e.sources.currentSourceOpened.connect(r);e.breakpoints.clicked.connect((async(e,t)=>{var a;const o=(a=t.source)===null||a===void 0?void 0:a.path;const i=await n.getSource({sourceReference:0,path:o});r(null,i)}))}}};const V=[T,k,_,x,O,M,q,j,E];const L=V}}]);