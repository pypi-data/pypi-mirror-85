(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[5289],{61906:(e,n,r)=>{n=e.exports=r(23645)(false);n.push([e.id,"/*\n\n    Name:       Isotope\n    Author:     David Desandro / Jan T. Sott\n\n    CodeMirror template by Jan T. Sott (https://github.com/idleberg/base16-codemirror)\n    Original Base16 color scheme by Chris Kempson (https://github.com/chriskempson/base16)\n\n*/\n\n.cm-s-isotope.CodeMirror {background: #000000; color: #e0e0e0;}\n.cm-s-isotope div.CodeMirror-selected {background: #404040 !important;}\n.cm-s-isotope .CodeMirror-gutters {background: #000000; border-right: 0px;}\n.cm-s-isotope .CodeMirror-linenumber {color: #808080;}\n.cm-s-isotope .CodeMirror-cursor {border-left: 1px solid #c0c0c0 !important;}\n\n.cm-s-isotope span.cm-comment {color: #3300ff;}\n.cm-s-isotope span.cm-atom {color: #cc00ff;}\n.cm-s-isotope span.cm-number {color: #cc00ff;}\n\n.cm-s-isotope span.cm-property, .cm-s-isotope span.cm-attribute {color: #33ff00;}\n.cm-s-isotope span.cm-keyword {color: #ff0000;}\n.cm-s-isotope span.cm-string {color: #ff0099;}\n\n.cm-s-isotope span.cm-variable {color: #33ff00;}\n.cm-s-isotope span.cm-variable-2 {color: #0066ff;}\n.cm-s-isotope span.cm-def {color: #ff9900;}\n.cm-s-isotope span.cm-error {background: #ff0000; color: #c0c0c0;}\n.cm-s-isotope span.cm-bracket {color: #e0e0e0;}\n.cm-s-isotope span.cm-tag {color: #ff0000;}\n.cm-s-isotope span.cm-link {color: #cc00ff;}\n\n.cm-s-isotope .CodeMirror-matchingbracket { text-decoration: underline; color: white !important;}\n.cm-s-isotope .CodeMirror-activeline-background { background: #202020; }\n",""])},23645:e=>{"use strict";e.exports=function(e){var r=[];r.toString=function r(){return this.map((function(r){var o=n(r,e);if(r[2]){return"@media ".concat(r[2],"{").concat(o,"}")}return o})).join("")};r.i=function(e,n){if(typeof e==="string"){e=[[null,e,""]]}var o={};for(var t=0;t<this.length;t++){var a=this[t][0];if(a!=null){o[a]=true}}for(var i=0;i<e.length;i++){var c=e[i];if(c[0]==null||!o[c[0]]){if(n&&!c[2]){c[2]=n}else if(n){c[2]="(".concat(c[2],") and (").concat(n,")")}r.push(c)}}};return r};function n(e,n){var o=e[1]||"";var t=e[3];if(!t){return o}if(n&&typeof btoa==="function"){var a=r(t);var i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot).concat(e," */")}));return[o].concat(i).concat([a]).join("\n")}return[o].join("\n")}function r(e){var n=btoa(unescape(encodeURIComponent(JSON.stringify(e))));var r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n);return"/*# ".concat(r," */")}},35289:(e,n,r)=>{var o=r(93379);var t=r(61906);t=t.__esModule?t.default:t;if(typeof t==="string"){t=[[e.id,t,""]]}var a={};a.insert="head";a.singleton=false;var i=o(t,a);e.exports=t.locals||{}},93379:(e,n,r)=>{"use strict";var o=function e(){var n;return function e(){if(typeof n==="undefined"){n=Boolean(window&&document&&document.all&&!window.atob)}return n}}();var t=function e(){var n={};return function e(r){if(typeof n[r]==="undefined"){var o=document.querySelector(r);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement){try{o=o.contentDocument.head}catch(t){o=null}}n[r]=o}return n[r]}}();var a=[];function i(e){var n=-1;for(var r=0;r<a.length;r++){if(a[r].identifier===e){n=r;break}}return n}function c(e,n){var r={};var o=[];for(var t=0;t<e.length;t++){var c=e[t];var s=n.base?c[0]+n.base:c[0];var f=r[s]||0;var u="".concat(s," ").concat(f);r[s]=f+1;var l=i(u);var p={css:c[1],media:c[2],sourceMap:c[3]};if(l!==-1){a[l].references++;a[l].updater(p)}else{a.push({identifier:u,updater:v(p,n),references:1})}o.push(u)}return o}function s(e){var n=document.createElement("style");var o=e.attributes||{};if(typeof o.nonce==="undefined"){var a=true?r.nc:0;if(a){o.nonce=a}}Object.keys(o).forEach((function(e){n.setAttribute(e,o[e])}));if(typeof e.insert==="function"){e.insert(n)}else{var i=t(e.insert||"head");if(!i){throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.")}i.appendChild(n)}return n}function f(e){if(e.parentNode===null){return false}e.parentNode.removeChild(e)}var u=function e(){var n=[];return function e(r,o){n[r]=o;return n.filter(Boolean).join("\n")}}();function l(e,n,r,o){var t=r?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(e.styleSheet){e.styleSheet.cssText=u(n,t)}else{var a=document.createTextNode(t);var i=e.childNodes;if(i[n]){e.removeChild(i[n])}if(i.length){e.insertBefore(a,i[n])}else{e.appendChild(a)}}}function p(e,n,r){var o=r.css;var t=r.media;var a=r.sourceMap;if(t){e.setAttribute("media",t)}else{e.removeAttribute("media")}if(a&&btoa){o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")}if(e.styleSheet){e.styleSheet.cssText=o}else{while(e.firstChild){e.removeChild(e.firstChild)}e.appendChild(document.createTextNode(o))}}var d=null;var m=0;function v(e,n){var r;var o;var t;if(n.singleton){var a=m++;r=d||(d=s(n));o=l.bind(null,r,a,false);t=l.bind(null,r,a,true)}else{r=s(n);o=p.bind(null,r,n);t=function e(){f(r)}}o(e);return function n(r){if(r){if(r.css===e.css&&r.media===e.media&&r.sourceMap===e.sourceMap){return}o(e=r)}else{t()}}}e.exports=function(e,n){n=n||{};if(!n.singleton&&typeof n.singleton!=="boolean"){n.singleton=o()}e=e||[];var r=c(e,n);return function e(o){o=o||[];if(Object.prototype.toString.call(o)!=="[object Array]"){return}for(var t=0;t<r.length;t++){var s=r[t];var f=i(s);a[f].references--}var u=c(o,n);for(var l=0;l<r.length;l++){var p=r[l];var d=i(p);if(a[d].references===0){a[d].updater();a.splice(d,1)}}r=u}}}}]);