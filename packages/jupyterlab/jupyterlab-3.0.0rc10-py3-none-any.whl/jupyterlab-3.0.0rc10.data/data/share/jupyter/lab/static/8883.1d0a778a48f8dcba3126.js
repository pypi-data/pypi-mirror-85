(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[8883,9364],{8883:(e,n,t)=>{"use strict";t.r(n);t.d(n,{default:()=>k,addCommands:()=>A});var a=t(93269);var r=t.n(a);var s=t(86992);var o=t.n(s);var i=t(44626);var c=t.n(i);var m=t(90265);var l=t.n(m);var d=t(67674);var u=t.n(d);var h=t(32834);var g=t.n(h);var f=t(5762);var _=t.n(f);var w=t(11368);var p=t.n(w);var y=t(27353);var v=t.n(y);var T=t(21157);var b=t.n(T);var I=t(29103);var M=t.n(I);var C;(function(e){e.createNew="terminal:create-new";e.open="terminal:open";e.refresh="terminal:refresh";e.increaseFont="terminal:increase-font";e.decreaseFont="terminal:decrease-font";e.setTheme="terminal:set-theme"})(C||(C={}));const N={activate:S,id:"@jupyterlab/terminal-extension:plugin",provides:y.ITerminalTracker,requires:[w.ISettingRegistry,T.ITranslator],optional:[m.ICommandPalette,d.ILauncher,i.ILayoutRestorer,h.IMainMenu,m.IThemeManager,f.IRunningSessionManagers],autoStart:true};const k=N;function S(e,n,t,a,r,o,i,c,l){const d=t.load("jupyterlab");const{serviceManager:u,commands:h}=e;const g=d.__("Terminal");const f="terminal";const _=new m.WidgetTracker({namespace:f});if(!u.terminals.isAvailable()){console.warn("Disabling terminals plugin because they are not available on the server");return _}if(o){void o.restore(_,{command:C.createNew,args:e=>({name:e.content.session.name}),name:e=>e.content.session.name})}const w={};function p(e){Object.keys(e.composite).forEach((n=>{w[n]=e.composite[n]}))}function y(e){const n=e.content;if(!n){return}Object.keys(w).forEach((e=>{n.setOption(e,w[e])}))}function v(){_.forEach((e=>y(e)))}n.load(N.id).then((e=>{p(e);v();e.changed.connect((()=>{p(e);v()}))})).catch(P.showErrorMessage);c===null||c===void 0?void 0:c.themeChanged.connect(((e,n)=>{_.forEach((e=>{const n=e.content;if(n.getOption("theme")==="inherit"){n.setOption("theme","inherit")}}))}));A(e,_,n,t,w);if(i){const e=new s.Menu({commands:h});e.title.label=d.__("Terminal Theme");e.addItem({command:C.setTheme,args:{theme:"inherit",displayName:d.__("Inherit"),isPalette:false}});e.addItem({command:C.setTheme,args:{theme:"light",displayName:d.__("Light"),isPalette:false}});e.addItem({command:C.setTheme,args:{theme:"dark",displayName:d.__("Dark"),isPalette:false}});i.settingsMenu.addGroup([{command:C.increaseFont},{command:C.decreaseFont},{type:"submenu",submenu:e}],40);i.fileMenu.newMenu.addGroup([{command:C.createNew}],20);i.fileMenu.closeAndCleaners.add({tracker:_,closeAndCleanupLabel:e=>d.__("Shutdown Terminal"),closeAndCleanup:e=>e.content.session.shutdown()})}if(a){[C.createNew,C.refresh,C.increaseFont,C.decreaseFont].forEach((e=>{a.addItem({command:e,category:g,args:{isPalette:true}})}));a.addItem({command:C.setTheme,category:g,args:{theme:"inherit",displayName:d.__("Inherit"),isPalette:true}});a.addItem({command:C.setTheme,category:g,args:{theme:"light",displayName:d.__("Light"),isPalette:true}});a.addItem({command:C.setTheme,category:g,args:{theme:"dark",displayName:d.__("Dark"),isPalette:true}})}if(r){r.add({command:C.createNew,category:d.__("Other"),rank:0})}if(l){E(l,e,t)}e.contextMenu.addItem({command:C.refresh,selector:".jp-Terminal",rank:1});return _}function E(e,n,t){const r=t.load("jupyterlab");const s=n.serviceManager.terminals;e.add({name:r.__("Terminals"),running:()=>(0,a.toArray)(s.running()).map((e=>new o(e))),shutdownAll:()=>s.shutdownAll(),refreshRunning:()=>s.refreshRunning(),runningChanged:s.runningChanged,shutdownLabel:r.__("Shut Down"),shutdownAllLabel:r.__("Shut Down All"),shutdownAllConfirmationText:r.__("Are you sure you want to permanently shut down all running terminals?")});class o{constructor(e){this._model=e}open(){void n.commands.execute("terminal:open",{name:this._model.name})}icon(){return I.terminalIcon}label(){return`terminals/${this._model.name}`}shutdown(){return s.shutdown(this._model.name)}}}function A(e,n,t,a,r){const s=a.load("jupyterlab");const{commands:o,serviceManager:i}=e;o.addCommand(C.createNew,{label:e=>e["isPalette"]?s.__("New Terminal"):s.__("Terminal"),caption:s.__("Start a new terminal session"),icon:e=>e["isPalette"]?undefined:I.terminalIcon,execute:async t=>{let s;try{s=(await P.ensureWidget()).Terminal}catch(u){P.showErrorMessage(u);return}const o=t["name"];const c=await(o?i.terminals.connectTo({model:{name:o}}):i.terminals.startNew());const l=new s(c,r,a);l.title.icon=I.terminalIcon;l.title.label="...";const d=new m.MainAreaWidget({content:l});e.shell.add(d);void n.add(d);e.shell.activateById(d.id);return d}});o.addCommand(C.open,{execute:t=>{const a=t["name"];const r=n.find((e=>{const n=e.content;return n.session.name===a||false}));if(r){e.shell.activateById(r.id)}else{return o.execute(C.createNew,{name:a})}}});o.addCommand(C.refresh,{label:s.__("Refresh Terminal"),caption:s.__("Refresh the current terminal session"),execute:async()=>{const t=n.currentWidget;if(!t){return}e.shell.activateById(t.id);try{await t.content.refresh();if(t){t.content.activate()}}catch(a){P.showErrorMessage(a)}},isEnabled:()=>n.currentWidget!==null});o.addCommand(C.increaseFont,{label:s.__("Increase Terminal Font Size"),execute:async()=>{const{fontSize:e}=r;if(e&&e<72){try{await t.set(N.id,"fontSize",e+1)}catch(n){P.showErrorMessage(n)}}}});o.addCommand(C.decreaseFont,{label:s.__("Decrease Terminal Font Size"),execute:async()=>{const{fontSize:e}=r;if(e&&e>9){try{await t.set(N.id,"fontSize",e-1)}catch(n){P.showErrorMessage(n)}}}});o.addCommand(C.setTheme,{label:e=>{const n=e["displayName"];return e["isPalette"]?s.__("Use Terminal Theme: %1",n):n},caption:s.__("Set the terminal theme"),isToggled:e=>{const{theme:n}=r;return e["theme"]===n},execute:async e=>{const n=e["theme"];try{await t.set(N.id,"theme",n);o.notifyCommandChanged(C.setTheme)}catch(a){console.log(a);P.showErrorMessage(a)}}})}var P;(function(e){function n(){if(e.widgetReady){return e.widgetReady}e.widgetReady=Promise.all([t.e(9308),t.e(2191),t.e(4723),t.e(5893)]).then(t.bind(t,99308));return e.widgetReady}e.ensureWidget=n;function a(e){console.error(`Failed to configure ${N.id}: ${e.message}`)}e.showErrorMessage=a})(P||(P={}))}}]);