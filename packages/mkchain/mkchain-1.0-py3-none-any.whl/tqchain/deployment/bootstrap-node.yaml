apiVersion: batch/v1
kind: Job
metadata:
  name: activate-job
  namespace: "tqtezos"
spec:
  template:
    metadata:
      name: activate-job
    spec:
      initContainers:
      - name: import-keys
        command: ['sh', '/opt/tqtezos/import_keys.sh']
        envFrom:
        - secretRef:
            name: tezos-secret
        volumeMounts:
        - name: tqtezos-utils
          mountPath: /opt/tqtezos
        - name: var-volume
          mountPath: /var/tezos
      - imagePullPolicy: Always
        name: tezos-config-generator
        image: python:alpine
        command: ["python", "/opt/tqtezos/generateTezosConfig.py", "--generate-parameters-json"]
        envFrom:
        - configMapRef:
            name: tezos-config
        volumeMounts:
        - name: config-volume
          mountPath: /etc/tezos
        - name: tqtezos-utils
          mountPath: /opt/tqtezos
        - name: var-volume
          mountPath: /var/tezos
      - name: wait-for-node
        image: busybox
        command: ['sh', '-c', 'until nslookup tezos-bootstrap-node-rpc; do echo waiting for tezos-bootstrap-node-rpc; sleep 2; done;']
      - name: activate
        command: ["/usr/local/bin/tezos-client"]
        volumeMounts:
        - name: config-volume
          mountPath: /etc/tezos
        - name: var-volume
          mountPath: /var/tezos
      - name: bake-once
        command: ["/usr/local/bin/tezos-client"]
        args: ["-A", "tezos-bootstrap-node-rpc", "-P", "8732", "-d", "/var/tezos/client", "-l", "bake", "for", "baker", "--minimal-timestamp"]
        volumeMounts:
        - name: config-volume
          mountPath: /etc/tezos
        - name: var-volume
          mountPath: /var/tezos
      containers:
      - name: job-done
        image: busybox
        command: ['sh', '-c', 'echo "private chain activated"']
      restartPolicy: Never
      volumes:
      - name: config-volume
        emptyDir: {}
      - name: var-volume
        emptyDir: {}
      - name: tqtezos-utils
        configMap:
          name: tqtezos-utils
---
apiVersion: v1
kind: Service
metadata:
  name: tezos-bootstrap-node-rpc
  namespace: "tqtezos"
spec:
  type: NodePort
  ports:
  - port: 8732
    nodePort: 31732
  selector:
    app: tezos-bootstrap-node
---
apiVersion: v1
kind: Service
metadata:
  name: tezos-bootstrap-node-p2p
  namespace: "tqtezos"
spec:
  type: NodePort
  ports:
  - port: 9732
    nodePort: 30732
  selector:
    app: tezos-bootstrap-node
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tezos-bootstrap-node
  namespace: "tqtezos"
spec:
  selector:
    matchLabels:
      app: tezos-bootstrap-node
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: tezos-bootstrap-node
        appType: tezos
    spec:
      securityContext:
        fsGroup: 100
      initContainers:
      - imagePullPolicy: Always
        name: tezos-config-generator
        image: python:alpine
        command: ["python", "/opt/tqtezos/generateTezosConfig.py", "--generate-config-json", "--generate-parameters-json"]
        envFrom:
        - configMapRef:
            name: tezos-config
        volumeMounts:
        - name: config-volume
          mountPath: /etc/tezos
        - name: tqtezos-utils
          mountPath: /opt/tqtezos
        - name: var-volume
          mountPath: /var/tezos
      containers:
      - imagePullPolicy: Always
        name: tezos-node
        command: ["/usr/local/bin/tezos-node"]
        args: ["run", "--bootstrap-threshold", "0", "--config-file",  "/etc/tezos/config.json"]
        readinessProbe:
          exec:
            command: ["nc", "-z", "127.0.0.1", "8732"]
          initialDelaySeconds: 2
          periodSeconds: 2
          timeoutSeconds: 1
        ports:
        - containerPort: 8732
          name: tezos-rpc
        - containerPort: 9732
          name: tezos-net
        volumeMounts:
        - name: config-volume
          mountPath: /etc/tezos
        - name: var-volume
          mountPath: /var/tezos
      volumes:
      - name: dev-net-tun
        hostPath:
          path: /dev/net/tun
      - name: config-volume
        emptyDir: {}
      - name: tqtezos-utils
        configMap:
          name: tqtezos-utils
      - name: var-volume
        persistentVolumeClaim:
          claimName: tezos-bootstrap-node-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tezos-bootstrap-node-pv-claim
  namespace: "tqtezos"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
