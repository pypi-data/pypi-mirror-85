{"version":3,"sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/actionCreators/teams.tsx","webpack:///./app/views/settings/organizationTeams/allTeamsRow.jsx","webpack:///./app/views/settings/organizationTeams/allTeamsList.tsx","webpack:///./app/views/settings/organizationTeams/organizationTeams.jsx","webpack:///./app/views/settings/organizationTeams/index.jsx"],"names":["SettingsPageHeading","this","props","icon","title","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","SentryDocumentTitle","_title","objSlug","children","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","doCallback","name","args","callIfFunction","fetchTeamDetails","api","TeamActions","fetchDetails","teamId","request","orgId","success","data","fetchDetailsSuccess","error","fetchDetailsError","updateTeamSuccess","updateSuccess","updateTeam","endpoint","update","method","updateError","joinTeam","memberId","id","uniqueId","leaveTeam","createTeam","team","requestPromise","then","createTeamSuccess","addSuccessMessage","tct","slug","organization","err","createTeamError","addErrorMessage","removeTeam","removeTeamSuccess","removeTeamError","AllTeamsRow","state","loading","handleRequestAccess","a","successMessage","errorMessage","_err","handleJoinTeam","setState","Promise","resolve","reject","Error","handleLeaveTeam","urlPrefix","openMembership","display","avatarSize","description","tn","memberCount","canViewTeam","hasAccess","TeamPanelItem","TeamNameWrapper","TeamLink","Spacer","size","disabled","isMember","onClick","t","isPending","Link","withApi","PanelItem","AllTeamsList","teamList","access","teamNodes","key","length","canCreateTeam","has","root","noMargin","teamCreate","link","StyledButton","priority","openCreateTeamModal","Button","theme","fontSizeLarge","OrganizationTeams","allTeams","activeTeams","features","org","canCreateTeams","undefined","isCircled","teamRoute","find","activeTeamIds","Set","otherTeams","filter","data-test-id","OrganizationTeamsContainer","createReactClass","displayName","mixins","Reflux","listenTo","TeamStore","ProjectsStore","getInitialState","sortArray","getAll","o","projectList","projectStats","componentDidMount","fetchStats","loadStats","query","since","Date","getTime","stat","group","onTeamListChange","newTeamList","onProjectListChange","newProjectList","render","withOrganization"],"mappings":"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","file":"OrganizationTeams.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import React, {FunctionComponent} from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype DocumentTitleProps = {\n  // Main page title\n  title: string;\n  // Organization or project slug to give title some context\n  objSlug: string;\n  children?: React.ReactNode;\n};\n\nconst SentryDocumentTitle: FunctionComponent<DocumentTitleProps> = (\n  props: DocumentTitleProps\n) => {\n  const _title = `${props.title} - ${props.objSlug} - Sentry`;\n  return <DocumentTitle title={_title}>{props.children}</DocumentTitle>;\n};\n\nexport default SentryDocumentTitle;\n","import {Location} from 'history';\nimport {PlainRoute} from 'react-router/lib/Route';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\n\ntype Options = {\n  routes: PlainRoute[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import {Client} from 'app/api';\nimport TeamActions from 'app/actions/teamActions';\nimport {tct} from 'app/locale';\nimport {addSuccessMessage, addErrorMessage} from 'app/actionCreators/indicator';\nimport {uniqueId} from 'app/utils/guid';\nimport {Team} from 'app/types';\nimport {callIfFunction} from 'app/utils/callIfFunction';\n\ntype CallbackOptions = {\n  success?: Function;\n  error?: Function;\n};\n\nconst doCallback = (\n  params: CallbackOptions = {},\n  name: keyof CallbackOptions,\n  ...args: any[]\n) => {\n  callIfFunction(params[name], ...args);\n};\n\n/**\n * Note these are both slugs\n */\ntype OrgSlug = {orgId: string};\ntype OrgAndTeamSlug = OrgSlug & {teamId: string};\n\ntype TeamData = {data: Team};\n\n/**\n * This is the actual internal id, not username or email\n */\ntype MemberId = {memberId: string};\n\n// Fetch teams for org\nexport function fetchTeams(api: Client, params: OrgSlug, options: CallbackOptions) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function fetchTeamDetails(\n  api: Client,\n  params: OrgAndTeamSlug,\n  options: CallbackOptions\n) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId: OrgAndTeamSlug['teamId'], data: Team) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function updateTeam(\n  api: Client,\n  params: OrgAndTeamSlug & TeamData,\n  options: CallbackOptions\n) {\n  const endpoint = `/teams/${params.orgId}/${params.teamId}/`;\n  TeamActions.update(params.teamId, params.data);\n\n  return api.request(endpoint, {\n    method: 'PUT',\n    data: params.data,\n    success: data => {\n      updateTeamSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function joinTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId ?? 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(\n  api: Client,\n  params: OrgAndTeamSlug & MemberId,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId || 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api: Client, team: Pick<Team, 'slug'>, params: OrgSlug) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api: Client, params: OrgAndTeamSlug) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import {Link} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {PanelItem} from 'app/components/panels';\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {joinTeam, leaveTeam} from 'app/actionCreators/teams';\nimport {t, tct, tn} from 'app/locale';\nimport Button from 'app/components/button';\nimport IdBadge from 'app/components/idBadge';\nimport space from 'app/styles/space';\nimport withApi from 'app/utils/withApi';\n\nclass AllTeamsRow extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n    urlPrefix: PropTypes.string.isRequired,\n    organization: PropTypes.object.isRequired,\n    team: PropTypes.object.isRequired,\n    openMembership: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    loading: false,\n    error: false,\n  };\n\n  handleRequestAccess = async () => {\n    const {team} = this.props;\n\n    try {\n      this.joinTeam({\n        successMessage: tct('You have requested access to [team]', {\n          team: `#${team.slug}`,\n        }),\n\n        errorMessage: tct('Unable to request access to [team]', {\n          team: `#${team.slug}`,\n        }),\n      });\n\n      // TODO: Ideally we would update team so that `isPending` is true\n    } catch (_err) {\n      // No need to do anything\n    }\n  };\n\n  handleJoinTeam = () => {\n    const {team} = this.props;\n\n    this.joinTeam({\n      successMessage: tct('You have joined [team]', {\n        team: `#${team.slug}`,\n      }),\n      errorMessage: tct('Unable to join [team]', {\n        team: `#${team.slug}`,\n      }),\n    });\n  };\n\n  joinTeam = ({successMessage, errorMessage}) => {\n    const {api, organization, team} = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    return new Promise((resolve, reject) =>\n      joinTeam(\n        api,\n        {\n          orgId: organization.slug,\n          teamId: team.slug,\n        },\n        {\n          success: () => {\n            this.setState({\n              loading: false,\n              error: false,\n            });\n            addSuccessMessage(successMessage);\n            resolve();\n          },\n          error: () => {\n            this.setState({\n              loading: false,\n              error: true,\n            });\n            addErrorMessage(errorMessage);\n            reject(new Error('Unable to join team'));\n          },\n        }\n      )\n    );\n  };\n\n  handleLeaveTeam = () => {\n    const {api, organization, team} = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    leaveTeam(\n      api,\n      {\n        orgId: organization.slug,\n        teamId: team.slug,\n      },\n      {\n        success: () => {\n          this.setState({\n            loading: false,\n            error: false,\n          });\n          addSuccessMessage(\n            tct('You have left [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n            error: true,\n          });\n          addErrorMessage(\n            tct('Unable to leave [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n        },\n      }\n    );\n  };\n\n  render() {\n    const {team, urlPrefix, openMembership} = this.props;\n    const display = (\n      <IdBadge\n        team={team}\n        avatarSize={36}\n        description={tn('%s Member', '%s Members', team.memberCount)}\n      />\n    );\n\n    // You can only view team details if you have access to team -- this should account\n    // for your role + org open membership\n    const canViewTeam = team.hasAccess;\n\n    return (\n      <TeamPanelItem>\n        <TeamNameWrapper>\n          {canViewTeam ? (\n            <TeamLink to={`${urlPrefix}teams/${team.slug}/`}>{display}</TeamLink>\n          ) : (\n            display\n          )}\n        </TeamNameWrapper>\n        <Spacer>\n          {this.state.loading ? (\n            <Button size=\"small\" disabled>\n              ...\n            </Button>\n          ) : team.isMember ? (\n            <Button size=\"small\" onClick={this.handleLeaveTeam}>\n              {t('Leave Team')}\n            </Button>\n          ) : team.isPending ? (\n            <Button size=\"small\" disabled>\n              {t('Request Pending')}\n            </Button>\n          ) : openMembership ? (\n            <Button size=\"small\" onClick={this.handleJoinTeam}>\n              {t('Join Team')}\n            </Button>\n          ) : (\n            <Button size=\"small\" onClick={this.handleRequestAccess}>\n              {t('Request Access')}\n            </Button>\n          )}\n        </Spacer>\n      </TeamPanelItem>\n    );\n  }\n}\n\nconst TeamLink = styled(Link)`\n  display: inline-block;\n\n  &.focus-visible {\n    margin: -${space(1)};\n    padding: ${space(1)};\n    background: #f2eff5;\n    border-radius: 3px;\n    outline: none;\n  }\n`;\n\nexport {AllTeamsRow};\nexport default withApi(AllTeamsRow);\n\nconst TeamPanelItem = styled(PanelItem)`\n  padding: 0;\n  align-items: center;\n`;\n\nconst Spacer = styled('div')`\n  padding: ${space(2)};\n`;\n\nconst TeamNameWrapper = styled(Spacer)`\n  flex: 1;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport {tct} from 'app/locale';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport Button from 'app/components/button';\nimport {Organization, Team} from 'app/types';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\nimport AllTeamsRow from './allTeamsRow';\n\ntype Props = {\n  urlPrefix: string;\n  access: Record<string, any>;\n  organization: Organization;\n  teamList: Array<Team>;\n  openMembership: boolean;\n};\n\nconst AllTeamsList = ({\n  organization,\n  urlPrefix,\n  openMembership,\n  teamList,\n  access,\n}: Props) => {\n  const teamNodes = teamList.map(team => (\n    <AllTeamsRow\n      urlPrefix={urlPrefix}\n      access={access}\n      team={team}\n      organization={organization}\n      openMembership={openMembership}\n      key={team.slug}\n    />\n  ));\n\n  if (!teamNodes.length) {\n    const canCreateTeam = access.has('project:admin');\n\n    return (\n      <EmptyMessage>\n        {tct('No teams here. [teamCreate]', {\n          root: <TextBlock noMargin />,\n          teamCreate: canCreateTeam\n            ? tct('You can always [link:create one].', {\n                link: (\n                  <StyledButton\n                    priority=\"link\"\n                    onClick={() =>\n                      openCreateTeamModal({\n                        organization,\n                      })\n                    }\n                  />\n                ),\n              })\n            : null,\n        })}\n      </EmptyMessage>\n    );\n  }\n\n  return teamNodes;\n};\n\nexport default AllTeamsList;\n\nconst StyledButton = styled(Button)`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport SentryTypes from 'app/sentryTypes';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport {IconAdd} from 'app/icons';\n\nimport AllTeamsList from './allTeamsList';\n\nclass OrganizationTeams extends React.Component {\n  static propTypes = {\n    allTeams: PropTypes.arrayOf(SentryTypes.Team),\n    activeTeams: PropTypes.arrayOf(SentryTypes.Team),\n    organization: SentryTypes.Organization,\n    access: PropTypes.object,\n    features: PropTypes.object,\n    routes: PropTypes.array,\n    params: PropTypes.object,\n  };\n\n  render() {\n    const {\n      allTeams,\n      activeTeams,\n      organization,\n      access,\n      features,\n      routes,\n      params,\n    } = this.props;\n    const org = organization;\n\n    if (!organization) {\n      return null;\n    }\n\n    const canCreateTeams = access.has('project:admin');\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        disabled={!canCreateTeams}\n        title={\n          !canCreateTeams ? t('You do not have permission to create teams') : undefined\n        }\n        onClick={() =>\n          openCreateTeamModal({\n            organization,\n          })\n        }\n        icon={<IconAdd size=\"xs\" isCircled />}\n      >\n        {t('Create Team')}\n      </Button>\n    );\n\n    const teamRoute = routes.find(({path}) => path === 'teams/');\n    const urlPrefix = recreateRoute(teamRoute, {routes, params, stepBack: -2});\n\n    const activeTeamIds = new Set(activeTeams.map(team => team.id));\n    const otherTeams = allTeams.filter(team => !activeTeamIds.has(team.id));\n    const title = t('Teams');\n\n    return (\n      <div data-test-id=\"team-list\">\n        <SentryDocumentTitle title={title} objSlug={organization.slug} />\n        <SettingsPageHeader title={title} action={action} />\n        <Panel>\n          <PanelHeader>{t('Your Teams')}</PanelHeader>\n          <PanelBody>\n            <AllTeamsList\n              urlPrefix={urlPrefix}\n              organization={org}\n              teamList={activeTeams}\n              access={access}\n              openMembership={false}\n            />\n          </PanelBody>\n        </Panel>\n        <Panel>\n          <PanelHeader>{t('Other Teams')}</PanelHeader>\n          <PanelBody>\n            <AllTeamsList\n              urlPrefix={urlPrefix}\n              organization={org}\n              teamList={otherTeams}\n              access={access}\n              openMembership={\n                !!(features.has('open-membership') || access.has('org:write'))\n              }\n            />\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default OrganizationTeams;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\n\nimport {loadStats} from 'app/actionCreators/projects';\nimport {sortArray} from 'app/utils';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport SentryTypes from 'app/sentryTypes';\nimport TeamStore from 'app/stores/teamStore';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport OrganizationTeams from './organizationTeams';\n\nconst OrganizationTeamsContainer = createReactClass({\n  displayName: 'OrganizationTeamsContainer',\n\n  propTypes: {\n    api: PropTypes.object,\n    organization: SentryTypes.Organization,\n    routes: PropTypes.arrayOf(PropTypes.object),\n  },\n\n  mixins: [\n    Reflux.listenTo(TeamStore, 'onTeamListChange'),\n    Reflux.listenTo(ProjectsStore, 'onProjectListChange'),\n  ],\n\n  getInitialState() {\n    return {\n      teamList: sortArray(TeamStore.getAll(), function (o) {\n        return o && o.name;\n      }),\n      projectList: sortArray(ProjectsStore.getAll(), function (o) {\n        return o && o.name;\n      }),\n      projectStats: {},\n    };\n  },\n\n  componentDidMount() {\n    this.fetchStats();\n  },\n\n  fetchStats() {\n    loadStats(this.props.api, {\n      orgId: this.props.params.orgId,\n      query: {\n        since: new Date().getTime() / 1000 - 3600 * 24,\n        stat: 'generated',\n        group: 'project',\n      },\n    });\n  },\n\n  onTeamListChange() {\n    const newTeamList = TeamStore.getAll();\n\n    this.setState({\n      teamList: sortArray(newTeamList, function (o) {\n        return o.name;\n      }),\n    });\n  },\n\n  onProjectListChange() {\n    const newProjectList = ProjectsStore.getAll();\n\n    this.setState({\n      projectList: sortArray(newProjectList, function (o) {\n        return o.name;\n      }),\n    });\n  },\n\n  render() {\n    const {organization} = this.props;\n\n    if (!organization) {\n      return null;\n    }\n\n    const allTeams = this.state.teamList;\n    const activeTeams = this.state.teamList.filter(team => team.isMember);\n\n    return (\n      <OrganizationTeams\n        {...this.props}\n        access={new Set(organization.access)}\n        features={new Set(organization.features)}\n        organization={organization}\n        projectList={this.state.projectList}\n        allTeams={allTeams}\n        activeTeams={activeTeams}\n      />\n    );\n  },\n});\n\nexport {OrganizationTeamsContainer};\n\nexport default withApi(withOrganization(OrganizationTeamsContainer));\n"],"sourceRoot":""}