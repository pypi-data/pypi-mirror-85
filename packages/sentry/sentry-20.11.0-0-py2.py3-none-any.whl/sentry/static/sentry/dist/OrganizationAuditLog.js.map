{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/organizationAuditLog/auditLogList.jsx","webpack:///./app/views/settings/organizationAuditLog/index.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","avatarStyle","width","height","marginRight","AuditLogList","pageLinks","entries","eventType","eventTypes","onEventSelect","hasEntries","length","options","value","label","t","clearableVaue","map","type","clearableValue","name","onChange","style","isClearable","StyledPanelHeader","disablePadding","entry","StyledPanelItem","alignItems","key","id","UserInfo","actor","email","user","NameContainer","Name","data-test-id","isSuperuser","Note","note","MonoDetail","event","TimestampOverflow","ipAddress","disabled","TimestampInfo","dateOnly","date","dateCreated","timeOnly","format","overflowEllipsis","theme","fontSizeMedium","PanelHeader","PanelItem","EVENT_TYPES","sort","OrganizationAuditLog","handleEventSelect","location","query","browserHistory","push","pathname","search","params","orgId","context","organization","slug","currentEventType","state","entryList","contextTypes","SentryTypes","Organization"],"mappings":"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","file":"OrganizationAuditLog.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport DateTime from 'app/components/dateTime';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport SelectField from 'app/components/forms/selectField';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport Tooltip from 'app/components/tooltip';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\n\nconst avatarStyle = {\n  width: 36,\n  height: 36,\n  marginRight: 8,\n};\n\nclass AuditLogList extends React.Component {\n  static propTypes = {\n    entries: PropTypes.array,\n    pageLinks: PropTypes.string,\n    eventType: PropTypes.string,\n    eventTypes: PropTypes.arrayOf(PropTypes.string),\n    onEventSelect: PropTypes.func,\n  };\n\n  render() {\n    const {pageLinks, entries, eventType, eventTypes, onEventSelect} = this.props;\n    const hasEntries = entries && entries.length > 0;\n    const ipv4Length = 15;\n    const options = [\n      {value: '', label: t('Any action'), clearableVaue: false},\n      ...eventTypes.map(type => ({label: type, value: type, clearableValue: false})),\n    ];\n\n    const action = (\n      <form>\n        <SelectField\n          name=\"event\"\n          onChange={onEventSelect}\n          value={eventType}\n          style={{width: 250}}\n          options={options}\n          isClearable\n        />\n      </form>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Audit Log')} action={action} />\n        <Panel>\n          <StyledPanelHeader disablePadding>\n            <div>{t('Member')}</div>\n            <div>{t('Action')}</div>\n            <div>{t('IP')}</div>\n            <div>{t('Time')}</div>\n          </StyledPanelHeader>\n\n          <PanelBody>\n            {!hasEntries && (\n              <EmptyMessage>{t('No audit entries available')}</EmptyMessage>\n            )}\n\n            {hasEntries &&\n              entries.map(entry => (\n                <StyledPanelItem alignItems=\"center\" key={entry.id}>\n                  <UserInfo>\n                    <div>\n                      {entry.actor.email && (\n                        <UserAvatar style={avatarStyle} user={entry.actor} />\n                      )}\n                    </div>\n                    <NameContainer>\n                      <Name data-test-id=\"actor-name\">\n                        {entry.actor.isSuperuser\n                          ? t('%s (Sentry Staff)', entry.actor.name)\n                          : entry.actor.name}\n                      </Name>\n                      <Note>{entry.note}</Note>\n                    </NameContainer>\n                  </UserInfo>\n                  <div>\n                    <MonoDetail>{entry.event}</MonoDetail>\n                  </div>\n                  <TimestampOverflow>\n                    <Tooltip\n                      title={entry.ipAddress}\n                      disabled={entry.ipAddress && entry.ipAddress.length <= ipv4Length}\n                    >\n                      <MonoDetail>{entry.ipAddress}</MonoDetail>\n                    </Tooltip>\n                  </TimestampOverflow>\n                  <TimestampInfo>\n                    <DateTime dateOnly date={entry.dateCreated} />\n                    <DateTime timeOnly format=\"LT zz\" date={entry.dateCreated} />\n                  </TimestampInfo>\n                </StyledPanelItem>\n              ))}\n          </PanelBody>\n        </Panel>\n        {pageLinks && <Pagination pageLinks={pageLinks} {...this.props} />}\n      </div>\n    );\n  }\n}\n\nconst UserInfo = styled('div')`\n  display: flex;\n  line-height: 1.2;\n  font-size: 13px;\n  flex: 1;\n`;\n\nconst NameContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Name = styled('div')`\n  font-weight: 600;\n  font-size: 15px;\n`;\nconst Note = styled('div')`\n  font-size: 13px;\n  word-break: break-word;\n`;\nconst TimestampOverflow = styled('div')`\n  ${overflowEllipsis};\n`;\n\nconst MonoDetail = styled('code')`\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst StyledPanelHeader = styled(PanelHeader)`\n  display: grid;\n  grid-template-columns: 1fr max-content 130px 150px;\n  grid-column-gap: ${space(2)};\n  padding: ${space(2)};\n`;\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: 1fr max-content 130px 150px;\n  grid-column-gap: ${space(2)};\n  padding: ${space(2)};\n`;\n\nconst TimestampInfo = styled('div')`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-gap: ${space(1)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nexport default AuditLogList;\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport AsyncView from 'app/views/asyncView';\nimport SentryTypes from 'app/sentryTypes';\nimport {t} from 'app/locale';\nimport routeTitleGen from 'app/utils/routeTitle';\n\nimport AuditLogList from './auditLogList';\n\nconst EVENT_TYPES = [\n  'member.invite',\n  'member.add',\n  'member.accept-invite',\n  'member.remove',\n  'member.edit',\n  'member.join-team',\n  'member.leave-team',\n  'member.pending',\n  'team.create',\n  'team.edit',\n  'team.remove',\n  'project.create',\n  'project.edit',\n  'project.remove',\n  'project.set-public',\n  'project.set-private',\n  'project.request-transfer',\n  'project.accept-transfer',\n  'org.create',\n  'org.edit',\n  'org.remove',\n  'org.restore',\n  'tagkey.remove',\n  'projectkey.create',\n  'projectkey.edit',\n  'projectkey.remove',\n  'projectkey.enable',\n  'projectkey.disable',\n  'sso.enable',\n  'sso.disable',\n  'sso.edit',\n  'sso-identity.link',\n  'api-key.create',\n  'api-key.edit',\n  'api-key.remove',\n  'rule.create',\n  'rule.edit',\n  'rule.remove',\n  'servicehook.create',\n  'servicehook.edit',\n  'servicehook.remove',\n  'servicehook.enable',\n  'servicehook.disable',\n  'integration.add',\n  'integration.edit',\n  'integration.remove',\n  'ondemand.edit',\n  'trial.started',\n  'plan.changed',\n  'plan.cancelled',\n].sort();\n\nclass OrganizationAuditLog extends AsyncView {\n  static propTypes = {\n    routes: PropTypes.array,\n  };\n\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  getEndpoints() {\n    return [\n      [\n        'entryList',\n        `/organizations/${this.props.params.orgId}/audit-logs/`,\n        {\n          query: this.props.location.query,\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('Audit Log'), this.context.organization.slug, false);\n  }\n\n  handleEventSelect = value => {\n    // Dont update if event has not changed\n    if (this.props.location.query.event === value) {\n      return;\n    }\n\n    browserHistory.push({\n      pathname: this.props.location.pathname,\n      search: `?event=${value}`,\n    });\n  };\n\n  renderBody() {\n    const currentEventType = this.props.location.query.event;\n\n    return (\n      <AuditLogList\n        entries={this.state.entryList}\n        pageLinks={this.state.pageLinks}\n        eventType={currentEventType}\n        eventTypes={EVENT_TYPES}\n        onEventSelect={this.handleEventSelect}\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport default OrganizationAuditLog;\n"],"sourceRoot":""}