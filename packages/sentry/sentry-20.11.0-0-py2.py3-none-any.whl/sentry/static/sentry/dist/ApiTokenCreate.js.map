{"version":3,"sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/components/forms/apiForm.jsx","webpack:///./app/views/settings/components/forms/controls/multipleCheckbox.jsx","webpack:///./app/views/settings/account/apiNewToken.tsx"],"names":["SettingsPageHeading","this","props","icon","title","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","ApiForm","context","onSubmit","data","onSuccess","onError","addLoadingMessage","t","api","request","apiEndpoint","method","apiMethod","success","clearIndicators","error","Client","clear","otherProps","MultipleCheckboxWrapper","Label","CheckboxLabel","MultipleCheckbox","onChange","selectedValue","e","value","target","checked","filter","v","disabled","choices","map","choiceValue","choiceLabel","key","width","type","bind","defined","indexOf","SORTED_DEFAULT_API_ACCESS_SCOPES","DEFAULT_API_ACCESS_SCOPES","sort","API_CHOICES","API_ACCESS_SCOPES","s","API_INDEX_ROUTE","ApiNewToken","onCancel","browserHistory","push","onSubmitSuccess","tct","link","href","initialData","scopes","footerStyle","marginTop","paddingRight","submitLabel","name","label","inline","required"],"mappings":"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","file":"ApiTokenCreate.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {Client} from 'app/api';\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport Form from 'app/views/settings/components/forms/form';\n\nexport default class ApiForm extends React.Component {\n  static propTypes = {\n    ...Form.propTypes,\n    onSubmit: PropTypes.func,\n    apiMethod: PropTypes.string.isRequired,\n    apiEndpoint: PropTypes.string.isRequired,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.api = new Client();\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  onSubmit = (data, onSuccess, onError) => {\n    this.props.onSubmit && this.props.onSubmit(data);\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(this.props.apiEndpoint, {\n      method: this.props.apiMethod,\n      data,\n      success: (...args) => {\n        clearIndicators();\n        onSuccess(...args);\n      },\n      error: (...args) => {\n        clearIndicators();\n        onError(...args);\n      },\n    });\n  };\n\n  render() {\n    const {\n      onSubmit: _onSubmit,\n      apiMethod: _apiMethod,\n      apiEndpoint: _apiEndpoint,\n      ...otherProps\n    } = this.props;\n\n    return <Form onSubmit={this.onSubmit} {...otherProps} />;\n  }\n}\n","import {Box} from 'reflexbox';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {defined} from 'app/utils';\n\nconst MultipleCheckboxWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled('span')`\n  margin-left: 3px;\n`;\n\nexport default class MultipleCheckbox extends React.Component {\n  static propTypes = {\n    value: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    choices: PropTypes.array.isRequired,\n  };\n\n  onChange = (selectedValue, e) => {\n    const {value, onChange} = this.props;\n    let newValue;\n\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (e.target.checked) {\n      newValue = value ? [...value, selectedValue] : [value];\n    } else {\n      newValue = value.filter(v => v !== selectedValue);\n    }\n\n    onChange(newValue, e);\n  };\n\n  render() {\n    const {disabled, choices, value} = this.props;\n\n    return (\n      <MultipleCheckboxWrapper>\n        {choices.map(([choiceValue, choiceLabel]) => (\n          <Box key={choiceValue} width={[1, 1 / 2, 1 / 3, 1 / 4]}>\n            <Label>\n              <input\n                type=\"checkbox\"\n                value={choiceValue}\n                onChange={this.onChange.bind(this, choiceValue)}\n                disabled={disabled}\n                checked={defined(value) && value.indexOf(choiceValue) !== -1}\n              />\n              <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n            </Label>\n          </Box>\n        ))}\n      </MultipleCheckboxWrapper>\n    );\n  }\n}\n","import {browserHistory} from 'react-router';\nimport DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport {API_ACCESS_SCOPES, DEFAULT_API_ACCESS_SCOPES} from 'app/constants';\nimport {t, tct} from 'app/locale';\nimport ApiForm from 'app/views/settings/components/forms/apiForm';\nimport FormField from 'app/views/settings/components/forms/formField';\nimport MultipleCheckbox from 'app/views/settings/components/forms/controls/multipleCheckbox';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nconst SORTED_DEFAULT_API_ACCESS_SCOPES = DEFAULT_API_ACCESS_SCOPES.sort();\nconst API_CHOICES = API_ACCESS_SCOPES.map(s => [s, s]);\nconst API_INDEX_ROUTE = '/settings/account/api/auth-tokens/';\n\nexport default class ApiNewToken extends React.Component {\n  onCancel = () => {\n    browserHistory.push(API_INDEX_ROUTE);\n  };\n\n  onSubmitSuccess = () => {\n    browserHistory.push(API_INDEX_ROUTE);\n  };\n\n  render() {\n    return (\n      <DocumentTitle title=\"Create API Token - Sentry\">\n        <div>\n          <SettingsPageHeader title={t('Create New Token')} />\n          <TextBlock>\n            {t(\n              \"Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.\"\n            )}\n          </TextBlock>\n          <TextBlock>\n            {tct(\n              'For more information on how to use the web API, see our [link:documentation].',\n              {\n                link: <a href=\"https://docs.sentry.io/api/\" />,\n              }\n            )}\n          </TextBlock>\n          <Panel>\n            <PanelHeader>{t('Create New Token')}</PanelHeader>\n            <ApiForm\n              apiMethod=\"POST\"\n              apiEndpoint=\"/api-tokens/\"\n              initialData={{scopes: SORTED_DEFAULT_API_ACCESS_SCOPES}}\n              onSubmitSuccess={this.onSubmitSuccess}\n              onCancel={this.onCancel}\n              footerStyle={{\n                marginTop: 0,\n                paddingRight: 20,\n              }}\n              submitLabel={t('Create Token')}\n            >\n              <PanelBody>\n                <FormField name=\"scopes\" label={t('Scopes')} inline={false} required>\n                  {({value, onChange}) => (\n                    <MultipleCheckbox\n                      onChange={onChange}\n                      value={value}\n                      choices={API_CHOICES}\n                    />\n                  )}\n                </FormField>\n              </PanelBody>\n            </ApiForm>\n          </Panel>\n        </div>\n      </DocumentTitle>\n    );\n  }\n}\n"],"sourceRoot":""}