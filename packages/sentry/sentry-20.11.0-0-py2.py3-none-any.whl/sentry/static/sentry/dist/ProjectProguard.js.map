{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/components/fileSize.tsx","webpack:///./app/components/acl/role.tsx","webpack:///./app/views/settings/projectDebugFiles/types.tsx","webpack:///./app/views/settings/projectDebugFiles/utils.tsx","webpack:///./app/views/settings/projectDebugFiles/debugFileRow.tsx","webpack:///./app/views/settings/projectProguard/projectProguard.tsx","webpack:///./app/views/settings/projectProguard/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","SearchBar","state","query","defaultQuery","dropdownVisible","searchInputRef","createRef","blur","current","onSubmit","evt","preventDefault","onSearch","clearSearch","setState","callIfFunction","onChange","onQueryFocus","onQueryBlur","onQueryChange","value","target","nextProps","className","width","classNames","Input","type","placeholder","name","ref","autoComplete","onBlur","StyledIconSearch","size","color","SearchClearButton","priority","onClick","label","t","PureComponent","undefined","IconSearch","Button","theme","fontSizeLarge","gray200","gray300","FileSize","bytes","getDynamicText","formatBytes","fixed","Role","user","ConfigStore","get","organization","role","availableRoles","currentRole","isSuperuser","Array","isArray","roleIds","map","r","id","includes","requiredIndex","indexOf","children","hasRole","isRenderFunc","withOrganization","DebugFileType","DebugFileFeature","getFeatureTooltip","feature","SYMTAB","DEBUG","UNWIND","SOURCES","DebugFileRow","debugFile","showDetails","downloadUrl","downloadRole","onDelete","data","debugId","uuid","dateCreated","objectName","cpuName","symbolType","codeId","fileType","dsym","EXE","DBG","LIB","getFileType","features","Fragment","Column","DebugId","TimeAndSizeWrapper","StyledFileSize","TimeWrapper","date","Name","Description","key","inline","Details","DetailsItem","RightColumn","gap","disabled","href","access","hasAccess","confirmText","message","onConfirm","data-test-id","fontSizeSmall","subText","fontSizeMedium","breakpoints","overflowEllipsis","ProjectProguard","handleDelete","params","orgId","projectId","loading","api","request","encodeURIComponent","method","complete","fetchData","handleSearch","location","router","push","cursor","mappings","file_formats","getQuery","renderBody","length","mapping","baseUrl","debugFilesRole","mappingsPageLinks","Wrapper","noMargin","Filters","Label","checked","e","StyledPanelTable","headers","Actions","emptyMessage","getEmptyMessage","isEmpty","isLoading","renderMappings","pageLinks","PanelTable","ProjectProguardContainer","renderDisabled","renderNoAccess"],"mappings":"6qBAQqBA,E,uIAKjB,MAAO,K,+BAIP,IAAMC,EAAQC,KAAKC,WACnB,OACE,YAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,WACjBC,KAAKE,uB,GATJC,KAHWL,E,8nBCiBfM,E,qIAcK,MACsDJ,KAAKK,MAA3DC,EADA,EACAA,KAAMP,EADN,EACMA,MAAOQ,EADb,EACaA,OAAQC,EADrB,EACqBA,KAAMC,EAD3B,EAC2BA,cAAkBJ,EAD7C,wDAEP,OACE,kBAASA,EACP,YAACK,EAAD,KACGJ,GAAQ,YAACK,EAAD,KAAOL,GACfP,GACC,YAACa,EAAD,CAAOJ,KAAMA,EAAMK,OAAQJ,GACzB,YAAC,IAAD,KAAcV,IAGjBQ,GAAU,YAACO,EAAD,CAAQN,KAAMA,GAAOD,IAGjCC,GAAQ,uBAAMA,Q,GA5BWO,IAAMC,WAAlCZ,E,kCAAAA,EAUGa,aAAe,CACpBR,eAAe,GA4BnB,IAAMC,EAAkB,YAAO,MAAP,8CAAH,2DAKfE,EAAQ,YAAO,MAAP,qCACV,SAAAM,GAAC,OACAA,EAAEL,QAAH,mDAFO,YAMC,SAAAK,GAAC,OACTA,EAAEV,KAAF,UACOW,YAAM,GADb,YACmBA,YAAM,GADzB,YAC+BA,YAAM,GADrC,gBAEOA,YAAM,GAFb,YAEmBA,YAAM,GAFzB,YAE+BA,YAAM,GAFrC,QAPO,YAaLR,EAAO,YAAO,MAAP,mCAAH,gBACQQ,YAAM,GADd,KAIJL,EAAS,YAAO,MAAP,sCACX,SAAAI,GAAC,OAAKA,EAAEV,KAAF,sBAAwBW,YAAM,IAAO,OADnC,KAINC,EAA4B,YAAOhB,EAAP,wDAAH,8BAIde,YAAM,GAJQ,KAOhBC,O,kCCxFAC,IATf,SACEC,EACAC,GAEQ,IADRC,IACQ,yDACFC,EAAO,GAAH,OAAMH,EAAN,cAAqBC,GAC/B,OAAOC,EAAa,GAAH,OAAMC,EAAN,aAAwBA,I,6nBCsBrCC,E,kLAOJC,MAAQ,CACNC,MAAO,EAAKvB,MAAMuB,OAAS,EAAKvB,MAAMwB,aACtCC,iBAAiB,G,EAWnBC,eAAiBhB,IAAMiB,Y,EAEvBC,KAAO,WACD,EAAKF,eAAeG,SACtB,EAAKH,eAAeG,QAAQD,Q,EAIhCE,SAAW,SAACC,GACVA,EAAIC,iBACJ,EAAKJ,OACL,EAAK5B,MAAMiC,SAAS,EAAKX,MAAMC,Q,EAGjCW,YAAc,WACZ,EAAKC,SAAS,CAACZ,MAAO,EAAKvB,MAAMwB,eAAe,WAC9C,EAAKxB,MAAMiC,SAAS,EAAKX,MAAMC,OAC/Ba,YAAe,EAAKpC,MAAMqC,SAAU,EAAKf,MAAMC,W,EAInDe,aAAe,WACb,EAAKH,SAAS,CACZV,iBAAiB,K,EAIrBc,YAAc,WACZ,EAAKJ,SAAS,CAACV,iBAAiB,K,EAGlCe,cAAgB,SAACT,GAA6C,IACrDU,EAASV,EAAIW,OAAbD,MAEP,EAAKN,SAAS,CAACZ,MAAOkB,IACtBL,YAAe,EAAKpC,MAAMqC,SAAUI,I,uEA3CLE,GAC3BA,EAAUpB,QAAU5B,KAAKK,MAAMuB,OACjC5B,KAAKwC,SAAS,CACZZ,MAAOoB,EAAUpB,U,+BA2Cd,MACoB5B,KAAKK,MAAzB4C,EADA,EACAA,UAAWC,EADX,EACWA,MAElB,OACE,mBAAKD,UAAWE,IAAW,SAAUF,IACnC,oBAAMA,UAAU,kBAAkBd,SAAUnC,KAAKmC,UAC/C,uBACE,YAACiB,EAAD,CACEC,KAAK,OACLJ,UAAU,4BACVK,YAAatD,KAAKK,MAAMiD,YACxBC,KAAK,QACLC,IAAKxD,KAAK+B,eACV0B,aAAa,MACbX,MAAO9C,KAAK2B,MAAMC,MAClB8B,OAAQ1D,KAAK4C,YACbF,SAAU1C,KAAK6C,cACfK,MAAOA,IAET,YAACS,EAAD,CAAkBV,UAAU,oBAAoBW,KAAK,KAAKC,MAAM,YAC/D7D,KAAK2B,MAAMC,QAAU5B,KAAKK,MAAMwB,cAC/B,YAACiC,EAAD,CACET,KAAK,SACLJ,UAAU,oBACVc,SAAS,OACTC,QAAShE,KAAKuC,YACdqB,KAAK,SACLtD,KAAM,YAAC,IAAD,MACN2D,MAAOC,YAAE,kB,GAtFDnD,IAAMoD,eAAxBzC,E,wBAAAA,EACGT,aAA6B,CAClCW,MAAO,GACPC,aAAc,GACdS,SAAU,cA4Fd,IAAMc,EAAQ,YAAO,QAAP,mCAAH,UACA,SAAAlC,GAAC,OAAKA,EAAEgC,MAAQhC,EAAEgC,WAAQkB,IAD1B,KAILT,EAAmB,YAAOU,KAAP,8CAAH,0FAOhBP,EAAoB,YAAOQ,IAAP,+CAAH,0FAMR,SAAApD,GAAC,OAAIA,EAAEqD,MAAMC,gBANL,WAOZ,SAAAtD,GAAC,OAAIA,EAAEqD,MAAME,UAPD,mBAUV,SAAAvD,GAAC,OAAIA,EAAEqD,MAAMG,UAVH,MAcRhD,O,kCCpJf,iCAUA,SAASiD,EAAStE,GAAc,IACvB4C,EAAoB5C,EAApB4C,UAAW2B,EAASvE,EAATuE,MAElB,OACE,oBAAM3B,UAAWA,GACd4B,YAAe,CAAC/B,MAAOgC,YAAYF,GAAQG,MAAO,WALhDJ,E,uBAeMA,O,+kBCMTK,E,sIACM,MACFC,EAAOC,UAAYC,IAAI,QADrB,EAEqBnF,KAAKK,MAA3B+E,EAFC,EAEDA,aAAcC,EAFb,EAEaA,KACdC,EAAkBF,EAAlBE,eACDC,EAAW,UAAGH,EAAaC,YAAhB,QAAwB,GAEzC,IAAKJ,EACH,OAAO,EAGT,GAAIA,EAAKO,YACP,OAAO,EAGT,IAAKC,MAAMC,QAAQJ,GACjB,OAAO,EAGT,IAAMK,EAAUL,EAAeM,KAAI,SAAAC,GAAC,OAAIA,EAAEC,MAE1C,IAAKH,EAAQI,SAASV,KAAUM,EAAQI,SAASR,GAC/C,OAAO,EAGT,IAAMS,EAAgBL,EAAQM,QAAQZ,GAEtC,OADqBM,EAAQM,QAAQV,IACdS,I,+BAGhB,IACAE,EAAYlG,KAAKK,MAAjB6F,SACDC,EAAUnG,KAAKmG,UAErB,OAAIC,YAA+BF,GAC1BA,EAAS,CAACC,YAGZA,GAAWD,EAAWA,EAAW,S,GAtCzBnF,IAAMC,WAAnBgE,E,mBA0CSqB,gBAAiBrB,I,sCC1EpBsB,EAMAC,E,sICWL,SAASC,EAAkBC,GAChC,OAAQA,GACN,KAAKF,EAAiBG,OACpB,OAAOxC,YACL,qFAEJ,KAAKqC,EAAiBI,MACpB,OAAOzC,YACL,8FAEJ,KAAKqC,EAAiBK,OACpB,OAAO1C,YACL,6FAEJ,KAAKqC,EAAiBM,QACpB,OAAO3C,YACL,yFAEJ,QACE,OAAO,O,SDpCDoC,K,UAAAA,E,UAAAA,E,WAAAA,M,cAMAC,K,gBAAAA,E,cAAAA,E,gBAAAA,E,mBAAAA,M,gBEsBNO,EAAe,SAAC,GAMT,IALXC,EAKW,EALXA,UACAC,EAIW,EAJXA,YACAC,EAGW,EAHXA,YACAC,EAEW,EAFXA,aACAC,EACW,EADXA,SAGErB,EAUEiB,EAVFjB,GACAsB,EASEL,EATFK,KACAC,EAQEN,EARFM,QACAC,EAOEP,EAPFO,KACA1D,EAMEmD,EANFnD,KACA2D,EAKER,EALFQ,YACAC,EAIET,EAJFS,WACAC,EAGEV,EAHFU,QACAC,EAEEX,EAFFW,WACAC,EACEZ,EADFY,OAEIC,ED3CD,SAAqBC,GAAiB,MAC3C,iBAAQA,EAAKT,YAAb,aAAQ,EAAW/D,MACjB,KAAKiD,EAAcwB,IACjB,OAAO5D,YAAE,cACX,KAAKoC,EAAcyB,IACjB,OAAO7D,YAAE,mBACX,KAAKoC,EAAc0B,IACjB,OAAO9D,YAAE,mBACX,QACE,OAAO,MCkCM+D,CAAYlB,GACtBmB,GAAYd,GAAQ,IAApBc,SAEP,OACE,YAAC,IAAMC,SAAP,KACE,YAACC,EAAD,KACE,uBACE,YAACC,EAAD,KAAUhB,GAAWC,IAEvB,YAACgB,EAAD,KACE,YAACC,EAAD,CAAgB3D,MAAOhB,IACvB,YAAC4E,EAAD,KACE,YAAC,IAAD,CAAW5E,KAAK,OAChB,YAAC,IAAD,CAAW6E,KAAMlB,OAIvB,YAACa,EAAD,KACE,YAACM,EAAD,KACkB,aAAfhB,GAA4C,qBAAfF,EAC1B,IACAA,GAEN,YAACmB,EAAD,KACkB,aAAfjB,GAAyC,QAAZD,EAC1BvD,YAAE,oBADL,UAEMuD,EAFN,aAEkBC,GAFlB,OAE+BE,EAAW,IAAH,OAAOA,GAAa,GAF3D,KAIAM,GACCA,EAAStC,KAAI,SAAAa,GAAO,OAClB,YAAC,IAAD,CAASmC,IAAKnC,EAAS1G,MAAOyG,EAAkBC,IAC9C,YAAC,IAAD,CAAKoC,QAAM,GAAEpC,OAGlBO,GACC,YAAC8B,EAAD,KAEGnB,GACC,YAACoB,EAAD,KACG7E,YAAE,WADL,KACmByD,MAO7B,YAACqB,EAAD,KACE,YAAC,IAAD,CAAWC,IAAK,IACd,YAAC,IAAD,CAAM5D,KAAM6B,IACT,gBAAEf,EAAF,EAAEA,QAAF,OACC,YAAC,IAAD,CACE+C,SAAU/C,EACVpG,MAAOmE,YAAE,wDAET,YAAC,IAAD,CACEN,KAAK,SACLtD,KAAM,YAAC,IAAD,CAAcsD,KAAK,OACzBuF,KAAMlC,EACNiC,UAAW/C,GAEVjC,YAAE,iBAKX,YAAC,IAAD,CAAQkF,OAAQ,CAAC,mBACd,gBAAEC,EAAF,EAAEA,UAAF,OACC,YAAC,IAAD,CACEH,SAAUG,EACVtJ,MAAOmE,YAAE,sDAET,YAAC,IAAD,CACEoF,YAAapF,YAAE,UACfqF,QAASrF,YAAE,8CACXsF,UAAW,kBAAMrC,EAASrB,IAC1BoD,UAAWG,GAEX,YAAC,IAAD,CACEtF,SAAS,SACTzD,KAAM,YAAC,IAAD,CAAYsD,KAAK,OACvBA,KAAK,SACLsF,UAAWG,EACXI,eAAa,wBArG3B3C,E,2BAiHN,IAAMsB,EAAS,YAAO,MAAP,oCAAH,sFAMNY,EAAc,YAAO,MAAP,yCAAH,2EAID7H,YAAM,GAJL,KAOXkH,EAAU,YAAO,OAAP,qCAAH,cACE,SAAAnH,GAAC,OAAIA,EAAEqD,MAAMmF,gBADf,KAIPpB,EAAqB,YAAO,MAAP,gDAAH,sCAGT,SAAApH,GAAC,OAAIA,EAAEqD,MAAMmF,gBAHJ,eAIRvI,YAAM,GAJE,WAKb,SAAAD,GAAC,OAAIA,EAAEqD,MAAMoF,UALA,wBASlBpB,EAAiB,YAAO5D,IAAP,4CAAH,uBAEFxD,YAAM,IAFJ,KAKdqH,EAAc,YAAO,MAAP,yCAAH,yBAEHrH,YAAM,IAFH,iFAMCA,YAAM,IANP,KASXuH,EAAO,YAAO,MAAP,kCAAH,cACK,SAAAxH,GAAC,OAAIA,EAAEqD,MAAMqF,iBADlB,kBAESzI,YAAM,GAFf,KAKJwH,EAAc,YAAO,MAAP,yCAAH,cACF,SAAAzH,GAAC,OAAIA,EAAEqD,MAAMmF,gBADX,WAEN,SAAAxI,GAAC,OAAIA,EAAEqD,MAAMoF,UAFP,uBAGM,SAAAzI,GAAC,OAAIA,EAAEqD,MAAMsF,YAAY,KAH/B,uBAQXf,EAAU,YAAO,MAAP,uCAEVC,EAAc,YAAO,MAAP,yCAChBe,IADa,eAED3I,YAAM,IAGP2F,O,mzCC5KTiD,E,kLA8BJC,aAAe,SAAClE,GAAe,MACF,EAAKzF,MAAM4J,OAA/BC,EADsB,EACtBA,MAAOC,EADe,EACfA,UAEd,EAAK3H,SAAS,CACZ4H,SAAS,IAGX,EAAKC,IAAIC,QAAT,oBACeJ,EADf,YACwBC,EADxB,4BACqDI,mBAAmBzE,IACtE,CACE0E,OAAQ,SACRC,SAAU,kBAAM,EAAKC,gB,EAK3BC,aAAe,SAAC/I,GAAkB,MACL,EAAKvB,MAAzBuK,EADyB,EACzBA,SADyB,EACfC,OAEVC,KAAP,OACKF,GADL,IAEEhJ,MAAO,EAAF,KAAMgJ,EAAShJ,OAAf,IAAsBmJ,YAAQ3G,EAAWxC,c,iDAlDvC,IACFuI,EAAanK,KAAKK,MAAM4J,OAAxBE,UAEP,OAAO9I,YAAc6C,YAAE,qBAAsBiG,GAAW,K,wCAIxD,2EAEEa,SAAU,GACVhE,aAAa,M,qCAIF,MACchH,KAAKK,MAAzB4J,EADM,EACNA,OAAQW,EADF,EACEA,SACRV,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,UAUd,MARyD,CACvD,CACE,WADF,oBAEeD,EAFf,YAEwBC,EAFxB,iBAGE,CAACvI,MAAO,CAACA,MAAOgJ,EAAShJ,MAAMA,MAAOqJ,aAAc,iB,iCAgC/C,IACFrJ,EAAS5B,KAAKK,MAAMuK,SAAShJ,MAA7BA,MAEP,MAAwB,iBAAVA,EAAqBA,OAAQwC,I,wCAI3C,OAAIpE,KAAKkL,WACAhH,YAAE,iDAGJA,YAAE,6C,sCAIT,OAAOlE,KAAKmL,e,uCAGG,aACiBnL,KAAK2B,MAA9BqJ,EADQ,EACRA,SAAUhE,EADF,EACEA,YADF,EAEgBhH,KAAKK,MAA7B+E,EAFQ,EAERA,aAAc6E,EAFN,EAEMA,OACdC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,UAEd,OAAKa,aAAD,EAACA,EAAUI,QAIRJ,EAASpF,KAAI,SAAAyF,GAClB,IAAMpE,EAAc,GAAH,OACf,EAAKoD,IAAIiB,QADM,qBAEJpB,EAFI,YAEKC,EAFL,4BAEkCI,mBAAmBc,EAAQvF,KAE9E,OACE,YAAC,IAAD,CACEiB,UAAWsE,EACXrE,YAAaA,EACbC,YAAaA,EACbC,aAAc9B,EAAamG,eAC3BpE,SAAU,EAAK6C,aACfpB,IAAKyC,EAAQvF,QAfV,O,mCAqBE,aACiD9F,KAAK2B,MAA1DyI,EADI,EACJA,QAASpD,EADL,EACKA,YAAagE,EADlB,EACkBA,SAAUQ,EAD5B,EAC4BA,kBAEvC,OACE,YAAC,IAAMrD,SAAP,KACE,YAAC,IAAD,CAAoBpI,MAAOmE,YAAE,uBAE7B,YAAC,IAAD,KACGA,YAAE,uHAKL,YAACuH,EAAD,KACE,YAAC,IAAD,CAAWC,UAAQ,GAAExH,YAAE,qBAAvB,KAEA,YAACyH,EAAD,KACE,YAACC,EAAD,KACE,YAAC,IAAD,CACEC,QAAS7E,EACTtE,SAAU,SAAAoJ,GACR,EAAKtJ,SAAS,CAACwE,YAAc8E,EAAE/I,OAA4B8I,aAG9D3H,YAAE,iBAGL,YAAC,IAAD,CACEZ,YAAaY,YAAE,mBACf5B,SAAUtC,KAAK2K,aACf/I,MAAO5B,KAAKkL,eAKlB,YAACa,EAAD,CACEC,QAAS,CACP9H,YAAE,YACFA,YAAE,eACF,YAAC+H,EAAD,CAASrD,IAAI,WAAW1E,YAAE,aAE5BgI,aAAclM,KAAKmM,kBACnBC,QAA8B,KAArBpB,aAAA,EAAAA,EAAUI,QACnBiB,UAAWjC,GAEVpK,KAAKsM,kBAER,YAAC,IAAD,CAAYC,UAAWf,S,GAnJD1L,KAyJxBiM,EAAmB,YAAOS,IAAP,8CAAH,+DAIhBP,EAAU,YAAO,MAAP,qCAAH,4CAIPR,EAAU,YAAO,MAAP,qCAAH,wDAGCtK,YAAM,GAHP,kCAKGA,YAAM,GALT,kBAMMA,YAAM,GANZ,uBAOU,SAAAD,GAAC,OAAIA,EAAEqD,MAAMsF,YAAY,KAPnC,qBAYP8B,EAAU,YAAO,MAAP,qCAAH,2HAKCxK,YAAM,GALP,uBAMU,SAAAD,GAAC,OAAIA,EAAEqD,MAAMsF,YAAY,KANnC,6CAWP+B,EAAQ,YAAO,QAAP,mCAAH,sGAOSzK,YAAM,GAPf,MAWI4I,I,4aCrNT0C,E,6IAMF,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAOpJ,KAAK,WAAWa,YAAE,6C,+BAKtB,IACAkB,EAAgBpF,KAAKK,MAArB+E,aAEP,OACE,YAAC,IAAD,CACE8C,SAAU,CAAC,oBACX9C,aAAcA,EACdsH,eAAgB1M,KAAK2M,gBAErB,YAAC,EAAoB3M,KAAKK,Y,GAtBKU,IAAMC,WAAvCyL,E,uCA4BSpG,sBAAiBoG","file":"ProjectProguard.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport {t} from 'app/locale';\nimport {IconClose} from 'app/icons/iconClose';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport Button from 'app/components/button';\nimport {IconSearch} from 'app/icons';\n\ntype DefaultProps = {\n  query: string;\n  defaultQuery: string;\n  onSearch: (query: string) => void;\n};\n\ntype Props = DefaultProps & {\n  placeholder?: string;\n  className?: string;\n  onChange?: (query: string) => void;\n  width?: string;\n};\n\ntype State = {\n  query: string;\n  dropdownVisible: boolean;\n};\n\nclass SearchBar extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    query: '',\n    defaultQuery: '',\n    onSearch: function () {},\n  };\n\n  state = {\n    query: this.props.query || this.props.defaultQuery,\n    dropdownVisible: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  searchInputRef = React.createRef<HTMLInputElement>();\n\n  blur = () => {\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.blur();\n    }\n  };\n\n  onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () => {\n      this.props.onSearch(this.state.query);\n      callIfFunction(this.props.onChange, this.state.query);\n    });\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = evt.target;\n\n    this.setState({query: value});\n    callIfFunction(this.props.onChange, value);\n  };\n\n  render() {\n    const {className, width} = this.props;\n\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <Input\n              type=\"text\"\n              className=\"search-input form-control\"\n              placeholder={this.props.placeholder}\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n              width={width}\n            />\n            <StyledIconSearch className=\"search-input-icon\" size=\"sm\" color=\"gray300\" />\n            {this.state.query !== this.props.defaultQuery && (\n              <SearchClearButton\n                type=\"button\"\n                className=\"search-clear-form\"\n                priority=\"link\"\n                onClick={this.clearSearch}\n                size=\"xsmall\"\n                icon={<IconClose />}\n                label={t('Clear')}\n              />\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst Input = styled('input')`\n  width: ${p => (p.width ? p.width : undefined)};\n`;\n\nconst StyledIconSearch = styled(IconSearch)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 14px;\n`;\n\nconst SearchClearButton = styled(Button)`\n  position: absolute;\n  top: 50%;\n  height: 16px;\n  transform: translateY(-50%);\n  right: 10px;\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.gray200};\n\n  &:hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nexport default SearchBar;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {formatBytes} from 'app/utils';\nimport getDynamicText from 'app/utils/getDynamicText';\n\ntype Props = {\n  className?: string;\n  bytes: number;\n};\n\nfunction FileSize(props: Props) {\n  const {className, bytes} = props;\n\n  return (\n    <span className={className}>\n      {getDynamicText({value: formatBytes(bytes), fixed: 'xx KB'})}\n    </span>\n  );\n}\n\nFileSize.propTypes = {\n  className: PropTypes.string,\n  bytes: PropTypes.number.isRequired,\n};\n\nexport default FileSize;\n","import React from 'react';\n\nimport {Organization} from 'app/types';\nimport ConfigStore from 'app/stores/configStore';\nimport withOrganization from 'app/utils/withOrganization';\nimport {isRenderFunc} from 'app/utils/isRenderFunc';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactNode;\n\ntype Props = {\n  /**\n   * Minimum required role\n   */\n  role: string;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactNode | ChildrenRenderFn;\n};\n\nclass Role extends React.Component<Props> {\n  hasRole() {\n    const user = ConfigStore.get('user');\n    const {organization, role} = this.props;\n    const {availableRoles} = organization;\n    const currentRole = organization.role ?? '';\n\n    if (!user) {\n      return false;\n    }\n\n    if (user.isSuperuser) {\n      return true;\n    }\n\n    if (!Array.isArray(availableRoles)) {\n      return false;\n    }\n\n    const roleIds = availableRoles.map(r => r.id);\n\n    if (!roleIds.includes(role) || !roleIds.includes(currentRole)) {\n      return false;\n    }\n\n    const requiredIndex = roleIds.indexOf(role);\n    const currentIndex = roleIds.indexOf(currentRole);\n    return currentIndex >= requiredIndex;\n  }\n\n  render() {\n    const {children} = this.props;\n    const hasRole = this.hasRole();\n\n    if (isRenderFunc<ChildrenRenderFn>(children)) {\n      return children({hasRole});\n    }\n\n    return hasRole && children ? children : null;\n  }\n}\n\nexport default withOrganization(Role);\n","export enum DebugFileType {\n  EXE = 'exe',\n  DBG = 'dbg',\n  LIB = 'lib',\n}\n\nexport enum DebugFileFeature {\n  SYMTAB = 'symtab',\n  DEBUG = 'debug',\n  UNWIND = 'unwind',\n  SOURCES = 'sources',\n}\n\nexport type BuiltinSymbolSource = {\n  hidden: boolean;\n  id: string;\n  name: string;\n  sentry_key: string;\n};\n\nexport type DebugFile = {\n  codeId: string;\n  cpuName: string;\n  dateCreated: string;\n  debugId: string;\n  headers: Record<string, string>;\n  id: string;\n  objectName: string;\n  sha1: string;\n  size: number;\n  symbolType: string;\n  uuid: string;\n  data?: {type: DebugFileType; features: DebugFileFeature[]};\n};\n","import {t} from 'app/locale';\n\nimport {DebugFile, DebugFileFeature, DebugFileType} from './types';\n\nexport function getFileType(dsym: DebugFile) {\n  switch (dsym.data?.type) {\n    case DebugFileType.EXE:\n      return t('executable');\n    case DebugFileType.DBG:\n      return t('debug companion');\n    case DebugFileType.LIB:\n      return t('dynamic library');\n    default:\n      return null;\n  }\n}\n\nexport function getFeatureTooltip(feature: DebugFileFeature) {\n  switch (feature) {\n    case DebugFileFeature.SYMTAB:\n      return t(\n        'Symbol tables are used as a fallback when full debug information is not available'\n      );\n    case DebugFileFeature.DEBUG:\n      return t(\n        'Debug information provides function names and resolves inlined frames during symbolication'\n      );\n    case DebugFileFeature.UNWIND:\n      return t(\n        'Stack unwinding information improves the quality of stack traces extracted from minidumps'\n      );\n    case DebugFileFeature.SOURCES:\n      return t(\n        'Source code information allows Sentry to display source code context for stack frames'\n      );\n    default:\n      return null;\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport TimeSince from 'app/components/timeSince';\nimport Tooltip from 'app/components/tooltip';\nimport Tag from 'app/components/tagDeprecated';\nimport FileSize from 'app/components/fileSize';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport {IconDelete, IconClock, IconDownload} from 'app/icons';\nimport Access from 'app/components/acl/access';\nimport Role from 'app/components/acl/role';\nimport ButtonBar from 'app/components/buttonBar';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\n\nimport {getFileType, getFeatureTooltip} from './utils';\nimport {DebugFile} from './types';\n\ntype Props = {\n  debugFile: DebugFile;\n  showDetails: boolean;\n  downloadUrl: string;\n  downloadRole: string;\n  onDelete: (id: string) => void;\n};\n\nconst DebugFileRow = ({\n  debugFile,\n  showDetails,\n  downloadUrl,\n  downloadRole,\n  onDelete,\n}: Props) => {\n  const {\n    id,\n    data,\n    debugId,\n    uuid,\n    size,\n    dateCreated,\n    objectName,\n    cpuName,\n    symbolType,\n    codeId,\n  } = debugFile;\n  const fileType = getFileType(debugFile);\n  const {features} = data || {};\n\n  return (\n    <React.Fragment>\n      <Column>\n        <div>\n          <DebugId>{debugId || uuid}</DebugId>\n        </div>\n        <TimeAndSizeWrapper>\n          <StyledFileSize bytes={size} />\n          <TimeWrapper>\n            <IconClock size=\"xs\" />\n            <TimeSince date={dateCreated} />\n          </TimeWrapper>\n        </TimeAndSizeWrapper>\n      </Column>\n      <Column>\n        <Name>\n          {symbolType === 'proguard' && objectName === 'proguard-mapping'\n            ? '\\u2015'\n            : objectName}\n        </Name>\n        <Description>\n          {symbolType === 'proguard' && cpuName === 'any'\n            ? t('proguard mapping')\n            : `${cpuName} (${symbolType}${fileType ? ` ${fileType}` : ''})`}\n\n          {features &&\n            features.map(feature => (\n              <Tooltip key={feature} title={getFeatureTooltip(feature)}>\n                <Tag inline>{feature}</Tag>\n              </Tooltip>\n            ))}\n          {showDetails && (\n            <Details>\n              {/* there will be more stuff here in the future */}\n              {codeId && (\n                <DetailsItem>\n                  {t('Code ID')}: {codeId}\n                </DetailsItem>\n              )}\n            </Details>\n          )}\n        </Description>\n      </Column>\n      <RightColumn>\n        <ButtonBar gap={0.5}>\n          <Role role={downloadRole}>\n            {({hasRole}) => (\n              <Tooltip\n                disabled={hasRole}\n                title={t('You do not have permission to download debug files.')}\n              >\n                <Button\n                  size=\"xsmall\"\n                  icon={<IconDownload size=\"xs\" />}\n                  href={downloadUrl}\n                  disabled={!hasRole}\n                >\n                  {t('Download')}\n                </Button>\n              </Tooltip>\n            )}\n          </Role>\n          <Access access={['project:write']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete debug files.')}\n              >\n                <Confirm\n                  confirmText={t('Delete')}\n                  message={t('Are you sure you wish to delete this file?')}\n                  onConfirm={() => onDelete(id)}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    priority=\"danger\"\n                    icon={<IconDelete size=\"xs\" />}\n                    size=\"xsmall\"\n                    disabled={!hasAccess}\n                    data-test-id=\"delete-dif\"\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </RightColumn>\n    </React.Fragment>\n  );\n};\n\nconst Column = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst RightColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-start;\n  margin-top: ${space(1)};\n`;\n\nconst DebugId = styled('code')`\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst TimeAndSizeWrapper = styled('div')`\n  width: 100%;\n  display: flex;\n  font-size: ${p => p.theme.fontSizeSmall};\n  margin-top: ${space(1)};\n  color: ${p => p.theme.subText};\n  align-items: center;\n`;\n\nconst StyledFileSize = styled(FileSize)`\n  flex: 1;\n  padding-left: ${space(0.5)};\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  grid-gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  flex: 2;\n  align-items: center;\n  padding-left: ${space(0.5)};\n`;\n\nconst Name = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-bottom: ${space(1)};\n`;\n\nconst Description = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.subText};\n  @media (max-width: ${p => p.theme.breakpoints[2]}) {\n    line-height: 1.7;\n  }\n`;\n\nconst Details = styled('div')``;\n\nconst DetailsItem = styled('div')`\n  ${overflowEllipsis}\n  margin-top: ${space(1)}\n`;\n\nexport default DebugFileRow;\n","import {RouteComponentProps} from 'react-router/lib/Router';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {PanelTable} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Pagination from 'app/components/pagination';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport {Organization, Project} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport Checkbox from 'app/components/checkbox';\nimport SearchBar from 'app/components/searchBar';\n// TODO(android-mappings): use own components once we decide how this should look like\nimport DebugFileRow from 'app/views/settings/projectDebugFiles/debugFileRow';\nimport {DebugFile} from 'app/views/settings/projectDebugFiles/types';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  mappings: DebugFile[];\n  showDetails: boolean;\n};\n\nclass ProjectProguard extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n\n    return routeTitleGen(t('ProGuard Mappings'), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      mappings: [],\n      showDetails: false,\n    };\n  }\n\n  getEndpoints() {\n    const {params, location} = this.props;\n    const {orgId, projectId} = params;\n\n    const endpoints: ReturnType<AsyncView['getEndpoints']> = [\n      [\n        'mappings',\n        `/projects/${orgId}/${projectId}/files/dsyms/`,\n        {query: {query: location.query.query, file_formats: 'proguard'}},\n      ],\n    ];\n\n    return endpoints;\n  }\n\n  handleDelete = (id: string) => {\n    const {orgId, projectId} = this.props.params;\n\n    this.setState({\n      loading: true,\n    });\n\n    this.api.request(\n      `/projects/${orgId}/${projectId}/files/dsyms/?id=${encodeURIComponent(id)}`,\n      {\n        method: 'DELETE',\n        complete: () => this.fetchData(),\n      }\n    );\n  };\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return typeof query === 'string' ? query : undefined;\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no mappings that match your search.');\n    }\n\n    return t('There are no mappings for this project.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderMappings() {\n    const {mappings, showDetails} = this.state;\n    const {organization, params} = this.props;\n    const {orgId, projectId} = params;\n\n    if (!mappings?.length) {\n      return null;\n    }\n\n    return mappings.map(mapping => {\n      const downloadUrl = `${\n        this.api.baseUrl\n      }/projects/${orgId}/${projectId}/files/dsyms/?id=${encodeURIComponent(mapping.id)}`;\n\n      return (\n        <DebugFileRow\n          debugFile={mapping}\n          showDetails={showDetails}\n          downloadUrl={downloadUrl}\n          downloadRole={organization.debugFilesRole}\n          onDelete={this.handleDelete}\n          key={mapping.id}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, showDetails, mappings, mappingsPageLinks} = this.state;\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader title={t('ProGuard Mappings')} />\n\n        <TextBlock>\n          {t(\n            `ProGuard mapping files are used to convert minified classes, methods and field names into a human readable format.`\n          )}\n        </TextBlock>\n\n        <Wrapper>\n          <TextBlock noMargin>{t('Uploaded mappings')}:</TextBlock>\n\n          <Filters>\n            <Label>\n              <Checkbox\n                checked={showDetails}\n                onChange={e => {\n                  this.setState({showDetails: (e.target as HTMLInputElement).checked});\n                }}\n              />\n              {t('show details')}\n            </Label>\n\n            <SearchBar\n              placeholder={t('Search mappings')}\n              onSearch={this.handleSearch}\n              query={this.getQuery()}\n            />\n          </Filters>\n        </Wrapper>\n\n        <StyledPanelTable\n          headers={[\n            t('Debug ID'),\n            t('Information'),\n            <Actions key=\"actions\">{t('Actions')}</Actions>,\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={mappings?.length === 0}\n          isLoading={loading}\n        >\n          {this.renderMappings()}\n        </StyledPanelTable>\n        <Pagination pageLinks={mappingsPageLinks} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: 37% 1fr auto;\n`;\n\nconst Actions = styled('div')`\n  text-align: right;\n`;\n\nconst Wrapper = styled('div')`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-gap: ${space(4)};\n  align-items: center;\n  margin-top: ${space(4)};\n  margin-bottom: ${space(1)};\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    display: block;\n  }\n`;\n\nconst Filters = styled('div')`\n  display: grid;\n  grid-template-columns: min-content minmax(200px, 400px);\n  align-items: center;\n  justify-content: flex-end;\n  grid-gap: ${space(2)};\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    grid-template-columns: min-content 1fr;\n  }\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  display: flex;\n  margin-bottom: 0;\n  white-space: nowrap;\n  input {\n    margin-top: 0;\n    margin-right: ${space(1)};\n  }\n`;\n\nexport default ProjectProguard;\n","import React from 'react';\n\nimport {t} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport SentryTypes from 'app/sentryTypes';\nimport Feature from 'app/components/acl/feature';\nimport Alert from 'app/components/alert';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport ProjectProguard from './projectProguard';\n\nclass ProjectProguardContainer extends React.Component<ProjectProguard['props']> {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n  };\n\n  renderNoAccess() {\n    return (\n      <PageContent>\n        <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n      </PageContent>\n    );\n  }\n\n  render() {\n    const {organization} = this.props;\n\n    return (\n      <Feature\n        features={['android-mappings']}\n        organization={organization}\n        renderDisabled={this.renderNoAccess}\n      >\n        <ProjectProguard {...this.props} />\n      </Feature>\n    );\n  }\n}\n\nexport default withOrganization(ProjectProguardContainer);\n"],"sourceRoot":""}