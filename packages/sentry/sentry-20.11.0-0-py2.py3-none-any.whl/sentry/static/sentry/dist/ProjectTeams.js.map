{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/components/teamSelect.jsx","webpack:///./app/views/settings/project/projectTeams.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","TeamSelect","state","loading","teams","fetchTeams","debounce","query","a","api","organization","requestPromise","slug","per_page","TEAMS_PER_PAGE","setState","DEFAULT_DEBOUNCE_DURATION","handleQueryUpdate","event","target","value","handleAddTeam","option","team","find","tm","onAddTeam","handleRemove","teamSlug","onRemoveTeam","options","disabled","selectedTeams","menuHeader","noTeams","length","isDisabled","filter","includes","map","searchKey","label","TeamDropdownElement","items","busyItemsStillVisible","onChange","onSelect","emptyMessage","t","alignMenu","isOpen","aria-label","size","confirmLastTeamRemoveMessage","confirmMessage","TeamRow","key","orgId","onRemove","hasButtons","renderTeamAddDropDown","renderBody","TeamPanelItem","StyledLink","to","message","bypass","onConfirm","isCircled","PanelItem","Link","withApi","ProjectTeams","canCreateTeam","access","Set","has","params","projectId","removeTeamFromProject","then","handleRemovedTeam","addErrorMessage","prevState","projectTeams","handleAddedTeam","handleAdd","addTeamToProject","error","handleCreateTeam","e","project","stopPropagation","preventDefault","openCreateTeamModal","onClose","data","remountComponent","hasAccess","confirmRemove","StyledTeamsLabel","position","StyledCreateTeamLink","onClick","css","theme","gray300"],"mappings":"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","file":"ProjectTeams.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport debounce from 'lodash/debounce';\nimport styled from '@emotion/styled';\n\nimport {DEFAULT_DEBOUNCE_DURATION, TEAMS_PER_PAGE} from 'app/constants';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {IconSubtract} from 'app/icons';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport DropdownAutoComplete from 'app/components/dropdownAutoComplete';\nimport DropdownButton from 'app/components/dropdownButton';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport Link from 'app/components/links/link';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\nimport withApi from 'app/utils/withApi';\n\nclass TeamSelect extends React.Component {\n  static propTypes = {\n    api: PropTypes.object.isRequired,\n    organization: SentryTypes.Organization.isRequired,\n\n    /**\n     * Should button be disabled\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Teams that are already selected.\n     */\n    selectedTeams: PropTypes.array.isRequired,\n    /**\n     * callback when teams are added\n     */\n    onAddTeam: PropTypes.func.isRequired,\n    /**\n     * Callback when teams are removed\n     */\n    onRemoveTeam: PropTypes.func.isRequired,\n\n    /**\n     * Optional menu header.\n     */\n    menuHeader: PropTypes.element,\n\n    /**\n     * Message to display when the last team is removed\n     * if empty no confirm will be displayed.\n     */\n    confirmLastTeamRemoveMessage: PropTypes.string,\n  };\n\n  state = {\n    loading: true,\n    teams: null,\n  };\n\n  componentDidMount() {\n    this.fetchTeams();\n  }\n\n  fetchTeams = debounce(async query => {\n    const {api, organization} = this.props;\n    const teams = await api.requestPromise(`/organizations/${organization.slug}/teams/`, {\n      query: {query, per_page: TEAMS_PER_PAGE},\n    });\n    this.setState({teams, loading: false});\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  handleQueryUpdate = event => {\n    this.setState({loading: true});\n    this.fetchTeams(event.target.value);\n  };\n\n  handleAddTeam = option => {\n    const team = this.state.teams.find(tm => tm.slug === option.value);\n    this.props.onAddTeam(team);\n  };\n\n  handleRemove = teamSlug => {\n    this.props.onRemoveTeam(teamSlug);\n  };\n\n  renderTeamAddDropDown() {\n    const {disabled, selectedTeams, menuHeader} = this.props;\n    const {teams} = this.state;\n    const noTeams = teams === null || teams.length === 0;\n    const isDisabled = disabled;\n\n    let options;\n    if (noTeams) {\n      options = [];\n    } else {\n      options = teams\n        .filter(team => !selectedTeams.includes(team.slug))\n        .map(team => ({\n          value: team.slug,\n          searchKey: team.slug,\n          label: <TeamDropdownElement>#{team.slug}</TeamDropdownElement>,\n        }));\n    }\n\n    return (\n      <DropdownAutoComplete\n        items={options}\n        busyItemsStillVisible={this.state.loading}\n        onChange={this.handleQueryUpdate}\n        onSelect={this.handleAddTeam}\n        emptyMessage={t('No teams')}\n        menuHeader={menuHeader}\n        disabled={isDisabled}\n        alignMenu=\"right\"\n      >\n        {({isOpen}) => (\n          <DropdownButton\n            aria-label={t('Add Team')}\n            isOpen={isOpen}\n            size=\"xsmall\"\n            disabled={isDisabled}\n          >\n            {t('Add Team')}\n          </DropdownButton>\n        )}\n      </DropdownAutoComplete>\n    );\n  }\n\n  renderBody() {\n    const {\n      organization,\n      selectedTeams,\n      disabled,\n      confirmLastTeamRemoveMessage,\n    } = this.props;\n\n    if (selectedTeams.length === 0) {\n      return <EmptyMessage>{t('No Teams assigned')}</EmptyMessage>;\n    }\n    const confirmMessage =\n      selectedTeams.length === 1 && confirmLastTeamRemoveMessage\n        ? confirmLastTeamRemoveMessage\n        : null;\n\n    return selectedTeams.map(team => (\n      <TeamRow\n        key={team}\n        orgId={organization.slug}\n        team={team}\n        onRemove={this.handleRemove}\n        disabled={disabled}\n        confirmMessage={confirmMessage}\n      />\n    ));\n  }\n\n  render() {\n    return (\n      <Panel>\n        <PanelHeader hasButtons>\n          {t('Team')}\n          {this.renderTeamAddDropDown()}\n        </PanelHeader>\n\n        <PanelBody>{this.renderBody()}</PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst TeamRow = props => {\n  const {orgId, team, onRemove, disabled, confirmMessage} = props;\n  return (\n    <TeamPanelItem>\n      <StyledLink to={`/settings/${orgId}/teams/${team}/`}>{`#${team}`}</StyledLink>\n      <Confirm\n        message={confirmMessage}\n        bypass={!confirmMessage}\n        onConfirm={() => onRemove(team)}\n        disabled={disabled}\n      >\n        <Button\n          size=\"xsmall\"\n          icon={<IconSubtract isCircled size=\"xs\" />}\n          disabled={disabled}\n        >\n          {t('Remove')}\n        </Button>\n      </Confirm>\n    </TeamPanelItem>\n  );\n};\n\nTeamRow.propTypes = {\n  disabled: PropTypes.bool,\n  team: PropTypes.string.isRequired,\n  orgId: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  confirmMessage: PropTypes.string,\n};\n\nconst TeamDropdownElement = styled('div')`\n  padding: ${space(0.5)} 0px;\n  text-transform: none;\n`;\n\nconst TeamPanelItem = styled(PanelItem)`\n  padding: ${space(2)};\n  align-items: center;\n`;\n\nconst StyledLink = styled(Link)`\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nexport default withApi(TeamSelect);\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {css} from '@emotion/core';\nimport {WithRouterProps} from 'react-router';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {addTeamToProject, removeTeamFromProject} from 'app/actionCreators/projects';\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Link from 'app/components/links/link';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport {Organization, Project, Team} from 'app/types';\nimport TeamSelect from 'app/views/settings/components/teamSelect';\nimport Tooltip from 'app/components/tooltip';\nimport space from 'app/styles/space';\nimport routeTitleGen from 'app/utils/routeTitle';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & WithRouterProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  projectTeams: null | Team[];\n} & AsyncView['state'];\n\nclass ProjectTeams extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['projectTeams', `/projects/${orgId}/${projectId}/teams/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Project Teams'), projectId, false);\n  }\n\n  canCreateTeam = () => {\n    const {organization} = this.props;\n    const access = new Set(organization.access);\n    return (\n      access.has('org:write') && access.has('team:write') && access.has('project:write')\n    );\n  };\n\n  handleRemove = (teamSlug: Team['slug']) => {\n    if (this.state.loading) {\n      return;\n    }\n\n    const {orgId, projectId} = this.props.params;\n\n    removeTeamFromProject(this.api, orgId, projectId, teamSlug)\n      .then(() => this.handleRemovedTeam(teamSlug))\n      .catch(() => {\n        addErrorMessage(t('Could not remove the %s team', teamSlug));\n        this.setState({loading: false});\n      });\n  };\n\n  handleRemovedTeam = (teamSlug: Team['slug']) => {\n    this.setState(prevState => ({\n      projectTeams: [\n        ...(prevState.projectTeams || []).filter(team => team.slug !== teamSlug),\n      ],\n    }));\n  };\n\n  handleAddedTeam = (team: Team) => {\n    this.setState(prevState => ({\n      projectTeams: [...prevState.projectTeams, team],\n    }));\n  };\n\n  handleAdd = (team: Team) => {\n    if (this.state.loading) {\n      return;\n    }\n    const {orgId, projectId} = this.props.params;\n\n    addTeamToProject(this.api, orgId, projectId, team).then(\n      () => {\n        this.handleAddedTeam(team);\n      },\n      () => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      }\n    );\n  };\n\n  handleCreateTeam = (e: React.MouseEvent) => {\n    const {project, organization} = this.props;\n\n    if (!this.canCreateTeam()) {\n      return;\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openCreateTeamModal({\n      project,\n      organization,\n      onClose: data => {\n        addTeamToProject(this.api, organization.slug, project.slug, data).then(\n          this.remountComponent,\n          this.remountComponent\n        );\n      },\n    });\n  };\n\n  renderBody() {\n    const {params, organization} = this.props;\n\n    const canCreateTeam = this.canCreateTeam();\n    const hasAccess = organization.access.includes('project:write');\n    const confirmRemove = t(\n      'This is the last team with access to this project. Removing it will mean ' +\n        'only organization owners and managers will be able to access the project pages. Are ' +\n        'you sure you want to remove this team from the project %s?',\n      params.projectId\n    );\n    const {projectTeams} = this.state;\n    const selectedTeams = projectTeams?.map(({slug}) => slug) ?? [];\n\n    const menuHeader = (\n      <StyledTeamsLabel>\n        {t('Teams')}\n        <Tooltip\n          disabled={canCreateTeam}\n          title={t('You must be a project admin to create teams')}\n          position=\"top\"\n        >\n          <StyledCreateTeamLink\n            to=\"\"\n            disabled={!canCreateTeam}\n            onClick={this.handleCreateTeam}\n          >\n            {t('Create Team')}\n          </StyledCreateTeamLink>\n        </Tooltip>\n      </StyledTeamsLabel>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('%s Teams', params.projectId)} />\n        <TeamSelect\n          organization={organization}\n          selectedTeams={selectedTeams}\n          onAddTeam={this.handleAdd}\n          onRemoveTeam={this.handleRemove}\n          menuHeader={menuHeader}\n          confirmLastTeamRemoveMessage={confirmRemove}\n          disabled={!hasAccess}\n        />\n      </div>\n    );\n  }\n}\n\nconst StyledTeamsLabel = styled('div')`\n  font-size: 0.875em;\n  padding: ${space(0.5)} 0px;\n  text-transform: uppercase;\n`;\n\nconst StyledCreateTeamLink = styled(Link)`\n  float: right;\n  text-transform: none;\n  ${p =>\n    p.disabled &&\n    css`\n      cursor: not-allowed;\n      color: ${p.theme.gray300};\n      opacity: 0.6;\n    `};\n`;\n\nexport default ProjectTeams;\n"],"sourceRoot":""}