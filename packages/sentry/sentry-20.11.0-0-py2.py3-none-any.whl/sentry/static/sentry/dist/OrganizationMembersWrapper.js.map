{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/alertLink.tsx","webpack:///./app/views/settings/organizationMembers/organizationMembersWrapper.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","AlertLink","size","priority","children","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","StyledLink","data-test-id","IconWrapper","AlertLinkText","IconLink","direction","linkProps","omit","theme","alert","backgroundLight","textColor","border","OrganizationMembersWrapper","removeAccessRequest","id","setState","state","requestList","filter","request","removeInviteRequest","inviteRequests","updateInviteRequest","data","inviteIndex","findIndex","orgId","params","t","organization","Fragment","openInviteMembersModal","source","showNavTabs","underlined","isActive","onRequestsTab","showInviteRequests","trackAnalyticsEvent","eventKey","eventName","organization_id","requestCount","StyledBadge","text","cloneElement","onRemoveInviteRequest","onUpdateInviteRequest","onRemoveAccessRequest","location","pathname","includes","access","hasWriteAccess","length","count","toString","Badge","breakpoints","withOrganization"],"mappings":"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","file":"OrganizationMembersWrapper.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport omit from 'lodash/omit';\n\nimport Link from 'app/components/links/link';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n      ['data-test-id']: dataTestId,\n    } = this.props;\n\n    return (\n      <StyledLink\n        data-test-id={dataTestId}\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {RouteComponentProps} from 'react-router/lib/Router';\n\nimport {openInviteMembersModal} from 'app/actionCreators/modal';\nimport {Organization, Member} from 'app/types';\nimport {t} from 'app/locale';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport AsyncView from 'app/views/asyncView';\nimport Badge from 'app/components/badge';\nimport {IconMail} from 'app/icons';\nimport ListLink from 'app/components/links/listLink';\nimport AlertLink from 'app/components/alertLink';\nimport NavTabs from 'app/components/navTabs';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype Props = {\n  children?: any;\n  organization: Organization;\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  inviteRequests: Member[];\n};\n\nclass OrganizationMembersWrapper extends AsyncView<Props, State> {\n  getEndpoints(): [string, string][] {\n    const {orgId} = this.props.params;\n\n    return [\n      ['inviteRequests', `/organizations/${orgId}/invite-requests/`],\n      ['requestList', `/organizations/${orgId}/access-requests/`],\n    ];\n  }\n\n  getTitle() {\n    const {orgId} = this.props.params;\n    return routeTitleGen(t('Members'), orgId, false);\n  }\n\n  get onRequestsTab() {\n    return location.pathname.includes('/requests/');\n  }\n\n  get hasWriteAccess() {\n    const {organization} = this.props;\n    if (!organization || !organization.access) {\n      return false;\n    }\n    return organization.access.includes('member:write');\n  }\n\n  get showInviteRequests() {\n    return this.hasWriteAccess;\n  }\n\n  get showNavTabs() {\n    const {requestList} = this.state;\n\n    // show the requests tab if there are pending team requests,\n    // or if the user has access to approve or deny invite requests\n    return (requestList && requestList.length > 0) || this.showInviteRequests;\n  }\n\n  get requestCount() {\n    const {requestList, inviteRequests} = this.state;\n    let count = requestList.length;\n\n    // if the user can't see the invite requests panel,\n    // exclude those requests from the total count\n    if (this.showInviteRequests) {\n      count += inviteRequests.length;\n    }\n    return count ? count.toString() : null;\n  }\n\n  removeAccessRequest = (id: string) =>\n    this.setState(state => ({\n      requestList: state.requestList.filter(request => request.id !== id),\n    }));\n\n  removeInviteRequest = (id: string) =>\n    this.setState(state => ({\n      inviteRequests: state.inviteRequests.filter(request => request.id !== id),\n    }));\n\n  updateInviteRequest = (id: string, data: Partial<Member>) =>\n    this.setState(state => {\n      const inviteRequests = [...state.inviteRequests];\n      const inviteIndex = inviteRequests.findIndex(request => request.id === id);\n\n      inviteRequests[inviteIndex] = {...inviteRequests[inviteIndex], ...data};\n\n      return {inviteRequests};\n    });\n\n  renderBody() {\n    const {\n      children,\n      organization,\n      params: {orgId},\n    } = this.props;\n    const {requestList, inviteRequests} = this.state;\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader title=\"Members\" />\n\n        <AlertLink\n          data-test-id=\"email-invite\"\n          icon={<IconMail />}\n          priority=\"info\"\n          onClick={() => openInviteMembersModal({source: 'members_settings'})}\n        >\n          {t('Invite new members by email to join your organization')}\n        </AlertLink>\n\n        {this.showNavTabs && (\n          <NavTabs underlined>\n            <ListLink\n              to={`/settings/${orgId}/members/`}\n              isActive={() => !this.onRequestsTab}\n              data-test-id=\"members-tab\"\n            >\n              {t('Members')}\n            </ListLink>\n            <ListLink\n              to={`/settings/${orgId}/members/requests/`}\n              isActive={() => this.onRequestsTab}\n              data-test-id=\"requests-tab\"\n              onClick={() => {\n                this.showInviteRequests &&\n                  trackAnalyticsEvent({\n                    eventKey: 'invite_request.tab_clicked',\n                    eventName: 'Invite Request Tab Clicked',\n                    organization_id: organization.id,\n                  });\n              }}\n            >\n              {t('Requests')}\n            </ListLink>\n            {this.requestCount && <StyledBadge text={this.requestCount} />}\n          </NavTabs>\n        )}\n\n        {children &&\n          React.cloneElement(children, {\n            requestList,\n            inviteRequests,\n            onRemoveInviteRequest: this.removeInviteRequest,\n            onUpdateInviteRequest: this.updateInviteRequest,\n            onRemoveAccessRequest: this.removeAccessRequest,\n            showInviteRequests: this.showInviteRequests,\n          })}\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledBadge = styled(Badge)`\n  margin-left: -12px;\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    margin-left: -6px;\n  }\n`;\n\nexport default withOrganization(OrganizationMembersWrapper);\n"],"sourceRoot":""}