{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/settings/components/forms/textCopyInput.jsx","webpack:///./app/components/clippedBox.tsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx","webpack:///./app/views/settings/project/projectKeys/list/keyRow.tsx","webpack:///./app/views/settings/project/projectKeys/list/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","Wrapper","StyledInput","inputStyles","theme","backgroundSecondary","rtl","OverflowContainer","StyledCopyButton","Button","TextCopyInput","handleCopyClick","e","textRef","current","onCopy","handleSelectText","children","stopPropagation","node","ReactDOM","findDOMNode","setSelectionRange","value","length","selectText","createRef","style","inputValue","readOnly","ref","onClick","hideUnsupported","type","size","ClippedBox","state","isClipped","defaultClipped","isRevealed","renderedHeight","reveal","onReveal","setState","handleClickReveal","event","offsetHeight","calcHeight","_prevProps","prevState","setRenderedHeight","clipHeight","btnText","className","ClipWrapper","ClipFade","priority","PureComponent","t","shouldForwardProp","prop","background","ProjectKeyCredentials","showDeprecatedDsn","toggleDeprecatedDsn","projectId","data","showDsn","showDsnPublic","showSecurityEndpoint","showMinidump","showUnreal","showPublicKey","showSecretKey","showProjectId","Fragment","label","inline","flexibleControlStateSize","help","tct","link","getDynamicText","dsn","fixed","StyledField","secret","security","href","minidump","unreal","Field","KeyRow","handleRemove","onRemove","handleEnable","onToggle","handleDisable","access","editUrl","id","controlActive","has","controls","key","isActive","disabled","onConfirm","confirmText","message","hasButtons","PanelHeaderLink","Controls","c","n","StyledClippedBox","StyledPanelBody","Link","subText","PanelBody","ProjectKeys","handleRemoveKey","a","oldKeyList","keyList","addLoadingMessage","filter","orgId","api","requestPromise","method","addSuccessMessage","addErrorMessage","handleToggleKey","handleCreateKey","description","organization","Set","pageLinks","keyListPageLinks","isEmpty","data-test-id","isCircled","code","renderEmpty","renderResults","withOrganization","withProject"],"mappings":"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","file":"ProjectKeys.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import {Location} from 'history';\nimport {PlainRoute} from 'react-router/lib/Route';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\n\ntype Options = {\n  routes: PlainRoute[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from '@emotion/styled';\n\nimport {inputStyles} from 'app/styles/input';\nimport {selectText} from 'app/utils/selectText';\nimport Button from 'app/components/button';\nimport Clipboard from 'app/components/clipboard';\nimport {IconCopy} from 'app/icons';\n\nconst Wrapper = styled('div')`\n  display: flex;\n`;\n\nconst StyledInput = styled('input')`\n  ${inputStyles};\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-right-width: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  direction: ${p => (p.rtl ? 'rtl' : 'ltr')};\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.backgroundSecondary};\n    border-right-width: 0;\n  }\n`;\n\nconst OverflowContainer = styled('div')`\n  flex-grow: 1;\n  border: none;\n`;\n\nconst StyledCopyButton = styled(Button)`\n  flex-shrink: 1;\n  border-radius: 0 0.25em 0.25em 0;\n  box-shadow: none;\n`;\n\nclass TextCopyInput extends React.Component {\n  static propTypes = {\n    /**\n     * Text to copy\n     */\n    children: PropTypes.string.isRequired,\n    /**\n     * CSS style object\n     */\n    style: PropTypes.object,\n    onCopy: PropTypes.func,\n    /**\n     * Always show the ending of a long overflowing text in input\n     */\n    rtl: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    onCopy: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.textRef = React.createRef();\n  }\n\n  // Select text when copy button is clicked\n  handleCopyClick = e => {\n    if (!this.textRef.current) {\n      return;\n    }\n\n    const {onCopy} = this.props;\n\n    this.handleSelectText();\n\n    onCopy(this.props.children, e);\n\n    e.stopPropagation();\n  };\n\n  handleSelectText = () => {\n    const {rtl} = this.props;\n\n    if (!this.textRef.current) {\n      return;\n    }\n\n    // We use findDOMNode here because `this.textRef` is not a dom node,\n    // it's a ref to AutoSelectText\n    const node = ReactDOM.findDOMNode(this.textRef.current); // eslint-disable-line react/no-find-dom-node\n\n    if (rtl) {\n      // we don't want to select the first character - \\u202A, nor the last - \\u202C\n      node.setSelectionRange(1, node.value.length - 1);\n    } else {\n      selectText(node);\n    }\n  };\n\n  render() {\n    const {style, children, rtl} = this.props;\n\n    /**\n     * We are using direction: rtl; to always show the ending of a long overflowing text in input.\n     *\n     * This however means that the trailing characters with BiDi class O.N. ('Other Neutrals') goes to the other side.\n     * Hello! becomes !Hello and vice versa. This is a problem for us when we want to show path in this component, because\n     * /user/local/bin becomes user/local/bin/. Wrapping in unicode characters for left-to-righ embedding solves this,\n     * however we need to be aware of them when selecting the text - we are solving that by offseting the selectionRange.\n     */\n    const inputValue = rtl ? '\\u202A' + children + '\\u202C' : children;\n\n    return (\n      <Wrapper>\n        <OverflowContainer>\n          <StyledInput\n            readOnly\n            ref={this.textRef}\n            style={style}\n            value={inputValue}\n            onClick={this.handleSelectText}\n            rtl={rtl}\n          />\n        </OverflowContainer>\n        <Clipboard hideUnsupported onClick={this.handleCopyClick} value={children}>\n          <StyledCopyButton type=\"button\" size=\"xsmall\" onClick={this.handleCopyClick}>\n            <IconCopy />\n          </StyledCopyButton>\n        </Clipboard>\n      </Wrapper>\n    );\n  }\n}\n\nexport default TextCopyInput;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport space from 'app/styles/space';\n\ntype DefaultProps = {\n  clipHeight?: number;\n  btnText?: string;\n  defaultClipped?: boolean;\n};\n\ntype Props = {\n  clipHeight: number;\n  title?: string;\n  renderedHeight?: number;\n  onReveal?: () => void;\n  className?: string;\n} & DefaultProps;\n\ntype State = {\n  isClipped: boolean;\n  isRevealed: boolean;\n  renderedHeight?: number;\n};\n\nclass ClippedBox extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    defaultClipped: false,\n    clipHeight: 200,\n    btnText: t('Show More'),\n  };\n\n  state: State = {\n    isClipped: !!this.props.defaultClipped,\n    isRevealed: false, // True once user has clicked \"Show More\" button\n    renderedHeight: this.props.renderedHeight,\n  };\n\n  componentDidMount() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const renderedHeight = (ReactDOM.findDOMNode(this) as HTMLElement).offsetHeight;\n    this.calcHeight(renderedHeight);\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.renderedHeight !== this.props.renderedHeight) {\n      this.setRenderedHeight();\n    }\n\n    if (prevState.renderedHeight !== this.state.renderedHeight) {\n      this.calcHeight(this.state.renderedHeight);\n    }\n\n    if (this.state.isRevealed || !this.state.isClipped) {\n      return;\n    }\n\n    if (!this.props.renderedHeight) {\n      // eslint-disable-next-line react/no-find-dom-node\n      const renderedHeight = (ReactDOM.findDOMNode(this) as HTMLElement).offsetHeight;\n\n      if (renderedHeight < this.props.clipHeight) {\n        this.reveal();\n      }\n    }\n  }\n\n  setRenderedHeight() {\n    this.setState({\n      renderedHeight: this.props.renderedHeight,\n    });\n  }\n\n  calcHeight(renderedHeight?: number) {\n    if (!renderedHeight) {\n      return;\n    }\n\n    if (!this.state.isClipped && renderedHeight > this.props.clipHeight) {\n      /*eslint react/no-did-mount-set-state:0*/\n      // okay if this causes re-render; cannot determine until\n      // rendered first anyways\n      this.setState({\n        isClipped: true,\n      });\n    }\n  }\n\n  reveal = () => {\n    const {onReveal} = this.props;\n\n    this.setState({\n      isClipped: false,\n      isRevealed: true,\n    });\n\n    if (onReveal) {\n      onReveal();\n    }\n  };\n\n  handleClickReveal = (event: React.MouseEvent) => {\n    event.stopPropagation();\n    this.reveal();\n  };\n\n  render() {\n    const {isClipped, isRevealed} = this.state;\n    const {title, children, clipHeight, btnText, className} = this.props;\n\n    return (\n      <ClipWrapper\n        clipHeight={clipHeight}\n        isClipped={isClipped}\n        isRevealed={isRevealed}\n        className={className}\n      >\n        {title && <Title>{title}</Title>}\n        {children}\n        {isClipped && (\n          <ClipFade>\n            <Button onClick={this.reveal} priority=\"primary\" size=\"xsmall\">\n              {btnText}\n            </Button>\n          </ClipFade>\n        )}\n      </ClipWrapper>\n    );\n  }\n}\n\nexport default ClippedBox;\n\nconst ClipWrapper = styled('div', {\n  shouldForwardProp: prop =>\n    prop !== 'clipHeight' && prop !== 'isClipped' && prop !== 'isRevealed',\n})<State & {clipHeight: number}>`\n  position: relative;\n  margin-left: -${space(3)};\n  margin-right: -${space(3)};\n  padding: ${space(2)} ${space(3)} 0;\n  border-top: 1px solid ${p => p.theme.backgroundSecondary};\n  transition: all 5s ease-in-out;\n\n  /* For \"Show More\" animation */\n  ${p => p.isRevealed && `max-height: 50000px`};\n\n  ${p =>\n    p.isClipped &&\n    `\n    max-height: ${p.clipHeight}px;\n    overflow: hidden;\n  `};\n\n  :first-of-type {\n    margin-top: -${space(2)};\n    border: 0;\n  }\n`;\n\nconst Title = styled('h5')`\n  margin-bottom: ${space(2)};\n`;\n\nconst ClipFade = styled('div')`\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  padding: 40px 0 0;\n  background-image: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.15),\n    rgba(255, 255, 255, 1)\n  );\n  text-align: center;\n  border-bottom: ${space(1.5)} solid ${p => p.theme.background};\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\nimport {t, tct} from 'app/locale';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport Field from 'app/views/settings/components/forms/field';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport space from 'app/styles/space';\n\nconst DEFAULT_PROPS = {\n  showDsn: true,\n  showDsnPublic: true,\n  showSecurityEndpoint: true,\n  showMinidump: true,\n  showUnreal: true,\n  showPublicKey: false,\n  showSecretKey: false,\n  showProjectId: false,\n};\n\ntype Props = {\n  projectId: string;\n  data: ProjectKey;\n} & typeof DEFAULT_PROPS;\n\ntype State = {\n  showDeprecatedDsn: boolean;\n};\n\nclass ProjectKeyCredentials extends React.Component<Props, State> {\n  static defaultProps = DEFAULT_PROPS;\n\n  state = {\n    showDeprecatedDsn: false,\n  };\n\n  toggleDeprecatedDsn = () => {\n    this.setState(state => ({\n      showDeprecatedDsn: !state.showDeprecatedDsn,\n    }));\n  };\n\n  render() {\n    const {showDeprecatedDsn} = this.state;\n    const {\n      projectId,\n      data,\n      showDsn,\n      showDsnPublic,\n      showSecurityEndpoint,\n      showMinidump,\n      showUnreal,\n      showPublicKey,\n      showSecretKey,\n      showProjectId,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        {showDsnPublic && (\n          <Field\n            label={t('DSN')}\n            inline={false}\n            flexibleControlStateSize\n            help={tct('The DSN tells the SDK where to send the events to. [link]', {\n              link: showDsn ? (\n                <Link to=\"\" onClick={this.toggleDeprecatedDsn}>\n                  {showDeprecatedDsn\n                    ? t('Hide deprecated DSN')\n                    : t('Show deprecated DSN')}\n                </Link>\n              ) : null,\n            })}\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.public,\n                fixed: '__DSN__',\n              })}\n            </TextCopyInput>\n            {showDeprecatedDsn && (\n              <StyledField\n                label={null}\n                help={t(\n                  'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n                )}\n                inline={false}\n                flexibleControlStateSize\n              >\n                <TextCopyInput>\n                  {getDynamicText({\n                    value: data.dsn.secret,\n                    fixed: '__DSN_DEPRECATED__',\n                  })}\n                </TextCopyInput>\n              </StyledField>\n            )}\n          </Field>\n        )}\n\n        {/* this edge case should imho not happen, but just to be sure */}\n        {!showDsnPublic && showDsn && (\n          <Field\n            label={t('DSN (Deprecated)')}\n            help={t(\n              'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.secret,\n                fixed: '__DSN_DEPRECATED__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecurityEndpoint && (\n          <Field\n            label={t('Security Header Endpoint')}\n            help={t(\n              'Use your security header endpoint for features like CSP and Expect-CT reports.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.security,\n                fixed: '__SECURITY_HEADER_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showMinidump && (\n          <Field\n            label={t('Minidump Endpoint')}\n            help={tct(\n              'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/clients/minidump/\">\n                    minidump crash reports\n                  </ExternalLink>\n                ),\n              }\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.minidump,\n                fixed: '__MINIDUMP_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showUnreal && (\n          <Field\n            label={t('Unreal Engine 4 Endpoint')}\n            help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.unreal || '',\n                fixed: '__UNREAL_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showPublicKey && (\n          <Field label={t('Public Key')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.public,\n                fixed: '__PUBLICKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecretKey && (\n          <Field label={t('Secret Key')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.secret,\n                fixed: '__SECRETKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showProjectId && (\n          <Field label={t('Project ID')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: projectId,\n                fixed: '__PROJECTID__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledField = styled(Field)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n","import {Link} from 'react-router';\nimport {RouteComponentProps} from 'react-router/lib/Router';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'app/api';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport ClippedBox from 'app/components/clippedBox';\nimport Confirm from 'app/components/confirm';\nimport {IconDelete} from 'app/icons';\nimport ProjectKeyCredentials from 'app/views/settings/project/projectKeys/projectKeyCredentials';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport space from 'app/styles/space';\nimport {Scope} from 'app/types';\n\ntype Props = {\n  api: Client;\n  orgId: string;\n  projectId: string;\n  data: ProjectKey;\n  access: Set<Scope>;\n  onToggle: (isActive: boolean, data: ProjectKey) => void;\n  onRemove: (data: ProjectKey) => void;\n} & Pick<RouteComponentProps<{}, {}>, 'routes' | 'location' | 'params'>;\n\nclass KeyRow extends React.Component<Props> {\n  handleRemove = () => {\n    const {data, onRemove} = this.props;\n    onRemove(data);\n  };\n\n  handleEnable = () => {\n    const {onToggle, data} = this.props;\n    onToggle(true, data);\n  };\n\n  handleDisable = () => {\n    const {onToggle, data} = this.props;\n    onToggle(false, data);\n  };\n\n  render() {\n    const {access, data, routes, location, params} = this.props;\n    const editUrl = recreateRoute(`${data.id}/`, {routes, params, location});\n    const controlActive = access.has('project:write');\n\n    const controls = [\n      <Button key=\"edit\" to={editUrl} size=\"small\">\n        {t('Configure')}\n      </Button>,\n      <Button\n        key=\"toggle\"\n        size=\"small\"\n        onClick={data.isActive ? this.handleDisable : this.handleEnable}\n        disabled={!controlActive}\n      >\n        {data.isActive ? t('Disable') : t('Enable')}\n      </Button>,\n      <Confirm\n        key=\"remove\"\n        priority=\"danger\"\n        disabled={!controlActive}\n        onConfirm={this.handleRemove}\n        confirmText={t('Remove Key')}\n        message={t(\n          'Are you sure you want to remove this key? This action is irreversible.'\n        )}\n      >\n        <Button size=\"small\" disabled={!controlActive} icon={<IconDelete />} />\n      </Confirm>,\n    ];\n\n    return (\n      <Panel>\n        <PanelHeader hasButtons>\n          <Title disabled={!data.isActive}>\n            <PanelHeaderLink to={editUrl}>{data.label}</PanelHeaderLink>\n            {!data.isActive && (\n              <small>\n                {' \\u2014  '}\n                {t('Disabled')}\n              </small>\n            )}\n          </Title>\n          <Controls>\n            {controls.map((c, n) => (\n              <span key={n}> {c}</span>\n            ))}\n          </Controls>\n        </PanelHeader>\n\n        <StyledClippedBox clipHeight={300} defaultClipped btnText={t('Expand')}>\n          <StyledPanelBody disabled={!data.isActive}>\n            <ProjectKeyCredentials projectId={`${data.projectId}`} data={data} />\n          </StyledPanelBody>\n        </StyledClippedBox>\n      </Panel>\n    );\n  }\n}\n\nexport default KeyRow;\n\nconst StyledClippedBox = styled(ClippedBox)`\n  padding: 0;\n  margin: 0;\n  > *:last-child {\n    padding-bottom: ${space(3)};\n  }\n`;\n\nconst PanelHeaderLink = styled(Link)`\n  color: ${p => p.theme.subText};\n`;\n\nconst Title = styled('div')<{disabled: boolean}>`\n  flex: 1;\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n  margin-right: ${space(1)};\n`;\n\nconst Controls = styled('div')`\n  display: grid;\n  align-items: center;\n  grid-gap: ${space(1)};\n  grid-auto-flow: column;\n`;\n\nconst StyledPanelBody = styled(PanelBody)<{disabled: boolean}>`\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n`;\n","import {RouteComponentProps} from 'react-router/lib/Router';\nimport React from 'react';\n\nimport {\n  addLoadingMessage,\n  addErrorMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {Organization, Project} from 'app/types';\nimport {Panel} from 'app/components/panels';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\nimport {t, tct} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Pagination from 'app/components/pagination';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport withOrganization from 'app/utils/withOrganization';\nimport withProject from 'app/utils/withProject';\nimport {IconAdd, IconFlag} from 'app/icons';\n\nimport KeyRow from './keyRow';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  keyList: ProjectKey[];\n} & AsyncView['state'];\n\nclass ProjectKeys extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Client Keys'), projectId, false);\n  }\n\n  getEndpoints(): [string, string][] {\n    const {orgId, projectId} = this.props.params;\n    return [['keyList', `/projects/${orgId}/${projectId}/keys/`]];\n  }\n\n  /**\n   * Optimistically remove key\n   */\n  handleRemoveKey = async (data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Revoking key\\u2026'));\n\n    this.setState(state => ({\n      keyList: state.keyList.filter(key => key.id !== data.id),\n    }));\n\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/keys/${data.id}/`, {\n        method: 'DELETE',\n      });\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      this.setState({\n        keyList: oldKeyList,\n      });\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  };\n\n  handleToggleKey = async (isActive: boolean, data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    this.setState(state => {\n      const keyList = state.keyList.map(key => {\n        if (key.id === data.id) {\n          return {\n            ...key,\n            isActive: !data.isActive,\n          };\n        }\n\n        return key;\n      });\n      return {keyList};\n    });\n\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/keys/${data.id}/`, {\n        method: 'PUT',\n        data: {isActive},\n      });\n      addSuccessMessage(isActive ? t('Enabled key') : t('Disabled key'));\n    } catch (_err) {\n      addErrorMessage(isActive ? t('Error enabling key') : t('Error disabling key'));\n      this.setState({keyList: oldKeyList});\n    }\n  };\n\n  handleCreateKey = async () => {\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      const data: ProjectKey = await this.api.requestPromise(\n        `/projects/${orgId}/${projectId}/keys/`,\n        {\n          method: 'POST',\n        }\n      );\n\n      this.setState(state => ({\n        keyList: [...state.keyList, data],\n      }));\n      addSuccessMessage(t('Created a new key.'));\n    } catch (_err) {\n      addErrorMessage(t('Unable to create new key. Please try again.'));\n    }\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <EmptyMessage\n          icon={<IconFlag size=\"xl\" />}\n          description={t('There are no keys active for this project.')}\n        />\n      </Panel>\n    );\n  }\n\n  renderResults() {\n    const {location, organization, routes, params} = this.props;\n    const {orgId, projectId} = params;\n    const access = new Set(organization.access);\n\n    return (\n      <React.Fragment>\n        {this.state.keyList.map(key => (\n          <KeyRow\n            api={this.api}\n            access={access}\n            key={key.id}\n            orgId={orgId}\n            projectId={`${projectId}`}\n            data={key}\n            onToggle={this.handleToggleKey}\n            onRemove={this.handleRemoveKey}\n            routes={routes}\n            location={location}\n            params={params}\n          />\n        ))}\n        <Pagination pageLinks={this.state.keyListPageLinks} />\n      </React.Fragment>\n    );\n  }\n\n  renderBody() {\n    const access = new Set(this.props.organization.access);\n    const isEmpty = !this.state.keyList.length;\n\n    return (\n      <div data-test-id=\"project-keys\">\n        <SettingsPageHeader\n          title={t('Client Keys')}\n          action={\n            access.has('project:write') ? (\n              <Button\n                onClick={this.handleCreateKey}\n                size=\"small\"\n                priority=\"primary\"\n                icon={<IconAdd size=\"xs\" isCircled />}\n              >\n                {t('Generate New Key')}\n              </Button>\n            ) : null\n          }\n        />\n        <TextBlock>\n          {tct(\n            `To send data to Sentry you will need to configure an SDK with a client key\n          (usually referred to as the [code:SENTRY_DSN] value). For more\n          information on integrating Sentry with your application take a look at our\n          [link:documentation].`,\n            {\n              link: <ExternalLink href=\"https://docs.sentry.io/\" />,\n              code: <code />,\n            }\n          )}\n        </TextBlock>\n\n        {isEmpty ? this.renderEmpty() : this.renderResults()}\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(withProject(ProjectKeys));\n"],"sourceRoot":""}