{"version":3,"sources":["webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/data/platforms.tsx","webpack:////workspace/node_modules/prismjs/themes/prism-tomorrow.css?ce43","webpack:////workspace/node_modules/prismjs/themes/prism-tomorrow.css","webpack:///./app/views/projectInstall/platform.tsx"],"names":["SentryDocumentTitle","props","_title","title","objSlug","children","otherPlatform","integrations","link","type","id","name","t","concat","platforms","map","platform","i","language","filter","integration","tracing","includes","content","module","options","transform","undefined","locals","exports","push","ProjectInstallPlatform","state","loading","error","html","fetchData","a","api","params","orgId","projectId","setState","loadDocs","this","window","scrollTo","redirectToNeutralDocs","url","browserHistory","find","p","issueStreamLink","performanceOverviewLink","gettingStartedLink","platformLink","Fragment","StyledPageHeader","gap","size","to","href","external","icon","tct","docLink","onRetry","DocumentationWrapper","dangerouslySetInnerHTML","__html","isGettingStarted","key","slugs","passthroughPlaceholderProject","projects","initiallyLoaded","fetching","fetchError","projectsLoading","projectFilter","length","project","showPerformancePrompt","performancePlatforms","features","hookName","hasFeature","StyledAlert","StyledButtonBar","priority","busy","pathname","query","hash","location","indexOf","React","Component","space","theme","borderRadius","ButtonBar","breakpoints","PageHeader","Alert","withApi","withOrganization"],"mappings":"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","file":"ProjectInstallPlatform.js","sourcesContent":["import React, {FunctionComponent} from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype DocumentTitleProps = {\n  // Main page title\n  title: string;\n  // Organization or project slug to give title some context\n  objSlug: string;\n  children?: React.ReactNode;\n};\n\nconst SentryDocumentTitle: FunctionComponent<DocumentTitleProps> = (\n  props: DocumentTitleProps\n) => {\n  const _title = `${props.title} - ${props.objSlug} - Sentry`;\n  return <DocumentTitle title={_title}>{props.children}</DocumentTitle>;\n};\n\nexport default SentryDocumentTitle;\n","/* eslint import/no-unresolved:0 import/order:0 */\nimport {PlatformIntegration} from 'app/types';\nimport {platforms} from 'integration-docs-platforms';\nimport {t} from 'app/locale';\n\nimport {tracing} from './platformCategories';\n\nconst otherPlatform = {\n  integrations: [\n    {\n      link: 'https://docs.sentry.io/platforms/',\n      type: 'language',\n      id: 'other',\n      name: t('Other'),\n    },\n  ],\n  id: 'other',\n  name: t('Other'),\n};\n\nexport default ([] as PlatformIntegration[]).concat(\n  [],\n  ...[...platforms, otherPlatform].map(platform =>\n    platform.integrations\n      .map(i => ({...i, language: platform.id}))\n      // filter out any tracing platforms; as they're not meant to be used as a platform for\n      // the project creation flow\n      .filter(integration => !(tracing as readonly string[]).includes(integration.id))\n  )\n);\n","\nvar content = require(\"!!../../css-loader/dist/cjs.js!./prism-tomorrow.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../css-loader/dist/cjs.js!./prism-tomorrow.css\", function() {\n\t\tvar newContent = require(\"!!../../css-loader/dist/cjs.js!./prism-tomorrow.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"/**\\n * prism.js tomorrow night eighties for JavaScript, CoffeeScript, CSS and HTML\\n * Based on https://github.com/chriskempson/tomorrow-theme\\n * @author Rose Pritchard\\n */\\n\\ncode[class*=\\\"language-\\\"],\\npre[class*=\\\"language-\\\"] {\\n\\tcolor: #ccc;\\n\\tbackground: none;\\n\\tfont-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\\n\\tfont-size: 1em;\\n\\ttext-align: left;\\n\\twhite-space: pre;\\n\\tword-spacing: normal;\\n\\tword-break: normal;\\n\\tword-wrap: normal;\\n\\tline-height: 1.5;\\n\\n\\t-moz-tab-size: 4;\\n\\t-o-tab-size: 4;\\n\\ttab-size: 4;\\n\\n\\t-webkit-hyphens: none;\\n\\t-moz-hyphens: none;\\n\\t-ms-hyphens: none;\\n\\thyphens: none;\\n\\n}\\n\\n/* Code blocks */\\npre[class*=\\\"language-\\\"] {\\n\\tpadding: 1em;\\n\\tmargin: .5em 0;\\n\\toverflow: auto;\\n}\\n\\n:not(pre) > code[class*=\\\"language-\\\"],\\npre[class*=\\\"language-\\\"] {\\n\\tbackground: #2d2d2d;\\n}\\n\\n/* Inline code */\\n:not(pre) > code[class*=\\\"language-\\\"] {\\n\\tpadding: .1em;\\n\\tborder-radius: .3em;\\n\\twhite-space: normal;\\n}\\n\\n.token.comment,\\n.token.block-comment,\\n.token.prolog,\\n.token.doctype,\\n.token.cdata {\\n\\tcolor: #999;\\n}\\n\\n.token.punctuation {\\n\\tcolor: #ccc;\\n}\\n\\n.token.tag,\\n.token.attr-name,\\n.token.namespace,\\n.token.deleted {\\n\\tcolor: #e2777a;\\n}\\n\\n.token.function-name {\\n\\tcolor: #6196cc;\\n}\\n\\n.token.boolean,\\n.token.number,\\n.token.function {\\n\\tcolor: #f08d49;\\n}\\n\\n.token.property,\\n.token.class-name,\\n.token.constant,\\n.token.symbol {\\n\\tcolor: #f8c555;\\n}\\n\\n.token.selector,\\n.token.important,\\n.token.atrule,\\n.token.keyword,\\n.token.builtin {\\n\\tcolor: #cc99cd;\\n}\\n\\n.token.string,\\n.token.char,\\n.token.attr-value,\\n.token.regex,\\n.token.variable {\\n\\tcolor: #7ec699;\\n}\\n\\n.token.operator,\\n.token.entity,\\n.token.url {\\n\\tcolor: #67cdcc;\\n}\\n\\n.token.important,\\n.token.bold {\\n\\tfont-weight: bold;\\n}\\n.token.italic {\\n\\tfont-style: italic;\\n}\\n\\n.token.entity {\\n\\tcursor: help;\\n}\\n\\n.token.inserted {\\n\\tcolor: green;\\n}\\n\", \"\"]);\n\n","import {browserHistory, WithRouterProps} from 'react-router';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport 'prismjs/themes/prism-tomorrow.css';\n\nimport {Client} from 'app/api';\nimport {\n  performance as performancePlatforms,\n  PlatformKey,\n} from 'app/data/platformCategories';\nimport {loadDocs} from 'app/actionCreators/projects';\nimport {t, tct} from 'app/locale';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport Feature from 'app/components/acl/feature';\nimport {IconInfo} from 'app/icons';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport NotFound from 'app/components/errors/notFound';\nimport {PageHeader} from 'app/styles/organization';\nimport Projects from 'app/utils/projects';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport platforms from 'app/data/platforms';\nimport space from 'app/styles/space';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport {Organization, Project} from 'app/types';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n} & WithRouterProps<{orgId: string; projectId: string; platform: string}, {}>;\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n  html: string;\n};\n\nclass ProjectInstallPlatform extends React.Component<Props, State> {\n  state: State = {\n    loading: true,\n    error: false,\n    html: '',\n  };\n\n  componentDidMount() {\n    this.fetchData();\n    window.scrollTo(0, 0);\n\n    const {platform} = this.props.params;\n\n    //redirect if platform is not known.\n    if (!platform || platform === 'other') {\n      this.redirectToNeutralDocs();\n    }\n  }\n\n  get isGettingStarted() {\n    return window.location.href.indexOf('getting-started') > 0;\n  }\n\n  fetchData = async () => {\n    const {api, params} = this.props;\n    const {orgId, projectId, platform} = params;\n\n    this.setState({loading: true});\n\n    try {\n      const {html} = await loadDocs(api, orgId, projectId, platform as PlatformKey);\n      this.setState({html});\n    } catch (error) {\n      this.setState({error});\n    }\n\n    this.setState({loading: false});\n  };\n\n  redirectToNeutralDocs() {\n    const {orgId, projectId} = this.props.params;\n\n    const url = `/organizations/${orgId}/projects/${projectId}/getting-started/`;\n\n    browserHistory.push(url);\n  }\n\n  render() {\n    const {params} = this.props;\n    const {orgId, projectId} = params;\n\n    const platform = platforms.find(p => p.id === params.platform);\n\n    if (!platform) {\n      return <NotFound />;\n    }\n\n    const issueStreamLink = `/organizations/${orgId}/issues/`;\n    const performanceOverviewLink = `/organizations/${orgId}/performance/`;\n    const gettingStartedLink = `/organizations/${orgId}/projects/${projectId}/getting-started/`;\n    const platformLink = platform.link ?? undefined;\n\n    return (\n      <React.Fragment>\n        <StyledPageHeader>\n          <h2>{t('Configure %(platform)s', {platform: platform.name})}</h2>\n          <ButtonBar gap={1}>\n            <Button size=\"small\" to={gettingStartedLink}>\n              {t('< Back')}\n            </Button>\n            <Button size=\"small\" href={platformLink} external>\n              {t('Full Documentation')}\n            </Button>\n          </ButtonBar>\n        </StyledPageHeader>\n\n        <div>\n          <Alert type=\"info\" icon={<IconInfo />}>\n            {tct(\n              `\n             This is a quick getting started guide. For in-depth instructions\n             on integrating Sentry with [platform], view\n             [docLink:our complete documentation].`,\n              {\n                platform: platform.name,\n                docLink: <a href={platformLink} />,\n              }\n            )}\n          </Alert>\n\n          {this.state.loading ? (\n            <LoadingIndicator />\n          ) : this.state.error ? (\n            <LoadingError onRetry={this.fetchData} />\n          ) : (\n            <React.Fragment>\n              <SentryDocumentTitle\n                title={`${t('Configure')} ${platform.name}`}\n                objSlug={projectId}\n              />\n              <DocumentationWrapper dangerouslySetInnerHTML={{__html: this.state.html}} />\n            </React.Fragment>\n          )}\n\n          {this.isGettingStarted && (\n            <Projects\n              key={`${orgId}-${projectId}`}\n              orgId={orgId}\n              slugs={[projectId]}\n              passthroughPlaceholderProject={false}\n            >\n              {({projects, initiallyLoaded, fetching, fetchError}) => {\n                const projectsLoading = !initiallyLoaded && fetching;\n                const projectFilter =\n                  !projectsLoading && !fetchError && projects.length\n                    ? {\n                        project: (projects[0] as Project).id,\n                      }\n                    : {};\n                const showPerformancePrompt = performancePlatforms.includes(\n                  platform.id as PlatformKey\n                );\n\n                return (\n                  <React.Fragment>\n                    {showPerformancePrompt && (\n                      <Feature\n                        features={['organization:performance-view']}\n                        hookName=\"feature-disabled:performance-new-project\"\n                      >\n                        {({hasFeature}) => {\n                          if (hasFeature) {\n                            return null;\n                          }\n                          return (\n                            <StyledAlert type=\"info\" icon={<IconInfo />}>\n                              {t(\n                                `Your selected platform supports performance, but your organization does not have performance enabled.`\n                              )}\n                            </StyledAlert>\n                          );\n                        }}\n                      </Feature>\n                    )}\n\n                    <StyledButtonBar gap={1}>\n                      <Button\n                        priority=\"primary\"\n                        busy={projectsLoading}\n                        to={{\n                          pathname: issueStreamLink,\n                          query: projectFilter,\n                          hash: '#welcome',\n                        }}\n                      >\n                        {t('Take me to Issues')}\n                      </Button>\n                      <Button\n                        busy={projectsLoading}\n                        to={{\n                          pathname: performanceOverviewLink,\n                          query: projectFilter,\n                        }}\n                      >\n                        {t('Take me to Performance')}\n                      </Button>\n                    </StyledButtonBar>\n                  </React.Fragment>\n                );\n              }}\n            </Projects>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst DocumentationWrapper = styled('div')`\n  .gatsby-highlight {\n    margin-bottom: ${space(3)};\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  .alert {\n    margin-bottom: ${space(3)};\n    border-radius: ${p => p.theme.borderRadius};\n  }\n\n  p {\n    line-height: 1.5;\n  }\n  pre {\n    word-break: break-all;\n    white-space: pre-wrap;\n  }\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  margin-top: ${space(3)};\n  width: max-content;\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    width: auto;\n    grid-row-gap: ${space(1)};\n    grid-auto-flow: row;\n  }\n`;\n\nconst StyledPageHeader = styled(PageHeader)`\n  margin-bottom: ${space(3)};\n\n  h2 {\n    margin: 0;\n  }\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    flex-direction: column;\n    align-items: flex-start;\n\n    h2 {\n      margin-bottom: ${space(2)};\n    }\n  }\n`;\n\nconst StyledAlert = styled(Alert)`\n  margin-top: ${space(2)};\n`;\n\nexport {ProjectInstallPlatform};\nexport default withApi(withOrganization(ProjectInstallPlatform));\n"],"sourceRoot":""}