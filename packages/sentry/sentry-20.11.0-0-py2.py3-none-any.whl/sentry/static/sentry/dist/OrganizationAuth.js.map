{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/organization/permissionAlert.tsx","webpack:///./app/views/settings/organizationAuth/providerItem.jsx","webpack:///./app/views/settings/organizationAuth/organizationAuthList.jsx","webpack:///./app/views/settings/organizationAuth/index.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","PermissionAlert","access","hasAccess","type","size","t","ProviderItem","handleConfigure","e","onConfigure","provider","key","renderDisabledLock","features","renderInstallButton","hasFeature","name","value","disabled","onClick","active","featureKey","requiredFeature","featureProps","hookName","descopeFeatureName","filter","f","renderDisabled","children","alignItems","ProviderInfo","ProviderLogo","className","replace","toLowerCase","ProviderName","ProviderDescription","FeatureBadge","ActiveIndicator","PureComponent","theme","green300","DisabledHovercard","Hovercard","LockedFeature","containerClassName","body","hideHelpToggle","message","featureName","providerPopularity","google","github","okta","saml2","onelogin","rippling","auth0","OrganizationAuthList","activeProvider","organization","context","providerList","sort","a","b","aEnabled","includes","warn2FADisable","require2FA","some","tct","link","href","m","mb","slug","method","getCookie","CSRF_COOKIE_NAME","map","length","contextTypes","SentryTypes","Organization","OrganizationAuth","handleSendReminders","_provider","setState","sendRemindersBusy","api","request","params","orgId","data","success","addSuccessMessage","error","addErrorMessage","complete","busy","init","auth_url","window","location","handleDisableProvider","disableBusy","_nextProps","nextState","assign","state","renderLoading","find","provider_name"],"mappings":"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","file":"OrganizationAuth.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t} from 'app/locale';\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['org:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"sm\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner or manager role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nPermissionAlert.propTypes = {\n  access: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default PermissionAlert;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {PanelItem} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport Access from 'app/components/acl/access';\nimport Button from 'app/components/button';\nimport Feature from 'app/components/acl/feature';\nimport FeatureDisabled from 'app/components/acl/featureDisabled';\nimport Hovercard from 'app/components/hovercard';\nimport SentryTypes from 'app/sentryTypes';\nimport {IconLock} from 'app/icons';\nimport Tag from 'app/components/tagDeprecated';\nimport {descopeFeatureName} from 'app/utils';\n\nexport default class ProviderItem extends React.PureComponent {\n  static propTypes = {\n    provider: SentryTypes.AuthProvider.isRequired,\n    onConfigure: PropTypes.func.isRequired,\n    active: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    onConfigure: () => {},\n  };\n\n  handleConfigure = e => {\n    this.props.onConfigure(this.props.provider.key, e);\n  };\n\n  renderDisabledLock = p => <LockedFeature provider={p.provider} features={p.features} />;\n\n  renderInstallButton = ({provider, hasFeature}) => (\n    <Access access={['org:write']}>\n      {({hasAccess}) => (\n        <Button\n          type=\"submit\"\n          name=\"provider\"\n          size=\"small\"\n          value={provider.key}\n          disabled={!hasFeature || !hasAccess}\n          onClick={this.handleConfigure}\n        >\n          {t('Configure')}\n        </Button>\n      )}\n    </Access>\n  );\n\n  render() {\n    const {provider, active} = this.props;\n\n    // TODO(epurkhiser): We should probably use a more explicit hook name,\n    // instead of just the feature names (sso-basic, sso-saml2, etc).\n    const featureKey = provider.requiredFeature;\n    const featureProps = featureKey\n      ? {hookName: `feature-disabled:${descopeFeatureName(featureKey)}`}\n      : {};\n\n    return (\n      <Feature\n        {...featureProps}\n        features={[featureKey].filter(f => f)}\n        renderDisabled={({children, ...props}) =>\n          children({...props, renderDisabled: this.renderDisabledLock})\n        }\n      >\n        {({hasFeature, features, renderDisabled, renderInstallButton}) => (\n          <PanelItem alignItems=\"center\">\n            <ProviderInfo>\n              <ProviderLogo\n                className={`provider-logo ${provider.name\n                  .replace(/\\s/g, '-')\n                  .toLowerCase()}`}\n              />\n              <div>\n                <ProviderName>{provider.name}</ProviderName>\n                <ProviderDescription>\n                  {t('Enable your organization to sign in with %s.', provider.name)}\n                </ProviderDescription>\n              </div>\n            </ProviderInfo>\n\n            <FeatureBadge>\n              {!hasFeature && renderDisabled({provider, features})}\n            </FeatureBadge>\n\n            <div>\n              {active ? (\n                <ActiveIndicator />\n              ) : (\n                (renderInstallButton || this.renderInstallButton)({provider, hasFeature})\n              )}\n            </div>\n          </PanelItem>\n        )}\n      </Feature>\n    );\n  }\n}\n\nconst ProviderInfo = styled('div')`\n  flex: 1;\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-gap: ${space(2)};\n`;\n\nconst ProviderLogo = styled('div')`\n  height: 36px;\n  width: 36px;\n  border-radius: 3px;\n  margin-right: 0;\n  top: auto;\n`;\n\nconst ProviderName = styled('div')`\n  font-weight: bold;\n`;\n\nconst ProviderDescription = styled('div')`\n  margin-top: 6px;\n  font-size: 0.8em;\n`;\n\nconst FeatureBadge = styled('div')`\n  flex: 1;\n`;\n\nconst ActiveIndicator = styled(p => <div className={p.className}>{t('Active')}</div>)`\n  background: ${p => p.theme.green300};\n  color: #fff;\n  padding: 8px 12px;\n  border-radius: 2px;\n  font-size: 0.8em;\n`;\n\nconst DisabledHovercard = styled(Hovercard)`\n  width: 350px;\n`;\n\nconst LockedFeature = ({provider, features, className}) => (\n  <DisabledHovercard\n    containerClassName={className}\n    body={\n      <FeatureDisabled\n        features={features}\n        hideHelpToggle\n        message={t('%s SSO is disabled.', provider.name)}\n        featureName={t('SSO Auth')}\n      />\n    }\n  >\n    <Tag icon={<IconLock size=\"xs\" />}>disabled</Tag>\n  </DisabledHovercard>\n);\n\nLockedFeature.propTypes = {\n  provider: PropTypes.object.isRequired,\n  features: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {CSRF_COOKIE_NAME} from 'app/constants';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {descopeFeatureName} from 'app/utils';\nimport {t, tct} from 'app/locale';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport ExternalLink from 'app/components/links/externalLink';\nimport PermissionAlert from 'app/views/settings/organization/permissionAlert';\nimport SentryTypes from 'app/sentryTypes';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport getCookie from 'app/utils/getCookie';\n\nimport ProviderItem from './providerItem';\n\nconst providerPopularity = {\n  google: 0,\n  github: 1,\n  okta: 2,\n  'active-directory': 3,\n  saml2: 4,\n  onelogin: 5,\n  rippling: 6,\n  auth0: 7,\n};\n\nclass OrganizationAuthList extends React.Component {\n  static propTypes = {\n    providerList: PropTypes.arrayOf(SentryTypes.AuthProvider).isRequired,\n    activeProvider: PropTypes.object,\n  };\n\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  render() {\n    const {activeProvider} = this.props;\n    const {organization} = this.context;\n    const features = organization.features;\n\n    // Sort provider list twice: first, by popularity,\n    // and then a second time, to sort unavailable providers for the current plan to the end of the list.\n    const sortedByPopularity = (this.props.providerList || []).sort((a, b) => {\n      if (!(a.key in providerPopularity)) {\n        return -1;\n      }\n      if (!(b.key in providerPopularity)) {\n        return 1;\n      }\n      if (providerPopularity[a.key] === providerPopularity[b.key]) {\n        return 0;\n      }\n      return providerPopularity[a.key] > providerPopularity[b.key] ? 1 : -1;\n    });\n\n    const providerList = sortedByPopularity.sort((a, b) => {\n      const aEnabled = features.includes(descopeFeatureName(a.requiredFeature));\n      const bEnabled = features.includes(descopeFeatureName(b.requiredFeature));\n      if (aEnabled === bEnabled) {\n        return 0;\n      }\n      return aEnabled ? -1 : 1;\n    });\n\n    const warn2FADisable =\n      organization.require2FA &&\n      providerList.some(({requiredFeature}) =>\n        features.includes(descopeFeatureName(requiredFeature))\n      );\n\n    return (\n      <div className=\"sso\">\n        <SettingsPageHeader title=\"Authentication\" />\n        <PermissionAlert />\n        <Panel>\n          <PanelHeader>{t('Choose a provider')}</PanelHeader>\n          <PanelBody>\n            {!activeProvider && (\n              <PanelAlert type=\"info\">\n                {tct(\n                  'Get started with Single Sign-on for your organization by selecting a provider. Read more in our [link:SSO documentation].',\n                  {\n                    link: <ExternalLink href=\"https://docs.sentry.io/learn/sso/\" />,\n                  }\n                )}\n              </PanelAlert>\n            )}\n\n            {warn2FADisable && (\n              <PanelAlert m={0} mb={0} type=\"warning\">\n                {t('Require 2FA will be disabled if you enable SSO.')}\n              </PanelAlert>\n            )}\n\n            <form\n              action={`/organizations/${organization.slug}/auth/configure/`}\n              method=\"POST\"\n            >\n              <input\n                type=\"hidden\"\n                name=\"csrfmiddlewaretoken\"\n                value={getCookie(CSRF_COOKIE_NAME) || ''}\n              />\n              <input type=\"hidden\" name=\"init\" value=\"1\" />\n\n              {providerList.map(provider => (\n                <ProviderItem\n                  key={provider.key}\n                  provider={provider}\n                  active={activeProvider && provider.key === activeProvider.key}\n                />\n              ))}\n              {providerList.length === 0 && (\n                <EmptyMessage>\n                  {t('No authentication providers are available.')}\n                </EmptyMessage>\n              )}\n            </form>\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default OrganizationAuthList;\n","import React from 'react';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport SentryTypes from 'app/sentryTypes';\nimport routeTitleGen from 'app/utils/routeTitle';\n\nimport OrganizationAuthList from './organizationAuthList';\n\nclass OrganizationAuth extends AsyncView {\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  UNSAFE_componentWillUpdate(_nextProps, nextState) {\n    const access = this.context.organization.access;\n\n    if (nextState.provider && access.includes('org:write')) {\n      // If SSO provider is configured, keep showing loading while we redirect\n      // to django configuration view\n      window.location.assign(`/organizations/${this.props.params.orgId}/auth/configure/`);\n    }\n  }\n\n  getEndpoints() {\n    return [\n      ['providerList', `/organizations/${this.props.params.orgId}/auth-providers/`],\n      ['provider', `/organizations/${this.props.params.orgId}/auth-provider/`],\n    ];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('Auth Settings'), this.context.organization.slug, false);\n  }\n\n  handleSendReminders = _provider => {\n    this.setState({sendRemindersBusy: true});\n\n    this.api.request(\n      `/organizations/${this.props.params.orgId}/auth-provider/send-reminders/`,\n      {\n        method: 'POST',\n        data: {},\n        success: () => addSuccessMessage(t('Sent reminders to members')),\n        error: () => addErrorMessage(t('Failed to send reminders')),\n        complete: () => this.setState({sendRemindersBusy: false}),\n      }\n    );\n  };\n\n  // Configure auth provider\n  handleConfigure = provider => {\n    this.setState({\n      busy: true,\n    });\n\n    this.api.request(`/organizations/${this.props.params.orgId}/auth-provider/`, {\n      method: 'POST',\n      data: {provider, init: true},\n      success: data => {\n        // Redirect to auth provider URL\n        if (data && data.auth_url) {\n          window.location.href = data.auth_url;\n        }\n      },\n      error: () => {\n        this.setState({busy: false});\n      },\n    });\n  };\n\n  // Disable auth provider\n  handleDisableProvider = provider => {\n    this.setState({\n      disableBusy: true,\n    });\n\n    this.api.request(`/organizations/${this.props.params.orgId}/auth-provider/`, {\n      method: 'DELETE',\n      data: {provider},\n      success: () => {\n        this.setState({\n          provider: null,\n          disableBusy: false,\n        });\n      },\n      error: () => {\n        this.setState({disableBusy: false});\n      },\n    });\n  };\n\n  renderBody() {\n    const {providerList, provider} = this.state;\n    const access = this.context.organization.access;\n\n    if (access.includes('org:write') && provider) {\n      // If SSO provider is configured, keep showing loading while we redirect\n      // to django configuration view\n      return this.renderLoading();\n    }\n\n    const activeProvider = providerList.find(\n      p => provider && p.key === provider.provider_name\n    );\n\n    return (\n      <OrganizationAuthList\n        activeProvider={activeProvider}\n        providerList={providerList}\n        onConfigure={this.handleConfigure}\n      />\n    );\n  }\n}\n\nexport default OrganizationAuth;\n"],"sourceRoot":""}