{"version":3,"sources":["webpack:///./app/components/commitLink.tsx","webpack:///./app/components/pullRequestLink.tsx","webpack:///./app/views/organizationGroupDetails/groupActivityItem.jsx","webpack:///./app/views/organizationGroupDetails/groupActivity.tsx"],"names":["SUPPORTED_PROVIDERS","icon","size","providerIds","commitUrl","baseUrl","commitId","CommitLink","inline","repository","t","shortId","getShortCommitHash","providerData","find","provider","includes","id","undefined","url","className","href","external","PullRequestLink","pullRequest","displayId","name","title","externalUrl","repo","split","pop","renderIcon","GroupActivityItem","this","props","author","item","orgSlug","projectId","data","issuesLink","type","version","tooltipRawVersion","commit","ignoreDuration","duration","seconds","ignoreCount","ignoreWindow","tct","count","ignoreUserCount","ignoreUserWindow","location","tn","fingerprints","length","destination","source","assignee","assigneeType","team","TeamStore","getById","slug","user","MemberListStore","email","issues","React","Component","GroupActivity","state","createBusy","error","errorJSON","inputId","uniqueId","handleNoteDelete","a","modelId","oldText","text","api","group","addLoadingMessage","deleteNote","clearIndicators","addErrorMessage","handleNoteCreate","note","setState","createNote","responseJSON","DEFAULT_ERROR_JSON","handleNoteUpdate","updateNote","me","ConfigStore","get","projectSlugs","project","noteProps","minHeight","placeholder","key","storageKey","itemKey","onCreate","busy","activity","map","authorName","mini","showTime","dateCreated","onDelete","onUpdate","date","header","params","orgId","withApi","withOrganization"],"mappings":"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","file":"GroupActivity.js","sourcesContent":["import React from 'react';\n\nimport {Repository} from 'app/types';\nimport {t} from 'app/locale';\nimport {getShortCommitHash} from 'app/utils';\nimport Button from 'app/components/button';\nimport {IconBitbucket, IconGithub, IconGitlab, IconVsts} from 'app/icons';\nimport ExternalLink from 'app/components/links/externalLink';\n\ntype CommitFormatterParameters = {\n  baseUrl: string;\n  commitId: string;\n};\n\ntype CommitProvider = {\n  icon: React.ReactNode;\n  providerIds: string[];\n  commitUrl: (CommitFormatterParameters) => string;\n};\n\n// TODO(epurkhiser, jess): This should be moved into plugins.\nconst SUPPORTED_PROVIDERS: Readonly<CommitProvider[]> = [\n  {\n    icon: <IconGithub size=\"xs\" />,\n    providerIds: ['github', 'integrations:github', 'integrations:github_enterprise'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconBitbucket size=\"xs\" />,\n    providerIds: ['bitbucket', 'integrations:bitbucket'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commits/${commitId}`,\n  },\n  {\n    icon: <IconVsts size=\"xs\" />,\n    providerIds: ['visualstudio', 'integrations:vsts'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconGitlab size=\"xs\" />,\n    providerIds: ['gitlab', 'integrations:gitlab'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n];\n\ntype Props = {\n  commitId: string;\n  repository?: Repository;\n  inline?: boolean;\n};\n\nfunction CommitLink({inline, commitId, repository}: Props) {\n  if (!commitId || !repository) {\n    return <span>{t('Unknown Commit')}</span>;\n  }\n\n  const shortId = getShortCommitHash(commitId);\n\n  const providerData = SUPPORTED_PROVIDERS.find(provider => {\n    if (!repository.provider) {\n      return false;\n    }\n    return provider.providerIds.includes(repository.provider.id);\n  });\n\n  if (providerData === undefined) {\n    return <span>{shortId}</span>;\n  }\n\n  const commitUrl =\n    repository.url &&\n    providerData.commitUrl({\n      commitId,\n      baseUrl: repository.url,\n    });\n\n  return !inline ? (\n    <Button external href={commitUrl} size=\"small\" icon={providerData.icon}>\n      {shortId}\n    </Button>\n  ) : (\n    <ExternalLink className=\"inline-commit\" href={commitUrl}>\n      {providerData.icon}\n      {' ' + shortId}\n    </ExternalLink>\n  );\n}\n\nexport default CommitLink;\n","import React from 'react';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab} from 'app/icons';\nimport {Repository, PullRequest} from 'app/types';\n\nfunction renderIcon(repo: Repository) {\n  if (!repo.provider) {\n    return null;\n  }\n\n  const {id} = repo.provider;\n  const providerId = id.includes(':') ? id.split(':').pop() : id;\n\n  switch (providerId) {\n    case 'github':\n      return <IconGithub size=\"xs\" />;\n    case 'gitlab':\n      return <IconGitlab size=\"xs\" />;\n    case 'bitbucket':\n      return <IconBitbucket size=\"xs\" />;\n    default:\n      return null;\n  }\n}\n\ntype Props = {\n  pullRequest: PullRequest;\n  repository: Repository;\n  inline?: boolean;\n};\n\nconst PullRequestLink = ({pullRequest, repository, inline}: Props) => {\n  const displayId = `${repository.name} #${pullRequest.id}: ${pullRequest.title}`;\n\n  return pullRequest.externalUrl ? (\n    <ExternalLink\n      className={inline ? 'inline-commit' : 'btn btn-default btn-sm'}\n      href={pullRequest.externalUrl}\n    >\n      {renderIcon(repository)}\n      {inline ? '' : ' '}\n      {displayId}\n    </ExternalLink>\n  ) : (\n    <span>{displayId}</span>\n  );\n};\n\nexport default PullRequestLink;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t, tct, tn} from 'app/locale';\nimport CommitLink from 'app/components/commitLink';\nimport Duration from 'app/components/duration';\nimport MemberListStore from 'app/stores/memberListStore';\nimport PullRequestLink from 'app/components/pullRequestLink';\nimport TeamStore from 'app/stores/teamStore';\nimport Version from 'app/components/version';\n\nclass GroupActivityItem extends React.Component {\n  static propTypes = {\n    author: PropTypes.node,\n    item: PropTypes.object,\n    orgSlug: PropTypes.string,\n    projectId: PropTypes.string,\n  };\n\n  render() {\n    const {author, item, orgSlug, projectId} = this.props;\n    const {data} = item;\n\n    const issuesLink = `/organizations/${orgSlug}/issues/`;\n\n    switch (item.type) {\n      case 'note':\n        return t('%s left a comment', author);\n      case 'set_resolved':\n        return t('%s marked this issue as resolved', author);\n      case 'set_resolved_by_age':\n        return t('%(author)s marked this issue as resolved due to inactivity', {\n          author,\n        });\n      case 'set_resolved_in_release':\n        return data.version\n          ? t('%(author)s marked this issue as resolved in %(version)s', {\n              author,\n              version: (\n                <Version version={data.version} projectId={projectId} tooltipRawVersion />\n              ),\n            })\n          : t('%s marked this issue as resolved in the upcoming release', author);\n      case 'set_resolved_in_commit':\n        return t('%(author)s marked this issue as resolved in %(version)s', {\n          author,\n          version: (\n            <CommitLink\n              inline\n              commitId={data.commit && data.commit.id}\n              repository={data.commit && data.commit.repository}\n            />\n          ),\n        });\n      case 'set_resolved_in_pull_request':\n        return t('%(author)s marked this issue as resolved in %(version)s', {\n          author,\n          version: (\n            <PullRequestLink\n              inline\n              pullRequest={data.pullRequest}\n              repository={data.pullRequest && data.pullRequest.repository}\n            />\n          ),\n        });\n      case 'set_unresolved':\n        return t('%s marked this issue as unresolved', author);\n      case 'set_ignored':\n        if (data.ignoreDuration) {\n          return t('%(author)s ignored this issue for %(duration)s', {\n            author,\n            duration: <Duration seconds={data.ignoreDuration * 60} />,\n          });\n        } else if (data.ignoreCount && data.ignoreWindow) {\n          return tct(\n            '[author] ignored this issue until it happens [count] time(s) in [duration]',\n            {\n              author,\n              count: data.ignoreCount,\n              duration: <Duration seconds={data.ignoreWindow * 60} />,\n            }\n          );\n        } else if (data.ignoreCount) {\n          return tct('[author] ignored this issue until it happens [count] time(s)', {\n            author,\n            count: data.ignoreCount,\n          });\n        } else if (data.ignoreUserCount && data.ignoreUserWindow) {\n          return tct(\n            '[author] ignored this issue until it affects [count] user(s) in [duration]',\n            {\n              author,\n              count: data.ignoreUserCount,\n              duration: <Duration seconds={data.ignoreUserWindow * 60} />,\n            }\n          );\n        } else if (data.ignoreUserCount) {\n          return tct('[author] ignored this issue until it affects [count] user(s)', {\n            author,\n            count: data.ignoreUserCount,\n          });\n        }\n        return t('%s ignored this issue', author);\n      case 'set_public':\n        return t('%s made this issue public', author);\n      case 'set_private':\n        return t('%s made this issue private', author);\n      case 'set_regression':\n        return data.version\n          ? t('%(author)s marked this issue as a regression in %(version)s', {\n              author,\n              version: (\n                <Version version={data.version} projectId={projectId} tooltipRawVersion />\n              ),\n            })\n          : t('%s marked this issue as a regression', author);\n      case 'create_issue':\n        return t('%(author)s created an issue on %(provider)s titled %(title)s', {\n          author,\n          provider: data.provider,\n          title: <a href={data.location}>{data.title}</a>,\n        });\n      case 'unmerge_source':\n        return tn(\n          '%2$s migrated %1$s fingerprint to %3$s',\n          '%2$s migrated %1$s fingerprints to %3$s',\n          data.fingerprints.length,\n          author,\n          data.destination ? (\n            <a href={`${issuesLink}${data.destination.id}`}>{data.destination.shortId}</a>\n          ) : (\n            t('a group')\n          )\n        );\n      case 'unmerge_destination':\n        return tn(\n          '%2$s migrated %1$s fingerprint from %3$s',\n          '%2$s migrated %1$s fingerprints from %3$s',\n          data.fingerprints.length,\n          author,\n          data.source ? (\n            <a href={`${issuesLink}${data.source.id}`}>{data.source.shortId}</a>\n          ) : (\n            t('a group')\n          )\n        );\n      case 'first_seen':\n        return t('%s first saw this issue', author);\n      case 'assigned':\n        let assignee;\n\n        if (data.assigneeType === 'team') {\n          const team = TeamStore.getById(data.assignee);\n          assignee = team ? team.slug : '<unknown-team>';\n\n          return t('%(author)s assigned this issue to #%(assignee)s', {\n            author,\n            assignee,\n          });\n        }\n\n        if (item.user && data.assignee === item.user.id) {\n          return t('%s assigned this issue to themselves', author);\n        } else {\n          assignee = MemberListStore.getById(data.assignee);\n          if (assignee && assignee.email) {\n            return t('%(author)s assigned this issue to %(assignee)s', {\n              author,\n              assignee: assignee.email,\n            });\n          } else {\n            return t('%s assigned this issue to an unknown user', author);\n          }\n        }\n      case 'unassigned':\n        return t('%s unassigned this issue', author);\n      case 'merge':\n        return tn(\n          '%2$s merged %1$s issue into this issue',\n          '%2$s merged %1$s issues into this issue',\n          data.issues.length,\n          author\n        );\n      case 'reprocess':\n        return t(\n          '%(author)s reprocessed this issue, some events may have moved into new issues',\n          {author}\n        );\n      default:\n        return ''; // should never hit (?)\n    }\n  }\n}\n\nexport default GroupActivityItem;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router/lib/Router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport {createNote, deleteNote, updateNote} from 'app/actionCreators/group';\nimport {t} from 'app/locale';\nimport {uniqueId} from 'app/utils/guid';\nimport ActivityAuthor from 'app/components/activity/author';\nimport ActivityItem from 'app/components/activity/item';\nimport ConfigStore from 'app/stores/configStore';\nimport ErrorBoundary from 'app/components/errorBoundary';\nimport Note from 'app/components/activity/note';\nimport NoteInputWithStorage from 'app/components/activity/note/inputWithStorage';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport {Activity, Group, Organization, User} from 'app/types';\nimport {Client} from 'app/api';\nimport {CreateError} from 'app/components/activity/note/types';\nimport {DEFAULT_ERROR_JSON} from 'app/constants';\n\nimport GroupActivityItem from './groupActivityItem';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  group: Group;\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype State = {\n  createBusy: boolean;\n  error: boolean;\n  errorJSON: CreateError | null;\n  inputId: string;\n};\n\nclass GroupActivity extends React.Component<Props, State> {\n  // TODO(dcramer): only re-render on group/activity change\n  state: State = {\n    createBusy: false,\n    error: false,\n    errorJSON: null,\n    inputId: uniqueId(),\n  };\n\n  handleNoteDelete = async ({modelId, text: oldText}) => {\n    const {api, group} = this.props;\n\n    addLoadingMessage(t('Removing comment...'));\n\n    try {\n      await deleteNote(api, group, modelId, oldText);\n      clearIndicators();\n    } catch (_err) {\n      addErrorMessage(t('Failed to delete comment'));\n    }\n  };\n\n  /**\n   * Note: This is nearly the same logic as `app/views/alerts/details/activity`\n   * This can be abstracted a bit if we create more objects that can have activities\n   */\n  handleNoteCreate = async note => {\n    const {api, group} = this.props;\n\n    this.setState({\n      createBusy: true,\n    });\n\n    addLoadingMessage(t('Posting comment...'));\n\n    try {\n      await createNote(api, group, note);\n\n      this.setState({\n        createBusy: false,\n\n        // This is used as a `key` to Note Input so that after successful post\n        // we reset the value of the input\n        inputId: uniqueId(),\n      });\n      clearIndicators();\n    } catch (error) {\n      this.setState({\n        createBusy: false,\n        error: true,\n        errorJSON: error.responseJSON || DEFAULT_ERROR_JSON,\n      });\n      addErrorMessage(t('Unable to post comment'));\n    }\n  };\n\n  handleNoteUpdate = async (note, {modelId, text: oldText}) => {\n    const {api, group} = this.props;\n\n    addLoadingMessage(t('Updating comment...'));\n\n    try {\n      await updateNote(api, group, note, modelId, oldText);\n      clearIndicators();\n    } catch (error) {\n      this.setState({\n        error: true,\n        errorJSON: error.responseJSON || DEFAULT_ERROR_JSON,\n      });\n      addErrorMessage(t('Unable to update comment'));\n    }\n  };\n\n  render() {\n    const {group} = this.props;\n    const me = ConfigStore.get('user');\n    const projectSlugs = group && group.project ? [group.project.slug] : [];\n    const noteProps = {\n      minHeight: 140,\n      group,\n      projectSlugs,\n      placeholder: t(\n        'Add details or updates to this event. \\nTag users with @, or teams with #'\n      ),\n    };\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <div>\n            <ActivityItem author={{type: 'user', user: me}}>\n              {() => (\n                <NoteInputWithStorage\n                  key={this.state.inputId}\n                  storageKey=\"groupinput:latest\"\n                  itemKey={group.id}\n                  onCreate={this.handleNoteCreate}\n                  busy={this.state.createBusy}\n                  error={this.state.error}\n                  errorJSON={this.state.errorJSON}\n                  {...noteProps}\n                />\n              )}\n            </ActivityItem>\n\n            {group.activity.map((item: Activity) => {\n              const authorName = item.user ? item.user.name : 'Sentry';\n\n              if (item.type === 'note') {\n                return (\n                  <ErrorBoundary mini key={`note-${item.id}`}>\n                    <Note\n                      showTime={false}\n                      text={item.data.text}\n                      modelId={item.id}\n                      user={item.user as User}\n                      dateCreated={item.dateCreated}\n                      authorName={authorName}\n                      onDelete={this.handleNoteDelete}\n                      onUpdate={this.handleNoteUpdate}\n                      {...noteProps}\n                    />\n                  </ErrorBoundary>\n                );\n              } else {\n                return (\n                  <ErrorBoundary mini key={`item-${item.id}`}>\n                    <ActivityItem\n                      author={{type: item.user ? 'user' : 'system', user: item.user}}\n                      date={item.dateCreated}\n                      header={\n                        <GroupActivityItem\n                          author={<ActivityAuthor>{authorName}</ActivityAuthor>}\n                          item={item}\n                          orgSlug={this.props.params.orgId}\n                          projectId={group.project.id}\n                        />\n                      }\n                    />\n                  </ErrorBoundary>\n                );\n              }\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport {GroupActivity};\nexport default withApi(withOrganization(GroupActivity));\n"],"sourceRoot":""}