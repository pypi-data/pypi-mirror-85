{"version":3,"sources":["webpack:///./app/components/modals/recoveryOptionsModal.jsx"],"names":["RecoveryOptionsModal","args","handleSkipSms","setState","skipSms","state","this","props","authenticatorName","closeModal","Body","Header","authenticators","reduce","obj","item","id","recovery","sms","recoveryEnrolled","isEnrolled","displaySmsPrompt","Fragment","closeButton","onHide","t","type","className","onClick","name","autoFocus","priority","to","css","marginLeft","space","authId","AsyncComponent"],"mappings":"urBAUMA,E,gCASJ,aAAqB,6CAANC,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KAUXC,cAAgB,WACd,EAAKC,SAAS,CAACC,SAAS,KAVxB,EAAKC,MAAQ,CACXD,SAAS,GAHQ,E,mDAQnB,MAAO,CAAC,CAAC,iBAAkB,gC,mCAOhB,MAC2CE,KAAKC,MAApDC,EADI,EACJA,kBAAmBC,EADf,EACeA,WAAYC,EAD3B,EAC2BA,KAAMC,EADjC,EACiCA,OADjC,EAEuBL,KAAKD,MAAhCO,EAFI,EAEJA,eAAgBR,EAFZ,EAEYA,QAFZ,EAIaQ,EAAeC,QAAO,SAACC,EAAKC,GAElD,OADAD,EAAIC,EAAKC,IAAMD,EACRD,IACN,IAHIG,EAJI,EAIJA,SAAUC,EAJN,EAIMA,IAIXC,EAAmBF,GAAYA,EAASG,WACxCC,EAAmBH,IAAQA,EAAIE,aAAehB,EAEpD,OACE,YAAC,IAAMkB,SAAP,KACE,YAACX,EAAD,CAAQY,aAAW,EAACC,OAAQf,GACzBgB,YAAE,sCAGL,YAACf,EAAD,KACE,YAAC,IAAD,KACGe,YAAE,qDAAsDjB,IAE3D,YAAC,IAAD,KACGiB,YAAE,mEAGJJ,EAEC,YAAC,IAAD,CAAOK,KAAK,WACTD,YAAE,+DAIL,YAAC,IAAD,CAAOC,KAAK,WACTD,YAAE,2JAQRJ,EAEC,mBAAKM,UAAU,gBACb,YAAC,IAAD,CAAQC,QAAStB,KAAKJ,cAAe2B,KAAK,WAAWC,WAAS,GAC3DL,YAAE,mBAEL,YAAC,IAAD,CACEM,SAAS,UACTH,QAASnB,EACTuB,GAAE,yCAAoCd,EAAIF,GAAxC,YACFa,KAAK,WACLI,IAAG,YAAE,CAACC,WAAYC,YAAM,IAArB,gCACHL,WAAS,GAERL,YAAE,wBAKP,mBAAKE,UAAU,gBACb,YAAC,IAAD,CACEI,SAAS,UACTH,QAASnB,EACTuB,GACEb,EAAgB,yCACsBF,EAASmB,OAD/B,KAEZ,8BAENP,KAAK,WACLC,WAAS,GAERL,YAAE,6B,GAhGkBY,KAyGpBrC","file":"RecoveryOptionsModal.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t} from 'app/locale';\nimport Alert from 'app/components/alert';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Button from 'app/components/button';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport space from 'app/styles/space';\n\nclass RecoveryOptionsModal extends AsyncComponent {\n  static propTypes = {\n    closeModal: PropTypes.func,\n    onClose: PropTypes.func,\n    authenticatorName: PropTypes.string.isRequired,\n    Body: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n    Header: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  };\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      skipSms: false,\n    };\n  }\n\n  getEndpoints() {\n    return [['authenticators', '/users/me/authenticators/']];\n  }\n\n  handleSkipSms = () => {\n    this.setState({skipSms: true});\n  };\n\n  renderBody() {\n    const {authenticatorName, closeModal, Body, Header} = this.props;\n    const {authenticators, skipSms} = this.state;\n\n    const {recovery, sms} = authenticators.reduce((obj, item) => {\n      obj[item.id] = item;\n      return obj;\n    }, {});\n    const recoveryEnrolled = recovery && recovery.isEnrolled;\n    const displaySmsPrompt = sms && !sms.isEnrolled && !skipSms;\n\n    return (\n      <React.Fragment>\n        <Header closeButton onHide={closeModal}>\n          {t('Two-Factor Authentication Enabled')}\n        </Header>\n\n        <Body>\n          <TextBlock>\n            {t('Two-factor authentication via %s has been enabled.', authenticatorName)}\n          </TextBlock>\n          <TextBlock>\n            {t('You should now set up recovery options to secure your account.')}\n          </TextBlock>\n\n          {displaySmsPrompt ? (\n            // set up backup phone number\n            <Alert type=\"warning\">\n              {t('We recommend adding a phone number as a backup 2FA method.')}\n            </Alert>\n          ) : (\n            // get recovery codes\n            <Alert type=\"warning\">\n              {t(\n                `Recovery codes are the only way to access your account if you lose\n                  your device and cannot receive two-factor authentication codes.`\n              )}\n            </Alert>\n          )}\n        </Body>\n\n        {displaySmsPrompt ? (\n          // set up backup phone number\n          <div className=\"modal-footer\">\n            <Button onClick={this.handleSkipSms} name=\"skipStep\" autoFocus>\n              {t('Skip this step')}\n            </Button>\n            <Button\n              priority=\"primary\"\n              onClick={closeModal}\n              to={`/settings/account/security/mfa/${sms.id}/enroll/`}\n              name=\"addPhone\"\n              css={{marginLeft: space(1)}}\n              autoFocus\n            >\n              {t('Add a Phone Number')}\n            </Button>\n          </div>\n        ) : (\n          // get recovery codes\n          <div className=\"modal-footer\">\n            <Button\n              priority=\"primary\"\n              onClick={closeModal}\n              to={\n                recoveryEnrolled\n                  ? `/settings/account/security/mfa/${recovery.authId}/`\n                  : '/settings/account/security/'\n              }\n              name=\"getCodes\"\n              autoFocus\n            >\n              {t('Get Recovery Codes')}\n            </Button>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RecoveryOptionsModal;\n"],"sourceRoot":""}