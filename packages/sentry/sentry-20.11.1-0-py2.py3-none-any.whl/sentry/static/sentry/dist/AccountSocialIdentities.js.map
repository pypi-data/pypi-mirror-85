{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/account/accountIdentities.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","AccountIdentities","handleDisconnect","identity","identities","state","setState","newIdentities","filter","id","disconnectIdentity","t","length","map","IdentityPanelItem","key","providerLabel","size","onClick","bind","PanelItem"],"mappings":"0qBAQqBA,E,uIAKjB,MAAO,K,+BAIP,IAAMC,EAAQC,KAAKC,WACnB,OACE,YAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,WACjBC,KAAKE,uB,GATJC,KAHWL,E,6nBCiBfM,E,qIAcK,MACsDJ,KAAKK,MAA3DC,EADA,EACAA,KAAMP,EADN,EACMA,MAAOQ,EADb,EACaA,OAAQC,EADrB,EACqBA,KAAMC,EAD3B,EAC2BA,cAAkBJ,EAD7C,wDAEP,OACE,kBAASA,EACP,YAACK,EAAD,KACGJ,GAAQ,YAACK,EAAD,KAAOL,GACfP,GACC,YAACa,EAAD,CAAOJ,KAAMA,EAAMK,OAAQJ,GACzB,YAAC,IAAD,KAAcV,IAGjBQ,GAAU,YAACO,EAAD,CAAQN,KAAMA,GAAOD,IAGjCC,GAAQ,uBAAMA,Q,GA5BWO,IAAMC,WAAlCZ,E,kCAAAA,EAUGa,aAAe,CACpBR,eAAe,GA4BnB,IAAMC,EAAkB,YAAO,MAAP,8CAAH,2DAKfE,EAAQ,YAAO,MAAP,qCACV,SAAAM,GAAC,OACAA,EAAEL,QAAH,mDAFO,YAMC,SAAAK,GAAC,OACTA,EAAEV,KAAF,UACOW,YAAM,GADb,YACmBA,YAAM,GADzB,YAC+BA,YAAM,GADrC,gBAEOA,YAAM,GAFb,YAEmBA,YAAM,GAFzB,YAE+BA,YAAM,GAFrC,QAPO,YAaLR,EAAO,YAAO,MAAP,mCAAH,gBACQQ,YAAM,GADd,KAIJL,EAAS,YAAO,MAAP,sCACX,SAAAI,GAAC,OAAKA,EAAEV,KAAF,sBAAwBW,YAAM,IAAO,OADnC,KAINC,EAA4B,YAAOhB,EAAP,wDAAH,8BAIde,YAAM,GAJQ,KAOhBC,O,8tCCpFf,IAQMC,E,kLAgBJC,iBAAmB,SAACC,GAAuB,IAClCC,EAAc,EAAKC,MAAnBD,WAEP,EAAKE,UACH,SAAAD,GAAS,MACDE,EAAa,UAAGF,EAAMD,kBAAT,aAAG,EAAkBI,QAAO,qBAAEC,KAAeN,EAASM,MAEzE,MAAO,CACLL,WAAYG,UAAiB,OAGjC,kBACEG,YAAmBP,GAAnB,OAAmC,WACjC,EAAKG,SAAS,CACZF,sB,wDA5BR,2EAEEA,WAAY,O,qCAKd,MAAO,CAAC,CAAC,aAjBI,mC,iCAqBb,OAAOO,YAAE,gB,mCAuBE,aACX,OACE,uBACE,YAAC,IAAD,CAAoBhC,MAAM,eAC1B,YAAC,IAAD,KACE,YAAC,IAAD,KAAcgC,YAAE,eAChB,YAAC,IAAD,MACG,UAAC/B,KAAKyB,MAAMD,kBAAZ,aAAC,EAAuBQ,QAKvBhC,KAAKyB,MAAMD,WAAWS,KAAI,SAAAV,GAAQ,OAChC,YAACW,EAAD,CAAmBC,IAAKZ,EAASM,IAC/B,uBAAMN,EAASa,eAEf,YAAC,IAAD,CACEC,KAAK,QACLC,QAAS,EAAKhB,iBAAiBiB,KAAK,EAAMhB,IAEzCQ,YAAE,mBAZT,YAAC,IAAD,KACGA,YAAE,gE,GA7CajC,KAoE1BoC,EAAoB,YAAOM,IAAP,gDAAH,6EAKRnB","file":"AccountSocialIdentities.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\n\nimport {disconnectIdentity} from 'app/actionCreators/account';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport {Identity} from 'app/types';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nconst ENDPOINT = '/users/me/social-identities/';\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype State = {\n  identities: Identity[] | null;\n} & AsyncView['state'];\n\nclass AccountIdentities extends AsyncView<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      identities: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['identities', ENDPOINT]];\n  }\n\n  getTitle() {\n    return t('Identities');\n  }\n\n  handleDisconnect = (identity: Identity) => {\n    const {identities} = this.state;\n\n    this.setState(\n      state => {\n        const newIdentities = state.identities?.filter(({id}) => id !== identity.id);\n\n        return {\n          identities: newIdentities ?? [],\n        };\n      },\n      () =>\n        disconnectIdentity(identity).catch(() => {\n          this.setState({\n            identities,\n          });\n        })\n    );\n  };\n\n  renderBody() {\n    return (\n      <div>\n        <SettingsPageHeader title=\"Identities\" />\n        <Panel>\n          <PanelHeader>{t('Identities')}</PanelHeader>\n          <PanelBody>\n            {!this.state.identities?.length ? (\n              <EmptyMessage>\n                {t('There are no identities associated with this account')}\n              </EmptyMessage>\n            ) : (\n              this.state.identities.map(identity => (\n                <IdentityPanelItem key={identity.id}>\n                  <div>{identity.providerLabel}</div>\n\n                  <Button\n                    size=\"small\"\n                    onClick={this.handleDisconnect.bind(this, identity)}\n                  >\n                    {t('Disconnect')}\n                  </Button>\n                </IdentityPanelItem>\n              ))\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nconst IdentityPanelItem = styled(PanelItem)`\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport default AccountIdentities;\n"],"sourceRoot":""}