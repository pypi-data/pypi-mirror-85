{"version":3,"sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/plugins/components/pluginIcon.tsx","webpack:///./images/logos/logo-default.svg","webpack:///./images/logos/logo-sentry.svg","webpack:///./images/logos/logo-amixr.svg","webpack:///./images/logos/logo-asana.svg","webpack:///./images/logos/logo-asayer.svg","webpack:///./images/logos/logo-aws.svg","webpack:///./images/logos/logo-bitbucket.svg","webpack:///./images/logos/logo-bitbucket-server.svg","webpack:///./images/logos/logo-campfire.svg","webpack:///./images/logos/logo-clickup.svg","webpack:///./images/logos/logo-clubhouse.svg","webpack:///./images/logos/logo-datadog.svg","webpack:///./images/logos/logo-flowdock.svg","webpack:///./images/logos/logo-fullstory.svg","webpack:///./images/logos/logo-github.svg","webpack:///./images/logos/logo-github-actions.svg","webpack:///./images/logos/logo-github-enterprise.svg","webpack:///./images/logos/logo-gitlab.svg","webpack:///./images/logos/logo-heroku.svg","webpack:///./images/logos/logo-jira.svg","webpack:///./images/logos/logo-jira-server.svg","webpack:///./images/logos/logo-lighthouse.svg","webpack:///./images/logos/logo-linear.svg","webpack:///./images/logos/logo-msteams.svg","webpack:///./images/logos/logo-netlify.svg","webpack:///./images/logos/logo-opsgenie.svg","webpack:///./images/logos/logo-pagerduty.svg","webpack:///./images/logos/logo-phabricator.svg","webpack:///./images/logos/logo-pivotaltracker.svg","webpack:///./images/logos/logo-pushover.svg","webpack:///./images/logos/logo-redmine.svg","webpack:///./images/logos/logo-rocketchat.svg","webpack:///./images/logos/logo-rookout.svg","webpack:///./images/logos/logo-segment.svg","webpack:///./images/logos/logo-slack.svg","webpack:///./images/logos/logo-split.svg","webpack:///./images/logos/logo-taiga.svg","webpack:///./images/logos/logo-teamwork.svg","webpack:///./images/logos/logo-trello.svg","webpack:///./images/logos/logo-twilio.svg","webpack:///./images/logos/logo-visualstudio.svg","webpack:///./images/logos/logo-azure.svg","webpack:///./images/logos/logo-youtrack.svg","webpack:///./images/logos/logo-vercel.svg","webpack:///./images/logos/logo-victorops.svg","webpack:///./images/logos/logo-zulip.svg","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/actionCreators/plugins.tsx","webpack:///./app/actions/pluginActions.tsx","webpack:///./app/components/pluginConfig.tsx","webpack:///./app/components/inactivePlugins.tsx","webpack:///./app/components/pluginList.tsx","webpack:///./app/views/settings/projectDataForwarding.tsx"],"names":["SettingsPageHeading","this","props","icon","title","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","SentryDocumentTitle","_title","objSlug","children","DEFAULT_ICON","placeholder","ICON_PATHS","_default","sentry","browsers","device","interface_types","os","urls","webhooks","aws","amixr","asana","asayer","bitbucket","bitbucket_pipelines","bitbucket_server","bitbucketserver","campfire","clickup","clubhouse","datadog","flowdock","fullstory","github","github_actions","githubActions","github_enterprise","githubEnterprise","gitlab","heroku","jira","jira_server","jiraserver","lighthouse","linear","msteams","netlify","opsgenie","pagerduty","phabricator","pivotal","pushover","redmine","rocketchat","rookout","segment","slack","split","taiga","teamwork","trello","twilio","visualstudio","vsts","youtrack","vercel","victorops","zulip","PluginIcon","size","pluginId","undefined","propTypes","PropTypes","string","number","module","exports","PermissionAlert","access","hasAccess","type","t","activeFetch","api","Client","doUpdate","orgId","projectId","update","params","PluginActions","request","requestPromise","then","updateSuccess","resp","err","responseJSON","detail","Error","updateError","fetchPlugins","options","path","fetchAll","method","includeAllArgs","data","jqXHR","fetchAllSuccess","pageLinks","getResponseHeader","fetchAllError","enablePlugin","addLoadingMessage","enabled","addSuccessMessage","addErrorMessage","disablePlugin","Reflux","createActions","PluginConfig","state","loading","plugins","isLoaded","testResults","handleDisablePlugin","onDisablePlugin","handleTestPlugin","a","setState","getPluginEndpoint","test","JSON","stringify","loadPlugin","nextProps","nextState","isEqual","load","organization","project","slug","id","__html","doc","className","data-test-id","hasButtons","PluginName","StyledPluginIcon","name","canDisable","Actions","isTestable","TestPluginButton","onClick","status","StyledPanelBody","dangerouslySetInnerHTML","createMarkup","get","renderSettings","withApi","Button","PanelBody","InactivePlugins","onEnablePlugin","length","Plugins","map","plugin","IntegrationButton","key","Label","shortName","theme","fontSizeSmall","borderRadius","PluginList","pluginList","filter","isHidden","DataForwardingStats","until","Math","floor","Date","getTime","query","since","resolution","stat","stats","series","seriesName","value","forwardedAny","some","withPadding","isGroupedByDate","showTimeInTooltip","labelYAxisExtents","height","description","AsyncComponent","ProjectDataForwarding","updatePlugin","forwardingPlugins","includes","pluginsPanel","features","hookName","hasFeature","Fragment","tct","link","href","em","alert","featureName","hasConfiguration","withProject","withOrganization"],"mappings":"+pBAyBMA,E,qIAcK,MACsDC,KAAKC,MAA3DC,EADA,EACAA,KAAMC,EADN,EACMA,MAAOC,EADb,EACaA,OAAQC,EADrB,EACqBA,KAAMC,EAD3B,EAC2BA,cAAkBL,EAD7C,wDAEP,OACE,kBAASA,EACP,YAACM,EAAD,KACGL,GAAQ,YAACM,EAAD,KAAON,GACfC,GACC,YAACM,EAAD,CAAOJ,KAAMA,EAAMK,OAAQJ,GACzB,YAAC,IAAD,KAAcH,IAGjBC,GAAU,YAACO,EAAD,CAAQN,KAAMA,GAAOD,IAGjCC,GAAQ,uBAAMA,Q,GA5BWO,IAAMC,WAAlCd,E,kCAAAA,EAUGe,aAAe,CACpBR,eAAe,GA4BnB,IAAMC,EAAkB,YAAO,MAAP,8CAAH,2DAKfE,EAAQ,YAAO,MAAP,qCACV,SAAAM,GAAC,OACAA,EAAEL,QAAH,mDAFO,YAMC,SAAAK,GAAC,OACTA,EAAEV,KAAF,UACOW,YAAM,GADb,YACmBA,YAAM,GADzB,YAC+BA,YAAM,GADrC,gBAEOA,YAAM,GAFb,YAEmBA,YAAM,GAFzB,YAE+BA,YAAM,GAFrC,QAPO,YAaLR,EAAO,YAAO,MAAP,mCAAH,gBACQQ,YAAM,GADd,KAIJL,EAAS,YAAO,MAAP,sCACX,SAAAI,GAAC,OAAKA,EAAEV,KAAF,sBAAwBW,YAAM,IAAO,OADnC,KAINC,EAA4B,YAAOlB,EAAP,wDAAH,8BAIdiB,YAAM,GAJQ,KAOhBC,O,kCCjGf,kCAWMC,EAA6D,SACjEjB,GAEA,IAAMkB,EAAS,GAAH,OAAMlB,EAAME,MAAZ,cAAuBF,EAAMmB,QAA7B,aACZ,OAAO,YAAC,IAAD,CAAejB,MAAOgB,GAASlB,EAAMoB,WAJxCH,E,kCAOSA,O,+iCCiCFI,GAAeC,IACfC,GAAa,CACxBC,SAAUH,GACVI,WACAC,SAAUD,IACVE,OAAQF,IACRG,gBAAiBH,IACjBI,GAAIJ,IACJK,KAAML,IACNM,SAAUN,IAEV,aAAcO,IACdC,UACAC,UACAC,WACAC,cACAC,oBAAqBD,IACrBE,iBAAkBC,IAClBC,aACAC,YACAC,cACAC,YACAC,aACAC,cACAC,WACAC,eAAgBC,IAChBC,kBAAmBC,IACnBC,WACAC,WACAC,SACA,yBAA0BA,IAC1B,UAAWA,IACXC,YAAaC,IACbC,eACAC,WACAC,YACAC,aACAC,cACAC,eACAC,iBACAC,aACAC,cACAC,aACAC,gBACAC,aACAC,aACAC,WACAC,WACAC,WACAC,cACAC,YACAC,YACAC,kBACAC,UACAC,cACAC,YACAC,eACAC,YAQIC,GAAa,YAAO,MAAP,wCAAH,6BAEJ,SAAAnE,GAAC,OAAIA,EAAEoE,OAFH,aAGL,SAAApE,GAAC,OAAIA,EAAEoE,OAHF,kKAUU,gBAAEC,EAAF,EAAEA,SAAF,YACRC,IAAbD,GAA0B5D,GAAW4D,IAAc9D,KAXxC,MAchB4D,GAAWpE,aAAe,CACxBsE,SAAU,WACVD,KAAM,IAGRD,GAAWI,UAAY,CACrBF,SAAUG,IAAUC,OACpBL,KAAMI,IAAUE,QAGHP,Q,qBC5IfQ,EAAOC,QAAU,IAA0B,2B,qBCA3CD,EAAOC,QAAU,IAA0B,0B,qBCA3CD,EAAOC,QAAU,IAA0B,yB,qBCA3CD,EAAOC,QAAU,IAA0B,yB,qBCA3CD,EAAOC,QAAU,IAA0B,0B,qBCA3CD,EAAOC,QAAU,IAA0B,uB,qBCA3CD,EAAOC,QAAU,IAA0B,6B,qBCA3CD,EAAOC,QAAU,IAA0B,oC,qBCA3CD,EAAOC,QAAU,IAA0B,4B,qBCA3CD,EAAOC,QAAU,IAA0B,2B,qBCA3CD,EAAOC,QAAU,IAA0B,6B,qBCA3CD,EAAOC,QAAU,IAA0B,2B,qBCA3CD,EAAOC,QAAU,IAA0B,4B,qBCA3CD,EAAOC,QAAU,IAA0B,6B,qBCA3CD,EAAOC,QAAU,IAA0B,0B,qBCA3CD,EAAOC,QAAU,IAA0B,kC,qBCA3CD,EAAOC,QAAU,IAA0B,qC,qBCA3CD,EAAOC,QAAU,IAA0B,0B,qBCA3CD,EAAOC,QAAU,IAA0B,0B,qBCA3CD,EAAOC,QAAU,IAA0B,wB,qBCA3CD,EAAOC,QAAU,IAA0B,+B,qBCA3CD,EAAOC,QAAU,IAA0B,8B,qBCA3CD,EAAOC,QAAU,IAA0B,0B,qBCA3CD,EAAOC,QAAU,IAA0B,2B,qBCA3CD,EAAOC,QAAU,IAA0B,2B,qBCA3CD,EAAOC,QAAU,IAA0B,4B,qBCA3CD,EAAOC,QAAU,IAA0B,6B,qBCA3CD,EAAOC,QAAU,IAA0B,+B,qBCA3CD,EAAOC,QAAU,IAA0B,kC,qBCA3CD,EAAOC,QAAU,IAA0B,4B,qBCA3CD,EAAOC,QAAU,IAA0B,2B,qBCA3CD,EAAOC,QAAU,IAA0B,8B,qBCA3CD,EAAOC,QAAU,IAA0B,2B,qBCA3CD,EAAOC,QAAU,IAA0B,2B,qBCA3CD,EAAOC,QAAU,IAA0B,yB,qBCA3CD,EAAOC,QAAU,IAA0B,yB,qBCA3CD,EAAOC,QAAU,IAA0B,yB,qBCA3CD,EAAOC,QAAU,IAA0B,4B,qBCA3CD,EAAOC,QAAU,IAA0B,0B,qBCA3CD,EAAOC,QAAU,IAA0B,0B,qBCA3CD,EAAOC,QAAU,IAA0B,gC,qBCA3CD,EAAOC,QAAU,IAA0B,yB,qBCA3CD,EAAOC,QAAU,IAA0B,4B,qBCA3CD,EAAOC,QAAU,IAA0B,0B,qBCA3CD,EAAOC,QAAU,IAA0B,6B,qBCA3CD,EAAOC,QAAU,IAA0B,yB,qHCWrCC,EAAkB,SAAC,GAAD,QAAEC,cAAF,MAAW,CAAC,iBAAZ,EAAiC5F,EAAjC,yBACtB,YAAC,IAAD,CAAQ4F,OAAQA,IACb,qBAAEC,WAEC,YAAC,IAAD,KAAOC,KAAK,UAAU7F,KAAM,YAAC,KAAD,CAAaiF,KAAK,QAAalF,GACxD+F,YACC,wGANNJ,E,8BAkBSA,O,gyBCnBf,IAAMK,EAAc,GAEdC,EAAM,IAAIC,IAuBhB,SAASC,EAAT,GAAmF,IAAhEC,EAAgE,EAAhEA,MAAOC,EAAyD,EAAzDA,UAAWlB,EAA8C,EAA9CA,SAAUmB,EAAoC,EAApCA,OAAWC,EAAyB,iDACjFC,IAAcF,OAAOnB,EAAUmB,GAC/B,IAAMG,EAAUR,EAAIS,eAAJ,oBACDN,EADC,YACQC,EADR,oBAC6BlB,EAD7B,UAGToB,IAiBP,OAZAE,EACGE,MAAK,WACJH,IAAcI,cAAczB,EAAUmB,MAF1C,OAIS,SAAAO,GACL,IAAMC,EACJD,GAAQA,EAAKE,cAAoD,iBAA7BF,EAAKE,aAAaC,OAClD,IAAIC,MAAMJ,EAAKE,aAAaC,QAC5B,IAAIC,MAAM,2BAChBT,IAAcU,YAAY/B,EAAUmB,EAAQQ,MAGzCL,EAaF,SAASU,EAAT,EAELC,GACmB,IAFlBhB,EAEkB,EAFlBA,MAAOC,EAEW,EAFXA,UAGFgB,EAAO,aAAH,OAAgBjB,EAAhB,YAAyBC,EAAzB,aAGV,GAAIL,EAAYqB,GACd,OAAOrB,EAAYqB,GAGrBb,IAAcc,SAASF,GACvB,IAAMX,EAAUR,EAAIS,eAAeW,EAAM,CACvCE,OAAQ,MACRC,gBAAgB,IAoBlB,OAjBAxB,EAAYqB,GAAQZ,EAGpBA,EACGE,MAAK,YAAsB,eAApBc,EAAoB,KAAXC,GAAW,WAK1B,OAJAlB,IAAcmB,gBAAgBF,EAAM,CAClCG,UAAWF,GAASA,EAAMG,kBAAkB,UAGvCJ,KANX,OAQS,SAAAX,GAEL,MADAN,IAAcsB,cAAchB,GACtB,IAAIG,MAAM,8BAEjBN,MAAK,kBAAOX,EAAYqB,GAAQ,QAE5BZ,EAQF,SAASsB,EAAaxB,GAE3B,OADAyB,YAAkBjC,YAAE,gBACbI,EAAS,EAAD,KAAKI,GAAL,IAAaD,OAAQ,CAAC2B,SAAS,GAAOV,OAAQ,UAC1DZ,MAAK,kBAAMuB,YAAkBnC,YAAE,0BAD3B,OAEE,kBAAMoC,YAAgBpC,YAAE,+BAM5B,SAASqC,EAAc7B,GAE5B,OADAyB,YAAkBjC,YAAE,iBACbI,EAAS,EAAD,KAAKI,GAAL,IAAaD,OAAQ,CAAC2B,SAAS,GAAQV,OAAQ,YAC3DZ,MAAK,kBAAMuB,YAAkBnC,YAAE,2BAD3B,OAEE,kBAAMoC,YAAgBpC,YAAE,kC,kCC9HnC,YAEMS,EAFN,OAEsB6B,EAAOC,cAAc,CACzC,SACA,cACA,gBACA,WACA,kBACA,kBAGa9B,O,gsBCwBT+B,E,kLAcJC,MAAQ,CACNC,SAAUC,IAAQC,SAAS,EAAK3I,MAAMyH,MACtCmB,YAAa,I,EAiCfC,oBAAsB,WACpB,EAAK7I,MAAM8I,gBAAgB,EAAK9I,MAAMyH,O,EAGxCsB,iB,cAAmB,4BAAAC,EAAA,6DACjB,EAAKC,SAAS,CAACL,YAAa,KAC5BZ,YAAkBjC,YAAE,oBAFH,kBAKI,EAAK/F,MAAMiG,IAAIS,eAAe,EAAKwC,oBAAqB,CACzE3B,OAAQ,OACRE,KAAM,CACJ0B,MAAM,KARK,OAKT1B,EALS,OAYf,EAAKwB,SAAS,CAACL,YAAaQ,KAAKC,UAAU5B,EAAKT,UAChDkB,YAAkBnC,YAAE,mBAbL,kDAefoC,YACEpC,YAAE,8EAhBW,0D,0DAjCjBhG,KAAKuJ,WAAWvJ,KAAKC,MAAMyH,Q,uDAGI8B,GAC/BxJ,KAAKuJ,WAAWC,EAAU9B,Q,4CAGN8B,EAAkBC,GACtC,OAAQC,IAAQD,EAAWzJ,KAAKyI,SAAWiB,IAAQF,EAAU9B,KAAM1H,KAAKC,MAAMyH,Q,iCAGrEA,GAAc,WACvB1H,KAAKkJ,SACH,CACER,SAAS,IAEX,WACEC,IAAQgB,KAAKjC,GAAM,WACjB,EAAKwB,SAAS,CAACR,SAAS,Y,0CAMZ,MACoB1I,KAAKC,MAApC2J,EADW,EACXA,aAAcC,EADH,EACGA,QAASnC,EADZ,EACYA,KAC9B,0BAAoBkC,EAAaE,KAAjC,YAAyCD,EAAQC,KAAjD,oBAAiEpC,EAAKqC,GAAtE,O,qCA6BA,MAAO,CAACC,OAAQhK,KAAKC,MAAMyH,KAAKuC,O,+BAGzB,IACAvC,EAAQ1H,KAAKC,MAAbyH,KAEDQ,OAC0B,IAAvBlI,KAAKC,MAAMiI,QAA0BlI,KAAKC,MAAMiI,QAAUR,EAAKQ,QAExE,OACE,YAAC,IAAD,CACEgC,UAAS,0CAAqCxC,EAAKqC,IACnDI,eAAa,iBAEb,YAAC,IAAD,CAAaC,YAAU,GACrB,YAACC,EAAD,KACE,YAACC,EAAD,CAAkBlF,SAAUsC,EAAKqC,KACjC,wBAAOrC,EAAK6C,OAGb7C,EAAK8C,YAActC,GAClB,YAACuC,EAAD,KACG/C,EAAKgD,YACJ,YAACC,EAAD,CAAkBC,QAAS5K,KAAKgJ,iBAAkB7D,KAAK,SACpDa,YAAE,gBAGP,YAAC,IAAD,CAAQb,KAAK,QAAQyF,QAAS5K,KAAK8I,qBAChC9C,YAAE,cAMM,SAAhB0B,EAAKmD,QACJ,YAAC,IAAD,CAAY9E,KAAK,WACdC,YAAE,iEAIqB,KAA3BhG,KAAKyI,MAAMI,aACV,YAAC,IAAD,CAAY9C,KAAK,QACf,0CACA,uBAAM/F,KAAKyI,MAAMI,cAIrB,YAACiC,EAAD,KACE,mBAAKC,wBAAyB/K,KAAKgL,iBAClChL,KAAKyI,MAAMC,QACV,YAAC,UAAD,MAEAC,IAAQsC,IAAIvD,GAAMwD,eAAe,CAC/BtB,aAAc5J,KAAKC,MAAM2J,aACzBC,QAAS7J,KAAKC,MAAM4J,gB,GAjIPjJ,IAAMC,WAA3B2H,E,2BAAAA,EAUG1H,aAAe,CACpBiI,gBAAiB,cAgINoC,gBAAQ3C,GAEvB,IAAM6B,EAAa,YAAO,MAAP,wCAAH,mEAMVC,EAAmB,YAAOpF,IAAP,8CAAH,gBACJlE,YAAM,GADF,KAIhByJ,EAAU,YAAO,MAAP,qCAAH,wCAGPE,EAAmB,YAAOS,IAAP,8CAAH,gBACJpK,YAAM,GADF,KAIhB8J,EAAkB,YAAOO,IAAP,6CAAH,WACRrK,YAAM,GADE,uB,6GClLfsK,EAAkB,SAAC,GAAqC,IAApC3C,EAAoC,EAApCA,QAAS4C,EAA2B,EAA3BA,eACjC,OAAuB,IAAnB5C,EAAQ6C,OACH,KAIP,YAAC,IAAD,KACE,YAAC,IAAD,KAAcxF,YAAE,0BAEhB,YAAC,IAAD,KACE,YAACyF,EAAD,KACG9C,EAAQ+C,KAAI,SAAAC,GAAM,OACjB,YAACC,EAAD,CACEC,IAAKF,EAAO5B,GACZa,QAAS,kBAAMW,EAAeI,IAC9BzB,UAAS,4BAAuByB,EAAO5B,KAEvC,YAAC+B,EAAD,KACE,YAACxB,EAAD,CAAkBlF,SAAUuG,EAAO5B,KACnC,YAAC,IAAD,KAAe4B,EAAOI,WAAaJ,EAAOpB,eAnBpDe,E,8BA6BN,IAAMG,EAAU,YAAO,MAAP,sCAAH,wBAEAzK,YAAM,GAFN,2BAOP4K,EAAoB,YAAO,SAAP,gDAAH,UACX5K,YAAM,GADK,6CAIR,SAAAD,GAAC,OAAIA,EAAEiL,MAAMC,gBAJL,wIAWJ,SAAAlL,GAAC,OAAIA,EAAEiL,MAAME,eAXT,6CAmBjBJ,EAAQ,YAAO,MAAP,oCAAH,kFAMLxB,EAAmB,YAAOpF,IAAP,+CAAH,gBACJlE,YAAM,GADF,KAIPsK,I,UC7DTa,EAAa,SAAC,GAMP,IALXvC,EAKW,EALXA,aACAC,EAIW,EAJXA,QACAuC,EAGW,EAHXA,WAGW,IAFXrD,uBAEW,MAFO,aAEP,MADXwC,sBACW,MADM,aACN,EAWLzC,EAAsB,SAAC6C,GAC3BtD,YAAc,CACZ/B,UAAWuD,EAAQC,KACnBzD,MAAOuD,EAAaE,KACpB1E,SAAUuG,EAAO7B,OAGnBf,EAAgB4C,IAGlB,OAAKS,EAAWZ,OAWd,uBACGY,EACEC,QAAO,SAAAtL,GAAC,OAAIA,EAAEmH,WACdwD,KAAI,SAAAhE,GAAI,OACP,YAAC,IAAD,CACEA,KAAMA,EACNkC,aAAcA,EACdC,QAASA,EACTgC,IAAKnE,EAAKqC,GACVhB,gBAAiBD,OAIvB,YAAC,EAAD,CACEH,QAASyD,EAAWC,QAAO,SAAAtL,GAAC,OAAKA,EAAEmH,UAAYnH,EAAEuL,YACjDf,eA9CqB,SAACI,GAC1B3D,YAAa,CACX1B,UAAWuD,EAAQC,KACnBzD,MAAOuD,EAAaE,KACpB1E,SAAUuG,EAAO7B,OAGnByB,EAAeI,OAeb,YAAC,IAAD,KACE,YAAC,IAAD,KACG3F,YAAE,0EA/BPmG,E,yBAmESA,O,4zCCrDTI,E,2IACuD,MAC9BvM,KAAKC,MAAMuG,OAA/BH,EADkD,EAClDA,MAAOC,EAD2C,EAC3CA,UACRkG,EAAQC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAG1CvF,EAAU,CACdwF,MAAO,CACLC,MAJUN,EAAQ,OAKlBA,QACAO,WAAY,KACZC,KAAM,cAIV,MAAO,CAAC,CAAC,QAAD,oBAAuB3G,EAAvB,YAAgCC,EAAhC,WAAoDe,M,mCAGjD,IACJf,EAAatG,KAAKC,MAAMuG,OAAxBF,UACA2G,EAASjN,KAAKyI,MAAdwE,MACDC,EAAiB,CACrBC,WAAYnH,YAAE,aACd0B,KAAMuF,EAAMvB,KAAI,iCAAyB,CAACnB,KAAkB,IAA5C,KAAkD6C,MAAlD,UAEZC,EAAeH,EAAOxF,KAAK4F,MAAK,qBAAEF,MAAmB,KAE3D,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAqBjN,MAAO6F,YAAE,mBAAoB5E,QAASkF,IAC3D,YAAC,IAAD,KAAcN,YAAE,kDAChB,YAAC,IAAD,CAAWuH,aAAW,GACnBF,EACC,YAAC,IAAD,CACEG,iBAAe,EACfC,mBAAiB,EACjBC,mBAAiB,EACjBR,OAAQ,CAACA,GACTS,OAAQ,MAGV,YAAC,IAAD,CACExN,MAAO6F,YAAE,0CACT4H,YAAa5H,YAAE,+D,GA3CK6H,KA6D5BC,E,kLAsBJvC,eAAiB,SAACI,GAAD,OAAoB,EAAKoC,aAAapC,GAAQ,I,EAC/D5C,gBAAkB,SAAC4C,GAAD,OAAoB,EAAKoC,aAAapC,GAAQ,I,qDAtBL,MAC9B3L,KAAKC,MAAMuG,OAA/BH,EADkD,EAClDA,MAAOC,EAD2C,EAC3CA,UAEd,MAAO,CAAC,CAAC,UAAD,oBAAyBD,EAAzB,YAAkCC,EAAlC,iB,mCASGqF,EAAgBzD,GAC3B,IAAMS,EAAU3I,KAAKyI,MAAME,QAAQ+C,KAAI,SAAA3K,GAAC,cACnCA,GADmC,IAEtCmH,QAASnH,EAAEgJ,KAAO4B,EAAO5B,GAAK7B,EAAUnH,EAAEmH,aAG5ClI,KAAKkJ,SAAS,CAACP,c,mCAMJ,MAC6B3I,KAAKC,MAAtCuG,EADI,EACJA,OAAQoD,EADJ,EACIA,aAAcC,EADlB,EACkBA,QACvBlB,EAAU3I,KAAKgO,kBACflI,EAAY8D,EAAa/D,OAAOoI,SAAS,iBAEzCC,EACJvF,EAAQ6C,OAAS,EACf,YAAC,IAAD,CACE5B,aAAcA,EACdC,QAASA,EACTuC,WAAYzD,EACZ4C,eAAgBvL,KAAKuL,eACrBxC,gBAAiB/I,KAAK+I,kBAGxB,YAAC,IAAD,KACE,YAAC,IAAD,CACE5I,MAAO6F,YAAE,8DAKjB,OACE,mBAAKmE,eAAa,4BAChB,YAAC,IAAD,CACEgE,SAAU,CAAC,4BACXC,SAAS,qCAER,gBAAEC,EAAF,EAAEA,WAAYF,EAAd,EAAcA,SAAd,OACC,YAAC,IAAMG,SAAP,KACE,YAAC,IAAD,CAAoBnO,MAAO6F,YAAE,qBAC7B,YAAC,IAAD,KACGuI,YAAI,mSAKH,CACEC,KACE,YAAC,IAAD,CAAcC,KAAK,qDAK3B,YAAC,IAAD,MAEA,YAAC,IAAD,CAAOvO,KAAM,YAAC,IAAD,CAAUiF,KAAK,QACzBoJ,YAAI,uIAGH,CACEG,GAAI,+BAKRL,GACA,YAAC,IAAD,CACEM,OAAK,EACLC,YAAY,kBACZT,SAAUA,IAId,YAAC5B,EAAD,CAAqB/F,OAAQA,IAC5BV,GAAauI,GAAcH,S,wCAlFtC,OAAOlO,KAAKyI,MAAME,QAAQ0D,QACxB,SAAAtL,GAAC,MAAe,oBAAXA,EAAEgF,MAA8BhF,EAAE8N,wB,GATThB,KAmGrBiB,sBAAYC,YAAiBjB","file":"ProjectDataForwarding.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import React, {FunctionComponent} from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype DocumentTitleProps = {\n  // Main page title\n  title: string;\n  // Organization or project slug to give title some context\n  objSlug: string;\n  children?: React.ReactNode;\n};\n\nconst SentryDocumentTitle: FunctionComponent<DocumentTitleProps> = (\n  props: DocumentTitleProps\n) => {\n  const _title = `${props.title} - ${props.objSlug} - Sentry`;\n  return <DocumentTitle title={_title}>{props.children}</DocumentTitle>;\n};\n\nexport default SentryDocumentTitle;\n","import PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nimport placeholder from 'app/../images/logos/logo-default.svg';\nimport sentry from 'app/../images/logos/logo-sentry.svg';\nimport amixr from 'app/../images/logos/logo-amixr.svg';\nimport asana from 'app/../images/logos/logo-asana.svg';\nimport asayer from 'app/../images/logos/logo-asayer.svg';\nimport aws from 'app/../images/logos/logo-aws.svg';\nimport bitbucket from 'app/../images/logos/logo-bitbucket.svg';\nimport bitbucketserver from 'app/../images/logos/logo-bitbucket-server.svg';\nimport campfire from 'app/../images/logos/logo-campfire.svg';\nimport clickup from 'app/../images/logos/logo-clickup.svg';\nimport clubhouse from 'app/../images/logos/logo-clubhouse.svg';\nimport datadog from 'app/../images/logos/logo-datadog.svg';\nimport flowdock from 'app/../images/logos/logo-flowdock.svg';\nimport fullstory from 'app/../images/logos/logo-fullstory.svg';\nimport github from 'app/../images/logos/logo-github.svg';\nimport githubActions from 'app/../images/logos/logo-github-actions.svg';\nimport githubEnterprise from 'app/../images/logos/logo-github-enterprise.svg';\nimport gitlab from 'app/../images/logos/logo-gitlab.svg';\nimport heroku from 'app/../images/logos/logo-heroku.svg';\nimport jira from 'app/../images/logos/logo-jira.svg';\nimport jiraserver from 'app/../images/logos/logo-jira-server.svg';\nimport lighthouse from 'app/../images/logos/logo-lighthouse.svg';\nimport linear from 'app/../images/logos/logo-linear.svg';\nimport msteams from 'app/../images/logos/logo-msteams.svg';\nimport netlify from 'app/../images/logos/logo-netlify.svg';\nimport opsgenie from 'app/../images/logos/logo-opsgenie.svg';\nimport pagerduty from 'app/../images/logos/logo-pagerduty.svg';\nimport phabricator from 'app/../images/logos/logo-phabricator.svg';\nimport pivotal from 'app/../images/logos/logo-pivotaltracker.svg';\nimport pushover from 'app/../images/logos/logo-pushover.svg';\nimport redmine from 'app/../images/logos/logo-redmine.svg';\nimport rocketchat from 'app/../images/logos/logo-rocketchat.svg';\nimport rookout from 'app/../images/logos/logo-rookout.svg';\nimport segment from 'app/../images/logos/logo-segment.svg';\nimport slack from 'app/../images/logos/logo-slack.svg';\nimport split from 'app/../images/logos/logo-split.svg';\nimport taiga from 'app/../images/logos/logo-taiga.svg';\nimport teamwork from 'app/../images/logos/logo-teamwork.svg';\nimport trello from 'app/../images/logos/logo-trello.svg';\nimport twilio from 'app/../images/logos/logo-twilio.svg';\nimport visualstudio from 'app/../images/logos/logo-visualstudio.svg';\nimport vsts from 'app/../images/logos/logo-azure.svg';\nimport youtrack from 'app/../images/logos/logo-youtrack.svg';\nimport vercel from 'app/../images/logos/logo-vercel.svg';\nimport victorops from 'app/../images/logos/logo-victorops.svg';\nimport zulip from 'app/../images/logos/logo-zulip.svg';\n\n// Map of plugin id -> logo filename\nexport const DEFAULT_ICON = placeholder;\nexport const ICON_PATHS = {\n  _default: DEFAULT_ICON,\n  sentry,\n  browsers: sentry,\n  device: sentry,\n  interface_types: sentry,\n  os: sentry,\n  urls: sentry,\n  webhooks: sentry,\n\n  'amazon-sqs': aws,\n  amixr,\n  asana,\n  asayer,\n  bitbucket,\n  bitbucket_pipelines: bitbucket,\n  bitbucket_server: bitbucketserver,\n  campfire,\n  clickup,\n  clubhouse,\n  datadog,\n  flowdock,\n  fullstory,\n  github,\n  github_actions: githubActions,\n  github_enterprise: githubEnterprise,\n  gitlab,\n  heroku,\n  jira,\n  'jira-atlassian-connect': jira,\n  'jira-ac': jira,\n  jira_server: jiraserver,\n  lighthouse,\n  linear,\n  msteams,\n  netlify,\n  opsgenie,\n  pagerduty,\n  phabricator,\n  pivotal,\n  pushover,\n  redmine,\n  rocketchat,\n  rookout,\n  segment,\n  slack,\n  split,\n  taiga,\n  teamwork,\n  trello,\n  twilio,\n  visualstudio,\n  vsts,\n  youtrack,\n  vercel,\n  victorops,\n  zulip,\n};\n\ntype Props = {\n  pluginId?: string;\n  size?: number;\n};\n\nconst PluginIcon = styled('div')<Props>`\n  position: relative;\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n  border-radius: 2px;\n  border: 0;\n  display: inline-block;\n  background-size: contain;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-image: url(${({pluginId}) =>\n    (pluginId !== undefined && ICON_PATHS[pluginId]) || DEFAULT_ICON});\n`;\n\nPluginIcon.defaultProps = {\n  pluginId: '_default',\n  size: 20,\n};\n\nPluginIcon.propTypes = {\n  pluginId: PropTypes.string,\n  size: PropTypes.number,\n};\n\nexport default PluginIcon;\n","module.exports = __webpack_public_path__ + \"logo-default.8150ae.svg\";","module.exports = __webpack_public_path__ + \"logo-sentry.153773.svg\";","module.exports = __webpack_public_path__ + \"logo-amixr.44700c.svg\";","module.exports = __webpack_public_path__ + \"logo-asana.4b9761.svg\";","module.exports = __webpack_public_path__ + \"logo-asayer.54bf9f.svg\";","module.exports = __webpack_public_path__ + \"logo-aws.4db55a.svg\";","module.exports = __webpack_public_path__ + \"logo-bitbucket.e085f1.svg\";","module.exports = __webpack_public_path__ + \"logo-bitbucket-server.a96954.svg\";","module.exports = __webpack_public_path__ + \"logo-campfire.18b13b.svg\";","module.exports = __webpack_public_path__ + \"logo-clickup.09adc7.svg\";","module.exports = __webpack_public_path__ + \"logo-clubhouse.3851be.svg\";","module.exports = __webpack_public_path__ + \"logo-datadog.31e1a3.svg\";","module.exports = __webpack_public_path__ + \"logo-flowdock.c9a31d.svg\";","module.exports = __webpack_public_path__ + \"logo-fullstory.b94255.svg\";","module.exports = __webpack_public_path__ + \"logo-github.53b0f1.svg\";","module.exports = __webpack_public_path__ + \"logo-github-actions.1b3a17.svg\";","module.exports = __webpack_public_path__ + \"logo-github-enterprise.c7994c.svg\";","module.exports = __webpack_public_path__ + \"logo-gitlab.9e3a4c.svg\";","module.exports = __webpack_public_path__ + \"logo-heroku.464159.svg\";","module.exports = __webpack_public_path__ + \"logo-jira.e5075f.svg\";","module.exports = __webpack_public_path__ + \"logo-jira-server.f8a5de.svg\";","module.exports = __webpack_public_path__ + \"logo-lighthouse.ce2190.svg\";","module.exports = __webpack_public_path__ + \"logo-linear.ae13a6.svg\";","module.exports = __webpack_public_path__ + \"logo-msteams.701683.svg\";","module.exports = __webpack_public_path__ + \"logo-netlify.c4ca8e.svg\";","module.exports = __webpack_public_path__ + \"logo-opsgenie.d768de.svg\";","module.exports = __webpack_public_path__ + \"logo-pagerduty.bc44db.svg\";","module.exports = __webpack_public_path__ + \"logo-phabricator.0c74a0.svg\";","module.exports = __webpack_public_path__ + \"logo-pivotaltracker.d31ffb.svg\";","module.exports = __webpack_public_path__ + \"logo-pushover.18df03.svg\";","module.exports = __webpack_public_path__ + \"logo-redmine.f62150.svg\";","module.exports = __webpack_public_path__ + \"logo-rocketchat.1f1636.svg\";","module.exports = __webpack_public_path__ + \"logo-rookout.4624c8.svg\";","module.exports = __webpack_public_path__ + \"logo-segment.0e616d.svg\";","module.exports = __webpack_public_path__ + \"logo-slack.895972.svg\";","module.exports = __webpack_public_path__ + \"logo-split.ab753a.svg\";","module.exports = __webpack_public_path__ + \"logo-taiga.21e125.svg\";","module.exports = __webpack_public_path__ + \"logo-teamwork.b3cc63.svg\";","module.exports = __webpack_public_path__ + \"logo-trello.eb7a54.svg\";","module.exports = __webpack_public_path__ + \"logo-twilio.9ba49d.svg\";","module.exports = __webpack_public_path__ + \"logo-visualstudio.b4a03e.svg\";","module.exports = __webpack_public_path__ + \"logo-azure.9b9f83.svg\";","module.exports = __webpack_public_path__ + \"logo-youtrack.d171d3.svg\";","module.exports = __webpack_public_path__ + \"logo-vercel.104c17.svg\";","module.exports = __webpack_public_path__ + \"logo-victorops.b62ffa.svg\";","module.exports = __webpack_public_path__ + \"logo-zulip.c07c6e.svg\";","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t} from 'app/locale';\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nPermissionAlert.propTypes = {\n  access: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default PermissionAlert;\n","import {Client, RequestOptions} from 'app/api';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport PluginActions from 'app/actions/pluginActions';\nimport {Plugin} from 'app/types';\n\nconst activeFetch = {};\n// PluginsStore always exists, so api client should be independent of component lifecycle\nconst api = new Client();\n\ntype Slugs = {\n  /**\n   * Organization slug\n   */\n  orgId: string;\n\n  /**\n   * Project slug\n   */\n  projectId: string;\n\n  /**\n   * Plugin slug\n   */\n  pluginId: string;\n};\n\ntype DoUpdateParams = Slugs & {\n  update: Partial<Plugin>;\n} & Partial<RequestOptions>;\n\nfunction doUpdate({orgId, projectId, pluginId, update, ...params}: DoUpdateParams) {\n  PluginActions.update(pluginId, update);\n  const request = api.requestPromise(\n    `/projects/${orgId}/${projectId}/plugins/${pluginId}/`,\n    {\n      ...params,\n    }\n  );\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then(() => {\n      PluginActions.updateSuccess(pluginId, update);\n    })\n    .catch(resp => {\n      const err =\n        resp && resp.responseJSON && typeof resp.responseJSON.detail === 'string'\n          ? new Error(resp.responseJSON.detail)\n          : new Error('Unable to update plugin');\n      PluginActions.updateError(pluginId, update, err);\n    });\n\n  return request;\n}\n\ntype FetchPluginsOptions = {\n  /**\n   * Reset will set loading state = true\n   */\n  resetLoading?: boolean;\n};\n\n/**\n * Fetches list of available plugins for a project\n */\nexport function fetchPlugins(\n  {orgId, projectId}: Pick<Slugs, 'orgId' | 'projectId'>,\n  options?: FetchPluginsOptions\n): Promise<Plugin[]> {\n  const path = `/projects/${orgId}/${projectId}/plugins/`;\n\n  // Make sure we throttle fetches\n  if (activeFetch[path]) {\n    return activeFetch[path];\n  }\n\n  PluginActions.fetchAll(options);\n  const request = api.requestPromise(path, {\n    method: 'GET',\n    includeAllArgs: true,\n  });\n\n  activeFetch[path] = request;\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then(([data, _, jqXHR]) => {\n      PluginActions.fetchAllSuccess(data, {\n        pageLinks: jqXHR && jqXHR.getResponseHeader('Link'),\n      });\n\n      return data;\n    })\n    .catch(err => {\n      PluginActions.fetchAllError(err);\n      throw new Error('Unable to fetch plugins');\n    })\n    .then(() => (activeFetch[path] = null));\n\n  return request;\n}\n\ntype EnableDisablePluginParams = Slugs;\n\n/**\n * Enables a plugin\n */\nexport function enablePlugin(params: EnableDisablePluginParams) {\n  addLoadingMessage(t('Enabling...'));\n  return doUpdate({...params, update: {enabled: true}, method: 'POST'})\n    .then(() => addSuccessMessage(t('Plugin was enabled')))\n    .catch(() => addErrorMessage(t('Unable to enable plugin')));\n}\n\n/**\n * Disables a plugin\n */\nexport function disablePlugin(params: EnableDisablePluginParams) {\n  addLoadingMessage(t('Disabling...'));\n  return doUpdate({...params, update: {enabled: false}, method: 'DELETE'})\n    .then(() => addSuccessMessage(t('Plugin was disabled')))\n    .catch(() => addErrorMessage(t('Unable to disable plugin')));\n}\n","import Reflux from 'reflux';\n\nconst PluginActions = Reflux.createActions([\n  'update',\n  'updateError',\n  'updateSuccess',\n  'fetchAll',\n  'fetchAllSuccess',\n  'fetchAllError',\n]);\n\nexport default PluginActions;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport PluginIcon from 'app/plugins/components/pluginIcon';\nimport plugins from 'app/plugins';\nimport space from 'app/styles/space';\nimport withApi from 'app/utils/withApi';\nimport {Organization, Project, Plugin} from 'app/types';\nimport {Client} from 'app/api';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  data: Plugin;\n  onDisablePlugin: (data: Plugin) => void;\n  api: Client;\n  enabled?: boolean;\n};\n\ntype State = {\n  testResults: string;\n  loading?: boolean;\n};\n\nclass PluginConfig extends React.Component<Props, State> {\n  static propTypes: any = {\n    api: PropTypes.object,\n    organization: PropTypes.object.isRequired,\n    project: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired,\n    onDisablePlugin: PropTypes.func,\n    enabled: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    onDisablePlugin: () => {},\n  };\n\n  state = {\n    loading: !plugins.isLoaded(this.props.data),\n    testResults: '',\n  };\n\n  componentDidMount() {\n    this.loadPlugin(this.props.data);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    this.loadPlugin(nextProps.data);\n  }\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    return !isEqual(nextState, this.state) || !isEqual(nextProps.data, this.props.data);\n  }\n\n  loadPlugin(data: Plugin) {\n    this.setState(\n      {\n        loading: true,\n      },\n      () => {\n        plugins.load(data, () => {\n          this.setState({loading: false});\n        });\n      }\n    );\n  }\n\n  getPluginEndpoint() {\n    const {organization, project, data} = this.props;\n    return `/projects/${organization.slug}/${project.slug}/plugins/${data.id}/`;\n  }\n\n  handleDisablePlugin = () => {\n    this.props.onDisablePlugin(this.props.data);\n  };\n\n  handleTestPlugin = async () => {\n    this.setState({testResults: ''});\n    addLoadingMessage(t('Sending test...'));\n\n    try {\n      const data = await this.props.api.requestPromise(this.getPluginEndpoint(), {\n        method: 'POST',\n        data: {\n          test: true,\n        },\n      });\n\n      this.setState({testResults: JSON.stringify(data.detail)});\n      addSuccessMessage(t('Test Complete!'));\n    } catch (_err) {\n      addErrorMessage(\n        t('An unexpected error occurred while testing your plugin. Please try again.')\n      );\n    }\n  };\n\n  createMarkup() {\n    return {__html: this.props.data.doc};\n  }\n\n  render() {\n    const {data} = this.props;\n    // If passed via props, use that value instead of from `data`\n    const enabled =\n      typeof this.props.enabled !== 'undefined' ? this.props.enabled : data.enabled;\n\n    return (\n      <Panel\n        className={`plugin-config ref-plugin-config-${data.id}`}\n        data-test-id=\"plugin-config\"\n      >\n        <PanelHeader hasButtons>\n          <PluginName>\n            <StyledPluginIcon pluginId={data.id} />\n            <span>{data.name}</span>\n          </PluginName>\n\n          {data.canDisable && enabled && (\n            <Actions>\n              {data.isTestable && (\n                <TestPluginButton onClick={this.handleTestPlugin} size=\"small\">\n                  {t('Test Plugin')}\n                </TestPluginButton>\n              )}\n              <Button size=\"small\" onClick={this.handleDisablePlugin}>\n                {t('Disable')}\n              </Button>\n            </Actions>\n          )}\n        </PanelHeader>\n\n        {data.status === 'beta' && (\n          <PanelAlert type=\"warning\">\n            {t('This plugin is considered beta and may change in the future.')}\n          </PanelAlert>\n        )}\n\n        {this.state.testResults !== '' && (\n          <PanelAlert type=\"info\">\n            <strong>Test Results</strong>\n            <div>{this.state.testResults}</div>\n          </PanelAlert>\n        )}\n\n        <StyledPanelBody>\n          <div dangerouslySetInnerHTML={this.createMarkup()} />\n          {this.state.loading ? (\n            <LoadingIndicator />\n          ) : (\n            plugins.get(data).renderSettings({\n              organization: this.props.organization,\n              project: this.props.project,\n            })\n          )}\n        </StyledPanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport {PluginConfig};\nexport default withApi(PluginConfig);\n\nconst PluginName = styled('div')`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nconst StyledPluginIcon = styled(PluginIcon)`\n  margin-right: ${space(1)};\n`;\n\nconst Actions = styled('div')`\n  display: flex;\n`;\nconst TestPluginButton = styled(Button)`\n  margin-right: ${space(1)};\n`;\n\nconst StyledPanelBody = styled(PanelBody)`\n  padding: ${space(2)};\n  padding-bottom: 0;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Plugin} from 'app/types';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport PluginIcon from 'app/plugins/components/pluginIcon';\nimport TextOverflow from 'app/components/textOverflow';\nimport space from 'app/styles/space';\n\ntype Props = {\n  plugins: Plugin[];\n  onEnablePlugin: (plugin: Plugin) => void;\n};\n\nconst InactivePlugins = ({plugins, onEnablePlugin}: Props) => {\n  if (plugins.length === 0) {\n    return null;\n  }\n\n  return (\n    <Panel>\n      <PanelHeader>{t('Inactive Integrations')}</PanelHeader>\n\n      <PanelBody>\n        <Plugins>\n          {plugins.map(plugin => (\n            <IntegrationButton\n              key={plugin.id}\n              onClick={() => onEnablePlugin(plugin)}\n              className={`ref-plugin-enable-${plugin.id}`}\n            >\n              <Label>\n                <StyledPluginIcon pluginId={plugin.id} />\n                <TextOverflow>{plugin.shortName || plugin.name}</TextOverflow>\n              </Label>\n            </IntegrationButton>\n          ))}\n        </Plugins>\n      </PanelBody>\n    </Panel>\n  );\n};\n\nconst Plugins = styled('div')`\n  display: flex;\n  padding: ${space(1)};\n  flex: 1;\n  flex-wrap: wrap;\n`;\n\nconst IntegrationButton = styled('button')`\n  margin: ${space(1)};\n  width: 175px;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: #889ab0;\n  letter-spacing: 0.1px;\n  font-weight: 600;\n  text-transform: uppercase;\n  border: 1px solid #eee;\n  background: inherit;\n  border-radius: ${p => p.theme.borderRadius};\n  padding: 10px;\n\n  &:hover {\n    border-color: #ccc;\n  }\n`;\n\nconst Label = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledPluginIcon = styled(PluginIcon)`\n  margin-right: ${space(1)};\n`;\n\nexport default InactivePlugins;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {Organization, Project, Plugin} from 'app/types';\nimport {enablePlugin, disablePlugin} from 'app/actionCreators/plugins';\nimport InactivePlugins from 'app/components/inactivePlugins';\nimport PluginConfig from 'app/components/pluginConfig';\nimport {t} from 'app/locale';\n\nimport {Panel, PanelItem} from './panels';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  pluginList: Plugin[];\n  onDisablePlugin?: (plugin: Plugin) => void;\n  onEnablePlugin?: (plugin: Plugin) => void;\n};\n\nconst PluginList = ({\n  organization,\n  project,\n  pluginList,\n  onDisablePlugin = () => {},\n  onEnablePlugin = () => {},\n}: Props) => {\n  const handleEnablePlugin = (plugin: Plugin) => {\n    enablePlugin({\n      projectId: project.slug,\n      orgId: organization.slug,\n      pluginId: plugin.slug,\n    });\n\n    onEnablePlugin(plugin);\n  };\n\n  const handleDisablePlugin = (plugin: Plugin) => {\n    disablePlugin({\n      projectId: project.slug,\n      orgId: organization.slug,\n      pluginId: plugin.slug,\n    });\n\n    onDisablePlugin(plugin);\n  };\n\n  if (!pluginList.length) {\n    return (\n      <Panel>\n        <PanelItem>\n          {t(\"Oops! Looks like there aren't any available integrations installed.\")}\n        </PanelItem>\n      </Panel>\n    );\n  }\n\n  return (\n    <div>\n      {pluginList\n        .filter(p => p.enabled)\n        .map(data => (\n          <PluginConfig\n            data={data}\n            organization={organization}\n            project={project}\n            key={data.id}\n            onDisablePlugin={handleDisablePlugin}\n          />\n        ))}\n\n      <InactivePlugins\n        plugins={pluginList.filter(p => !p.enabled && !p.isHidden)}\n        onEnablePlugin={handleEnablePlugin}\n      />\n    </div>\n  );\n};\n\nPluginList.propTypes = {\n  organization: PropTypes.object.isRequired,\n  project: PropTypes.object.isRequired,\n  pluginList: PropTypes.array.isRequired,\n  onDisablePlugin: PropTypes.func,\n  onEnablePlugin: PropTypes.func,\n};\n\nexport default PluginList;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router/lib/Router';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport Alert from 'app/components/alert';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Feature from 'app/components/acl/feature';\nimport FeatureDisabled from 'app/components/acl/featureDisabled';\nimport {IconInfo} from 'app/icons';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\nimport PluginList from 'app/components/pluginList';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport MiniBarChart from 'app/components/charts/miniBarChart';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport withOrganization from 'app/utils/withOrganization';\nimport withProject from 'app/utils/withProject';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {Series} from 'app/types/echarts';\nimport {Organization, Plugin, Project, TimeseriesValue} from 'app/types';\n\ntype RouteParams = {projectId: string; orgId: string};\n\ntype StatProps = {\n  params: RouteParams;\n};\n\ntype StatState = AsyncComponent['state'] & {\n  stats: TimeseriesValue[];\n};\n\nclass DataForwardingStats extends AsyncComponent<StatProps, StatState> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n\n    const options = {\n      query: {\n        since,\n        until,\n        resolution: '1d',\n        stat: 'forwarded',\n      },\n    };\n\n    return [['stats', `/projects/${orgId}/${projectId}/stats/`, options]];\n  }\n\n  renderBody() {\n    const {projectId} = this.props.params;\n    const {stats} = this.state;\n    const series: Series = {\n      seriesName: t('Forwarded'),\n      data: stats.map(([timestamp, value]) => ({name: timestamp * 1000, value})),\n    };\n    const forwardedAny = series.data.some(({value}) => value > 0);\n\n    return (\n      <Panel>\n        <SentryDocumentTitle title={t('Data Forwarding')} objSlug={projectId} />\n        <PanelHeader>{t('Forwarded events in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {forwardedAny ? (\n            <MiniBarChart\n              isGroupedByDate\n              showTimeInTooltip\n              labelYAxisExtents\n              series={[series]}\n              height={150}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing forwarded in the last 30 days.')}\n              description={t('Total events forwarded to third party integrations.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncComponent['state'] & {\n  plugins: Plugin[];\n};\n\nclass ProjectDataForwarding extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n\n    return [['plugins', `/projects/${orgId}/${projectId}/plugins/`]];\n  }\n\n  get forwardingPlugins() {\n    return this.state.plugins.filter(\n      p => p.type === 'data-forwarding' && p.hasConfiguration\n    );\n  }\n\n  updatePlugin(plugin: Plugin, enabled: boolean) {\n    const plugins = this.state.plugins.map(p => ({\n      ...p,\n      enabled: p.id === plugin.id ? enabled : p.enabled,\n    }));\n\n    this.setState({plugins});\n  }\n\n  onEnablePlugin = (plugin: Plugin) => this.updatePlugin(plugin, true);\n  onDisablePlugin = (plugin: Plugin) => this.updatePlugin(plugin, false);\n\n  renderBody() {\n    const {params, organization, project} = this.props;\n    const plugins = this.forwardingPlugins;\n    const hasAccess = organization.access.includes('project:write');\n\n    const pluginsPanel =\n      plugins.length > 0 ? (\n        <PluginList\n          organization={organization}\n          project={project}\n          pluginList={plugins}\n          onEnablePlugin={this.onEnablePlugin}\n          onDisablePlugin={this.onDisablePlugin}\n        />\n      ) : (\n        <Panel>\n          <EmptyMessage\n            title={t('There are no integrations available for data forwarding')}\n          />\n        </Panel>\n      );\n\n    return (\n      <div data-test-id=\"data-forwarding-settings\">\n        <Feature\n          features={['projects:data-forwarding']}\n          hookName=\"feature-disabled:data-forwarding\"\n        >\n          {({hasFeature, features}) => (\n            <React.Fragment>\n              <SettingsPageHeader title={t('Data Forwarding')} />\n              <TextBlock>\n                {tct(\n                  `Data Forwarding allows processed events to be sent to your\n                favorite business intelligence tools. The exact payload and\n                types of data depend on the integration you're using. Learn\n                more about this functionality in our [link:documentation].`,\n                  {\n                    link: (\n                      <ExternalLink href=\"https://docs.sentry.io/learn/data-forwarding/\" />\n                    ),\n                  }\n                )}\n              </TextBlock>\n              <PermissionAlert />\n\n              <Alert icon={<IconInfo size=\"md\" />}>\n                {tct(\n                  `Sentry forwards [em:all applicable events] to the provider, in\n                some cases this may be a significant volume of data.`,\n                  {\n                    em: <strong />,\n                  }\n                )}\n              </Alert>\n\n              {!hasFeature && (\n                <FeatureDisabled\n                  alert\n                  featureName=\"Data Forwarding\"\n                  features={features}\n                />\n              )}\n\n              <DataForwardingStats params={params} />\n              {hasAccess && hasFeature && pluginsPanel}\n            </React.Fragment>\n          )}\n        </Feature>\n      </div>\n    );\n  }\n}\n\nexport default withProject(withOrganization(ProjectDataForwarding));\n"],"sourceRoot":""}