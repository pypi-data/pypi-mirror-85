{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/components/forms/formPanel.tsx","webpack:///./app/views/settings/components/forms/jsonForm.tsx","webpack:///./app/components/alertLink.tsx","webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/views/settings/account/accountEmails.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","FormPanel","fields","access","disabled","additionalFieldProps","renderFooter","renderHeader","otherProps","id","sanitizeQuerySelector","undefined","map","field","defaultValue","fieldWithoutDefaultValue","disabledReason","key","name","highlighted","JsonForm","state","getLocation","context","hash","scrollToHash","nextProps","setState","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","fieldsWithVisibleProp","filter","defined","visible","length","every","formPanelProps","shouldDisplayForm","forms","features","location","formGroup","i","Fragment","renderForm","contextTypes","PropTypes","object","AlertLink","size","priority","children","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","StyledLink","data-test-id","IconWrapper","AlertLinkText","IconLink","direction","linkProps","omit","theme","alert","backgroundLight","textColor","border","route","formGroups","type","label","placeholder","help","showReturnButton","ENDPOINT","EmailRow","handleSetPrimary","e","onSetPrimary","email","handleRemove","onRemove","handleVerify","onVerify","isPrimary","isVerified","hideRemove","EmailItem","EmailTags","t","gap","AccountEmails","handleSubmitSuccess","_change","model","setValue","remountComponent","handleError","responseJSON","addErrorMessage","createApiCall","endpoint","requestParams","loading","emails","api","requestPromise","then","bind","method","data","primary","find","secondary","emailObj","apiMethod","apiEndpoint","saveOnBlur","allowUndo","onSubmitSuccess","accountEmailsFields","PanelItem"],"mappings":"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","file":"AccountEmails.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\nimport {Scope} from 'app/types';\n\nimport {FieldObject, JsonFormObject} from './type';\n\ntype Props = {\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n\n  access?: Set<Scope>;\n  features?: Record<string, any>;\n\n  additionalFieldProps: {[key: string]: any};\n\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n};\n\nexport default class FormPanel extends React.Component<Props> {\n  render() {\n    const {\n      title,\n      fields,\n      access,\n      disabled,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n        {title && <PanelHeader>{title}</PanelHeader>}\n        <PanelBody>\n          {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n          {fields.map(field => {\n            if (typeof field === 'function') {\n              return field();\n            }\n\n            const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n            // Allow the form panel disabled prop to override the fields\n            // disabled prop, with fallback to the fields disabled state.\n            if (disabled === true) {\n              fieldWithoutDefaultValue.disabled = true;\n              fieldWithoutDefaultValue.disabledReason = undefined;\n            }\n\n            return (\n              <FieldFromConfig\n                access={access}\n                disabled={disabled}\n                key={field.name}\n                {...otherProps}\n                {...additionalFieldProps}\n                field={fieldWithoutDefaultValue}\n                highlighted={this.props.highlighted === `#${field.name}`}\n              />\n            );\n          })}\n          {typeof renderFooter === 'function' && renderFooter({title, fields})}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import {Box} from 'reflexbox';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport scrollToElement from 'scroll-to-element';\nimport {Location} from 'history';\nimport * as Sentry from '@sentry/react';\n\nimport {defined} from 'app/utils';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\n\nimport {Field, FieldObject, JsonFormObject} from './type';\nimport FieldFromConfig from './fieldFromConfig';\nimport FormPanel from './formPanel';\n\ntype DefaultProps = {\n  additionalFieldProps: {[key: string]: any};\n};\n\ntype Props = {\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n  location?: Location;\n} & DefaultProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype Context = {\n  location?: Location;\n};\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends React.Component<Props, State> {\n  static propTypes = {\n    /**\n     * Fields that are grouped by \"section\"\n     */\n    forms: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        fields: PropTypes.arrayOf(\n          PropTypes.oneOfType([PropTypes.func, FieldFromConfig.propTypes.field])\n        ),\n      })\n    ),\n\n    /**\n     * If `forms` is not defined, `title` + `fields` must be required.\n     * Allows more fine grain control of title/fields\n     */\n    fields: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.func, FieldFromConfig.propTypes.field])\n    ),\n    /**\n     * Panel title if `forms` is not defined\n     */\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n    access: PropTypes.object,\n    features: PropTypes.object,\n    renderFooter: PropTypes.func,\n    /**\n     * Renders inside of PanelBody\n     */\n    renderHeader: PropTypes.func,\n    /**\n     * Disables the entire form\n     */\n    disabled: PropTypes.bool,\n  };\n\n  static contextTypes = {\n    location: PropTypes.object,\n  };\n\n  static defaultProps: DefaultProps = {\n    additionalFieldProps: {},\n  };\n\n  state: State = {\n    highlighted: getLocation(this.props, this.context).hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (\n      getLocation(this.props, this.context).hash !==\n      getLocation(nextProps, this.context).hash\n    ) {\n      const hash = getLocation(nextProps, this.context).hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    const hash = toHash || getLocation(this.props, this.context).hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n    };\n\n    return (\n      <Box {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <React.Fragment key={i}>\n              {this.renderForm({formPanelProps, ...formGroup})}\n            </React.Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </Box>\n    );\n  }\n}\n\nexport default JsonForm;\n\nfunction getLocation(props: Props, context: Context): Location | {hash?: string} {\n  return props.location || context.location || {};\n}\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport omit from 'lodash/omit';\n\nimport Link from 'app/components/links/link';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n      ['data-test-id']: dataTestId,\n    } = this.props;\n\n    return (\n      <StyledLink\n        data-test-id={dataTestId}\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import {JsonFormObject} from 'app/views/settings/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Add Secondary Emails',\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: 'Additional Email',\n        placeholder: 'e.g. secondary@example.com',\n        help: 'Designate an alternative email for this account',\n        showReturnButton: true,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport AlertLink from 'app/components/alertLink';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport {IconDelete, IconStack} from 'app/icons';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport Tag from 'app/components/tagDeprecated';\nimport accountEmailsFields from 'app/data/forms/accountEmails';\nimport space from 'app/styles/space';\nimport ButtonBar from 'app/components/buttonBar';\n\nconst ENDPOINT = '/users/me/emails/';\n\nclass EmailRow extends React.Component {\n  static propTypes = {\n    email: PropTypes.string.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    onVerify: PropTypes.func.isRequired,\n    isVerified: PropTypes.bool,\n    isPrimary: PropTypes.bool,\n    hideRemove: PropTypes.bool,\n    onSetPrimary: PropTypes.func,\n  };\n\n  handleSetPrimary = e => {\n    if (typeof this.props.onSetPrimary === 'function') {\n      this.props.onSetPrimary(this.props.email, e);\n    }\n  };\n\n  handleRemove = e => {\n    this.props.onRemove(this.props.email, e);\n  };\n\n  handleVerify = e => {\n    this.props.onVerify(this.props.email, e);\n  };\n\n  render() {\n    const {email, isPrimary, isVerified, hideRemove} = this.props;\n\n    return (\n      <EmailItem>\n        <EmailTags>\n          {email}\n          {!isVerified && <Tag priority=\"warning\">{t('Unverified')}</Tag>}\n          {isPrimary && <Tag priority=\"success\">{t('Primary')}</Tag>}\n        </EmailTags>\n        <ButtonBar gap={1}>\n          {!isPrimary && isVerified && (\n            <Button size=\"small\" onClick={this.handleSetPrimary}>\n              {t('Set as primary')}\n            </Button>\n          )}\n          {!isVerified && (\n            <Button size=\"small\" onClick={this.handleVerify}>\n              {t('Resend verification')}\n            </Button>\n          )}\n          {!hideRemove && !isPrimary && (\n            <Button\n              data-test-id=\"remove\"\n              priority=\"danger\"\n              size=\"small\"\n              icon={<IconDelete />}\n              onClick={this.handleRemove}\n            />\n          )}\n        </ButtonBar>\n      </EmailItem>\n    );\n  }\n}\n\nclass AccountEmails extends AsyncView {\n  getEndpoints() {\n    return [['emails', ENDPOINT]];\n  }\n\n  getTitle() {\n    return 'Emails';\n  }\n\n  handleSubmitSuccess = (_change, model, id) => {\n    model.setValue(id, '');\n    this.remountComponent();\n  };\n\n  handleError = err => {\n    this.remountComponent();\n\n    if (err && err.responseJSON && err.responseJSON.email) {\n      addErrorMessage(err.responseJSON.email);\n    }\n  };\n\n  createApiCall = (endpoint, requestParams) => {\n    this.setState({loading: true, emails: []}, () => {\n      this.api\n        .requestPromise(endpoint, requestParams)\n        .then(this.remountComponent.bind(this))\n        .catch(this.handleError);\n    });\n  };\n\n  handleSetPrimary = email => {\n    this.createApiCall(ENDPOINT, {\n      method: 'PUT',\n      data: {\n        email,\n      },\n    });\n  };\n\n  handleRemove = email => {\n    this.createApiCall(ENDPOINT, {\n      method: 'DELETE',\n      data: {\n        email,\n      },\n    });\n  };\n\n  handleVerify = email => {\n    this.createApiCall(`${ENDPOINT}confirm/`, {\n      method: 'POST',\n      data: {\n        email,\n      },\n    });\n  };\n\n  renderBody() {\n    const {emails} = this.state;\n    const primary = emails.find(({isPrimary}) => isPrimary);\n    const secondary = emails.filter(({isPrimary}) => !isPrimary);\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"Emails\" />\n\n        <Panel>\n          <PanelHeader>{t('Emails')}</PanelHeader>\n          <PanelBody>\n            {primary && (\n              <EmailRow\n                onRemove={this.handleRemove}\n                onVerify={this.handleVerify}\n                {...primary}\n              />\n            )}\n\n            {secondary &&\n              secondary.map(emailObj => (\n                <EmailRow\n                  key={emailObj.email}\n                  onSetPrimary={this.handleSetPrimary}\n                  onRemove={this.handleRemove}\n                  onVerify={this.handleVerify}\n                  {...emailObj}\n                />\n              ))}\n          </PanelBody>\n        </Panel>\n\n        <Form\n          apiMethod=\"POST\"\n          apiEndpoint={ENDPOINT}\n          saveOnBlur\n          allowUndo={false}\n          onSubmitSuccess={this.handleSubmitSuccess}\n        >\n          <JsonForm location={this.props.location} forms={accountEmailsFields} />\n        </Form>\n\n        <AlertLink to=\"/settings/account/notifications\" icon={<IconStack />}>\n          {t('Want to change how many emails you get? Use the notifications panel.')}\n        </AlertLink>\n      </div>\n    );\n  }\n}\n\nexport default AccountEmails;\n\nconst EmailTags = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: ${space(1)};\n  align-items: center;\n`;\n\nconst EmailItem = styled(PanelItem)`\n  justify-content: space-between;\n`;\n"],"sourceRoot":""}