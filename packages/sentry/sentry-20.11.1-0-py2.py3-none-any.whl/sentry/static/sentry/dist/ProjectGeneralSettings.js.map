{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/components/forms/formPanel.tsx","webpack:///./app/views/settings/components/forms/jsonForm.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/components/alertLink.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/utils/slugify.tsx","webpack:///./app/data/platforms.tsx","webpack:///./app/data/forms/projectGeneralSettings.tsx","webpack:///./app/views/settings/projectGeneralSettings.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","FormPanel","fields","access","disabled","additionalFieldProps","renderFooter","renderHeader","otherProps","id","sanitizeQuerySelector","undefined","map","field","defaultValue","fieldWithoutDefaultValue","disabledReason","key","name","highlighted","JsonForm","state","getLocation","context","hash","scrollToHash","nextProps","setState","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","fieldsWithVisibleProp","filter","defined","visible","length","every","formPanelProps","shouldDisplayForm","forms","features","location","formGroup","i","Fragment","renderForm","contextTypes","PropTypes","object","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","stepBack","paths","path","indexOf","findLastIndex","slice","baseRoute","search","fullRoute","join","replaceRouterParams","AlertLink","size","priority","children","onClick","withoutMarginBottom","openInNewTab","href","dataTestId","StyledLink","data-test-id","IconWrapper","AlertLinkText","IconLink","direction","linkProps","omit","theme","alert","backgroundLight","textColor","border","PermissionAlert","hasAccess","type","t","slugify","str","toLowerCase","replace","otherPlatform","integrations","link","concat","platforms","platform","language","integration","tracing","includes","route","RESOLVE_AGE_ALLOWED_VALUES","values","push","getResolveAgeAllowedValues","ORG_DISABLED_REASON","slug","required","label","placeholder","help","transformInput","saveOnBlur","saveMessageAlertType","saveMessage","choices","PlatformWrapper","StyledPlatformIcon","subjectPrefix","resolveAge","allowedValues","formatLabel","val","Number","tn","tct","Caution","allowedDomains","multiline","autosize","maxRows","getValue","extractMultilineFields","setValue","convertMultilineFieldValue","scrapeJavaScript","organization","securityToken","value","getDynamicText","fixed","securityTokenHeader","verifySSL","PlatformIcon","ProjectGeneralSettings","args","handleTransferFieldChange","_form","handleRemoveProject","orgId","project","data","removeProject","api","then","window","assign","handleXhrErrorResponse","handleTransferProject","email","transferProject","isProjectAdmin","Set","has","projectId","isInternal","linebreak","onConfirm","confirmText","message","className","renderMessage","confirm","hideFooter","onFieldChange","onSubmit","_data","_onSuccess","_onError","e","stopPropagation","endpoint","jsonFormProps","allowUndo","initialData","team","apiMethod","apiEndpoint","onSubmitSuccess","resp","changeProjectSlug","onChangeSlug","ProjectActions","updateSuccess","underline","noMargin","Origin","Referer","renderRemoveProject","renderTransferProject","isRequired","ProjectGeneralSettingsContainer","createReactClass","mixins","Reflux","listenTo","ProjectsStore","onProjectsUpdate","_projects","changedSlug","getBySlug","browserHistory","render","newSlug"],"mappings":"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","file":"ProjectGeneralSettings.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\nimport {Scope} from 'app/types';\n\nimport {FieldObject, JsonFormObject} from './type';\n\ntype Props = {\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n\n  access?: Set<Scope>;\n  features?: Record<string, any>;\n\n  additionalFieldProps: {[key: string]: any};\n\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n};\n\nexport default class FormPanel extends React.Component<Props> {\n  render() {\n    const {\n      title,\n      fields,\n      access,\n      disabled,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n        {title && <PanelHeader>{title}</PanelHeader>}\n        <PanelBody>\n          {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n          {fields.map(field => {\n            if (typeof field === 'function') {\n              return field();\n            }\n\n            const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n            // Allow the form panel disabled prop to override the fields\n            // disabled prop, with fallback to the fields disabled state.\n            if (disabled === true) {\n              fieldWithoutDefaultValue.disabled = true;\n              fieldWithoutDefaultValue.disabledReason = undefined;\n            }\n\n            return (\n              <FieldFromConfig\n                access={access}\n                disabled={disabled}\n                key={field.name}\n                {...otherProps}\n                {...additionalFieldProps}\n                field={fieldWithoutDefaultValue}\n                highlighted={this.props.highlighted === `#${field.name}`}\n              />\n            );\n          })}\n          {typeof renderFooter === 'function' && renderFooter({title, fields})}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import {Box} from 'reflexbox';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport scrollToElement from 'scroll-to-element';\nimport {Location} from 'history';\nimport * as Sentry from '@sentry/react';\n\nimport {defined} from 'app/utils';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\n\nimport {Field, FieldObject, JsonFormObject} from './type';\nimport FieldFromConfig from './fieldFromConfig';\nimport FormPanel from './formPanel';\n\ntype DefaultProps = {\n  additionalFieldProps: {[key: string]: any};\n};\n\ntype Props = {\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n  location?: Location;\n} & DefaultProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype Context = {\n  location?: Location;\n};\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends React.Component<Props, State> {\n  static propTypes = {\n    /**\n     * Fields that are grouped by \"section\"\n     */\n    forms: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        fields: PropTypes.arrayOf(\n          PropTypes.oneOfType([PropTypes.func, FieldFromConfig.propTypes.field])\n        ),\n      })\n    ),\n\n    /**\n     * If `forms` is not defined, `title` + `fields` must be required.\n     * Allows more fine grain control of title/fields\n     */\n    fields: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.func, FieldFromConfig.propTypes.field])\n    ),\n    /**\n     * Panel title if `forms` is not defined\n     */\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n    access: PropTypes.object,\n    features: PropTypes.object,\n    renderFooter: PropTypes.func,\n    /**\n     * Renders inside of PanelBody\n     */\n    renderHeader: PropTypes.func,\n    /**\n     * Disables the entire form\n     */\n    disabled: PropTypes.bool,\n  };\n\n  static contextTypes = {\n    location: PropTypes.object,\n  };\n\n  static defaultProps: DefaultProps = {\n    additionalFieldProps: {},\n  };\n\n  state: State = {\n    highlighted: getLocation(this.props, this.context).hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (\n      getLocation(this.props, this.context).hash !==\n      getLocation(nextProps, this.context).hash\n    ) {\n      const hash = getLocation(nextProps, this.context).hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    const hash = toHash || getLocation(this.props, this.context).hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n    };\n\n    return (\n      <Box {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <React.Fragment key={i}>\n              {this.renderForm({formPanelProps, ...formGroup})}\n            </React.Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </Box>\n    );\n  }\n}\n\nexport default JsonForm;\n\nfunction getLocation(props: Props, context: Context): Location | {hash?: string} {\n  return props.location || context.location || {};\n}\n","import {Location} from 'history';\nimport {PlainRoute} from 'react-router/lib/Route';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\n\ntype Options = {\n  routes: PlainRoute[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport omit from 'lodash/omit';\n\nimport Link from 'app/components/links/link';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n      ['data-test-id']: dataTestId,\n    } = this.props;\n\n    return (\n      <StyledLink\n        data-test-id={dataTestId}\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t} from 'app/locale';\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nPermissionAlert.propTypes = {\n  access: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default PermissionAlert;\n","// XXX: This is NOT an exhaustive slugify function\n// Only forces lowercase and replaces spaces with hyphens\nexport default function slugify(str: any): string {\n  return typeof str === 'string' ? str.toLowerCase().replace(' ', '-') : '';\n}\n","/* eslint import/no-unresolved:0 import/order:0 */\nimport {PlatformIntegration} from 'app/types';\nimport {platforms} from 'integration-docs-platforms';\nimport {t} from 'app/locale';\n\nimport {tracing} from './platformCategories';\n\nconst otherPlatform = {\n  integrations: [\n    {\n      link: 'https://docs.sentry.io/platforms/',\n      type: 'language',\n      id: 'other',\n      name: t('Other'),\n    },\n  ],\n  id: 'other',\n  name: t('Other'),\n};\n\nexport default ([] as PlatformIntegration[]).concat(\n  [],\n  ...[...platforms, otherPlatform].map(platform =>\n    platform.integrations\n      .map(i => ({...i, language: platform.id}))\n      // filter out any tracing platforms; as they're not meant to be used as a platform for\n      // the project creation flow\n      .filter(integration => !(tracing as readonly string[]).includes(integration.id))\n  )\n);\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PlatformIcon from 'platformicons';\n\nimport {extractMultilineFields, convertMultilineFieldValue} from 'app/utils';\nimport {t, tct, tn} from 'app/locale';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport platforms from 'app/data/platforms';\nimport slugify from 'app/utils/slugify';\nimport space from 'app/styles/space';\nimport {Field} from 'app/views/settings/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/';\n\nconst getResolveAgeAllowedValues = () => {\n  let i = 0;\n  const values: number[] = [];\n  while (i <= 720) {\n    values.push(i);\n    if (i < 12) {\n      i += 1;\n    } else if (i < 24) {\n      i += 3;\n    } else if (i < 36) {\n      i += 6;\n    } else if (i < 48) {\n      i += 12;\n    } else {\n      i += 24;\n    }\n  }\n  return values;\n};\n\nconst RESOLVE_AGE_ALLOWED_VALUES = getResolveAgeAllowedValues();\n\nconst ORG_DISABLED_REASON = t(\n  \"This option is enforced by your organization's settings and cannot be customized per-project.\"\n);\n\nexport const fields: Record<string, Field> = {\n  slug: {\n    name: 'slug',\n    type: 'string',\n    required: true,\n    label: t('Name'),\n    placeholder: t('my-service-name'),\n    help: t('A unique ID used to identify this project'),\n    transformInput: slugify,\n\n    saveOnBlur: false,\n    saveMessageAlertType: 'info',\n    saveMessage: t('You will be redirected to the new project slug after saving'),\n  },\n\n  platform: {\n    name: 'platform',\n    type: 'array',\n    label: t('Platform'),\n    choices: () =>\n      platforms.map(({id, name}) => [\n        id,\n        <PlatformWrapper key={id}>\n          <StyledPlatformIcon platform={id} />\n          {name}\n        </PlatformWrapper>,\n      ]),\n    help: t('The primary platform for this project, used only for aesthetics'),\n  },\n\n  subjectPrefix: {\n    name: 'subjectPrefix',\n    type: 'string',\n    label: t('Subject Prefix'),\n    placeholder: t('e.g. [my-org]'),\n    help: t('Choose a custom prefix for emails from this project'),\n  },\n\n  resolveAge: {\n    name: 'resolveAge',\n    type: 'range',\n    allowedValues: RESOLVE_AGE_ALLOWED_VALUES,\n    label: t('Auto Resolve'),\n    help: t(\n      \"Automatically resolve an issue if it hasn't been seen for this amount of time\"\n    ),\n    formatLabel: val => {\n      val = Number(val);\n      if (val === 0) {\n        return t('Disabled');\n      }\n\n      if (val > 23 && val % 24 === 0) {\n        // Based on allowed values, val % 24 should always be true\n        val = val / 24;\n        return tn('%s day', '%s days', val);\n      }\n\n      return tn('%s hour', '%s hours', val);\n    },\n    saveOnBlur: false,\n    saveMessage: tct(\n      '[Caution]: Enabling auto resolve will immediately resolve anything that has ' +\n        'not been seen within this period of time. There is no undo!',\n      {\n        Caution: <strong>Caution</strong>,\n      }\n    ),\n    saveMessageAlertType: 'warning',\n  },\n  allowedDomains: {\n    name: 'allowedDomains',\n    type: 'string',\n    multiline: true,\n    autosize: true,\n    maxRows: 10,\n    placeholder: t('https://example.com or example.com'),\n    label: t('Allowed Domains'),\n    help: t('Separate multiple entries with a newline'),\n    getValue: val => extractMultilineFields(val),\n    setValue: val => convertMultilineFieldValue(val),\n  },\n  scrapeJavaScript: {\n    name: 'scrapeJavaScript',\n    type: 'boolean',\n    // if this is off for the organization, it cannot be enabled for the project\n    disabled: ({organization, name}) => !organization[name],\n    disabledReason: ORG_DISABLED_REASON,\n    // `props` are the props given to FormField\n    setValue: (val, props) => props.organization && props.organization[props.name] && val,\n    label: t('Enable JavaScript source fetching'),\n    help: t('Allow Sentry to scrape missing JavaScript source context when possible'),\n  },\n  securityToken: {\n    name: 'securityToken',\n    type: 'string',\n    label: t('Security Token'),\n    help: t(\n      'Outbound requests matching Allowed Domains will have the header \"{token_header}: {token}\" appended'\n    ),\n    setValue: value => getDynamicText({value, fixed: '__SECURITY_TOKEN__'}),\n  },\n  securityTokenHeader: {\n    name: 'securityTokenHeader',\n    type: 'string',\n    placeholder: t('X-Sentry-Token'),\n    label: t('Security Token Header'),\n    help: t(\n      'Outbound requests matching Allowed Domains will have the header \"{token_header}: {token}\" appended'\n    ),\n  },\n  verifySSL: {\n    name: 'verifySSL',\n    type: 'boolean',\n    label: t('Verify TLS/SSL'),\n    help: t('Outbound requests will verify TLS (sometimes known as SSL) connections'),\n  },\n};\n\nconst PlatformWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin-right: ${space(1)};\n`;\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\n\nimport {Panel, PanelAlert, PanelHeader} from 'app/components/panels';\nimport {\n  changeProjectSlug,\n  removeProject,\n  transferProject,\n} from 'app/actionCreators/projects';\nimport {fields} from 'app/data/forms/projectGeneralSettings';\nimport {t, tct} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport Field from 'app/views/settings/components/forms/field';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\nimport ProjectActions from 'app/actions/projectActions';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport TextField from 'app/views/settings/components/forms/textField';\nimport handleXhrErrorResponse from 'app/utils/handleXhrErrorResponse';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AlertLink from 'app/components/alertLink';\n\nclass ProjectGeneralSettings extends AsyncView {\n  static propTypes = {\n    onChangeSlug: PropTypes.func,\n  };\n\n  static contextTypes = {\n    organization: PropTypes.object.isRequired,\n  };\n\n  constructor(...args) {\n    super(...args);\n    this._form = {};\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Project Settings'), projectId, false);\n  }\n\n  getEndpoints() {\n    const {orgId, projectId} = this.props.params;\n\n    return [['data', `/projects/${orgId}/${projectId}/`]];\n  }\n\n  handleTransferFieldChange = (id, value) => {\n    this._form[id] = value;\n  };\n\n  handleRemoveProject = () => {\n    const {orgId} = this.props.params;\n    const project = this.state.data;\n    if (!project) {\n      return;\n    }\n\n    removeProject(this.api, orgId, project).then(() => {\n      // Need to hard reload because lots of components do not listen to Projects Store\n      window.location.assign('/');\n    }, handleXhrErrorResponse('Unable to remove project'));\n  };\n\n  handleTransferProject = () => {\n    const {orgId} = this.props.params;\n    const project = this.state.data;\n    if (!project) {\n      return;\n    }\n    if (!this._form.email) {\n      return;\n    }\n\n    transferProject(this.api, orgId, project, this._form.email).then(() => {\n      // Need to hard reload because lots of components do not listen to Projects Store\n      window.location.assign('/');\n    }, handleXhrErrorResponse('Unable to transfer project'));\n  };\n\n  isProjectAdmin = () => new Set(this.context.organization.access).has('project:admin');\n\n  renderRemoveProject() {\n    const project = this.state.data;\n    const isProjectAdmin = this.isProjectAdmin();\n    const {isInternal} = project;\n\n    return (\n      <Field\n        label={t('Remove Project')}\n        help={tct(\n          'Remove the [project] project and all related data. [linebreak] Careful, this action cannot be undone.',\n          {\n            project: <strong>{project.slug}</strong>,\n            linebreak: <br />,\n          }\n        )}\n      >\n        {!isProjectAdmin &&\n          t('You do not have the required permission to remove this project.')}\n\n        {isInternal &&\n          t(\n            'This project cannot be removed. It is used internally by the Sentry server.'\n          )}\n\n        {isProjectAdmin && !isInternal && (\n          <Confirm\n            onConfirm={this.handleRemoveProject}\n            priority=\"danger\"\n            title={t('Remove project?')}\n            confirmText={t('Remove project')}\n            message={\n              <div>\n                <TextBlock>\n                  <strong>\n                    {t('Removing this project is permanent and cannot be undone!')}\n                  </strong>\n                </TextBlock>\n                <TextBlock>\n                  {t('This will also remove all associated event data.')}\n                </TextBlock>\n              </div>\n            }\n          >\n            <div>\n              <Button className=\"ref-remove-project\" type=\"button\" priority=\"danger\">\n                {t('Remove Project')}\n              </Button>\n            </div>\n          </Confirm>\n        )}\n      </Field>\n    );\n  }\n\n  renderTransferProject() {\n    const project = this.state.data;\n    const isProjectAdmin = this.isProjectAdmin();\n    const {isInternal} = project;\n\n    return (\n      <Field\n        label={t('Transfer Project')}\n        help={tct(\n          'Transfer the [project] project and all related data. [linebreak] Careful, this action cannot be undone.',\n          {\n            project: <strong>{project.slug}</strong>,\n            linebreak: <br />,\n          }\n        )}\n      >\n        {!isProjectAdmin &&\n          t('You do not have the required permission to transfer this project.')}\n\n        {isInternal &&\n          t(\n            'This project cannot be transferred. It is used internally by the Sentry server.'\n          )}\n\n        {isProjectAdmin && !isInternal && (\n          <Confirm\n            onConfirm={this.handleTransferProject}\n            priority=\"danger\"\n            title={`${t('Transfer project')}?`}\n            confirmText={t('Transfer project')}\n            renderMessage={({confirm}) => (\n              <div>\n                <TextBlock>\n                  <strong>\n                    {t('Transferring this project is permanent and cannot be undone!')}\n                  </strong>\n                </TextBlock>\n                <TextBlock>\n                  {t(\n                    'Please enter the email of an organization owner to whom you would like to transfer this project.'\n                  )}\n                </TextBlock>\n                <Panel>\n                  <Form\n                    hideFooter\n                    onFieldChange={this.handleTransferFieldChange}\n                    onSubmit={(_data, _onSuccess, _onError, e) => {\n                      e.stopPropagation();\n                      confirm();\n                    }}\n                  >\n                    <TextField\n                      name=\"email\"\n                      label={t('Organization Owner')}\n                      placeholder=\"admin@example.com\"\n                      required\n                      help={t(\n                        'A request will be emailed to this address, asking the organization owner to accept the project transfer.'\n                      )}\n                    />\n                  </Form>\n                </Panel>\n              </div>\n            )}\n          >\n            <div>\n              <Button className=\"ref-transfer-project\" type=\"button\" priority=\"danger\">\n                {t('Transfer Project')}\n              </Button>\n            </div>\n          </Confirm>\n        )}\n      </Field>\n    );\n  }\n\n  renderBody() {\n    const {organization} = this.context;\n    const project = this.state.data;\n    const {orgId, projectId} = this.props.params;\n    const endpoint = `/projects/${orgId}/${projectId}/`;\n    const access = new Set(organization.access);\n    const jsonFormProps = {\n      additionalFieldProps: {\n        organization,\n      },\n      features: new Set(organization.features),\n      access,\n      disabled: !access.has('project:write'),\n    };\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Project Settings')} />\n        <PermissionAlert />\n\n        <Form\n          saveOnBlur\n          allowUndo\n          initialData={{\n            ...project,\n            team: project.team && project.team.slug,\n          }}\n          apiMethod=\"PUT\"\n          apiEndpoint={endpoint}\n          onSubmitSuccess={resp => {\n            this.setState({data: resp});\n            if (projectId !== resp.slug) {\n              changeProjectSlug(projectId, resp.slug);\n              // Container will redirect after stores get updated with new slug\n              this.props.onChangeSlug(resp.slug);\n            }\n            // This will update our project context\n            ProjectActions.updateSuccess(resp);\n          }}\n        >\n          <JsonForm\n            {...jsonFormProps}\n            title={t('Project Details')}\n            fields={[fields.slug, fields.platform]}\n          />\n\n          <JsonForm\n            {...jsonFormProps}\n            title={t('Email')}\n            fields={[fields.subjectPrefix]}\n          />\n\n          <JsonForm\n            {...jsonFormProps}\n            title={t('Event Settings')}\n            fields={[fields.resolveAge]}\n          />\n\n          <AlertLink\n            to={`/settings/${organization.slug}/projects/${project.slug}/issue-grouping/`}\n            priority=\"info\"\n          >\n            {tct(\n              \"psst. Looking for the Grouping Settings? You'll find that under [underline: Issue Grouping].\",\n              {\n                underline: <u />,\n              }\n            )}\n          </AlertLink>\n\n          <JsonForm\n            {...jsonFormProps}\n            title={t('Client Security')}\n            fields={[\n              fields.allowedDomains,\n              fields.scrapeJavaScript,\n              fields.securityToken,\n              fields.securityTokenHeader,\n              fields.verifySSL,\n            ]}\n            renderHeader={() => (\n              <PanelAlert type=\"info\">\n                <TextBlock noMargin>\n                  {tct(\n                    'Configure origin URLs which Sentry should accept events from. This is used for communication with clients like [link].',\n                    {\n                      link: (\n                        <a href=\"https://github.com/getsentry/sentry-javascript\">\n                          sentry-javascript\n                        </a>\n                      ),\n                    }\n                  )}{' '}\n                  {tct(\n                    'This will restrict requests based on the [Origin] and [Referer] headers.',\n                    {\n                      Origin: <code>Origin</code>,\n                      Referer: <code>Referer</code>,\n                    }\n                  )}\n                </TextBlock>\n              </PanelAlert>\n            )}\n          />\n        </Form>\n\n        <Panel>\n          <PanelHeader>{t('Project Administration')}</PanelHeader>\n          {this.renderRemoveProject()}\n          {this.renderTransferProject()}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nconst ProjectGeneralSettingsContainer = createReactClass({\n  mixins: [Reflux.listenTo(ProjectsStore, 'onProjectsUpdate')],\n  onProjectsUpdate(_projects) {\n    if (!this.changedSlug) {\n      return;\n    }\n    const project = ProjectsStore.getBySlug(this.changedSlug);\n\n    if (!project) {\n      return;\n    }\n\n    browserHistory.replace(\n      recreateRoute('', {\n        ...this.props,\n        params: {\n          ...this.props.params,\n          projectId: this.changedSlug,\n        },\n      })\n    );\n  },\n\n  render() {\n    return (\n      <ProjectGeneralSettings\n        onChangeSlug={newSlug => (this.changedSlug = newSlug)}\n        {...this.props}\n      />\n    );\n  },\n});\n\nexport default ProjectGeneralSettingsContainer;\n"],"sourceRoot":""}