{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/acceptProjectTransfer.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","AcceptProjectTransfer","handleSubmit","formData","api","request","method","data","location","query","organization","success","orgSlug","router","push","addSuccessMessage","t","error","errorMsg","responseJSON","detail","addErrorMessage","disableLog","transferDetails","state","choices","organizations","map","org","slug","tct","projectSettings","project","onSubmit","submitLabel","submitPriority","initialData","undefined","deprecatedSelectControl","label","name","style","borderBottom"],"mappings":"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","file":"AcceptProjectTransfer.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router/lib/Router';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport NarrowLayout from 'app/components/narrowLayout';\nimport SelectField from 'app/views/settings/components/forms/selectField';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport {t, tct} from 'app/locale';\nimport {Organization, Project} from 'app/types';\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype TransferDetails = {\n  organizations: Organization[];\n  project: Project;\n};\n\ntype State = {\n  transferDetails: TransferDetails | null;\n} & AsyncView['state'];\n\nclass AcceptProjectTransfer extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const query = this.props.location.query;\n    return [['transferDetails', '/accept-transfer/', {query}]];\n  }\n\n  getTitle() {\n    return t('Accept Project Transfer');\n  }\n\n  handleSubmit = formData => {\n    this.api.request('/accept-transfer/', {\n      method: 'POST',\n      data: {\n        data: this.props.location.query.data,\n        organization: formData.organization,\n      },\n      success: () => {\n        const orgSlug = formData.organization;\n\n        this.props.router.push(`/${orgSlug}`);\n        addSuccessMessage(t('Project successfully transferred'));\n      },\n      error: error => {\n        const errorMsg =\n          error && error.responseJSON && typeof error.responseJSON.detail === 'string'\n            ? error.responseJSON.detail\n            : '';\n\n        addErrorMessage(\n          t('Unable to transfer project') + errorMsg ? `: ${errorMsg}` : ''\n        );\n      },\n    });\n  };\n\n  renderError(error) {\n    let disableLog = false;\n    // Check if there is an error message with `transferDetails` endpoint\n    // If so, show as toast and ignore, otherwise log to sentry\n    if (error && error.responseJSON && typeof error.responseJSON.detail === 'string') {\n      addErrorMessage(error.responseJSON.detail);\n      disableLog = true;\n    }\n\n    return super.renderError(error, disableLog);\n  }\n\n  renderBody() {\n    const {transferDetails} = this.state;\n    const choices = transferDetails?.organizations.map(org => [org.slug, org.slug]);\n    const organization = choices?.[0]?.[0];\n\n    return (\n      <NarrowLayout>\n        <SettingsPageHeader title={t('Approve Transfer Project Request')} />\n        <p>\n          {tct(\n            'Projects must be transferred to a specific [organization]. ' +\n              'You can grant specific teams access to the project later under the [projectSettings]. ' +\n              '(Note that granting access to at least one team is necessary for the project to ' +\n              'appear in all parts of the UI.)',\n            {\n              organization: <strong>{t('Organization')}</strong>,\n              projectSettings: <strong>{t('Project Settings')}</strong>,\n            }\n          )}\n        </p>\n        {transferDetails && (\n          <p>\n            {tct(\n              'Please select which [organization] you want for the project [project].',\n              {\n                organization: <strong>{t('Organization')}</strong>,\n                project: transferDetails.project.slug,\n              }\n            )}\n          </p>\n        )}\n        <Form\n          onSubmit={this.handleSubmit}\n          submitLabel={t('Transfer Project')}\n          submitPriority=\"danger\"\n          initialData={organization ? {organization} : undefined}\n        >\n          <SelectField\n            deprecatedSelectControl\n            choices={choices}\n            label={t('Organization')}\n            name=\"organization\"\n            style={{borderBottom: 'none'}}\n          />\n        </Form>\n      </NarrowLayout>\n    );\n  }\n}\n\nexport default AcceptProjectTransfer;\n"],"sourceRoot":""}