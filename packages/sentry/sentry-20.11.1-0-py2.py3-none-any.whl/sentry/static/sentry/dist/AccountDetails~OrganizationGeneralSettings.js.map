{"version":3,"sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/components/forms/formPanel.tsx","webpack:///./app/views/settings/components/forms/jsonForm.tsx","webpack:///./app/components/well.tsx","webpack:///./app/components/avatarCropper.tsx","webpack:///./app/components/avatarChooser.tsx"],"names":["SettingsPageHeading","this","props","icon","title","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","FormPanel","fields","access","disabled","additionalFieldProps","renderFooter","renderHeader","otherProps","id","sanitizeQuerySelector","undefined","map","field","defaultValue","fieldWithoutDefaultValue","disabledReason","key","name","highlighted","JsonForm","state","getLocation","context","hash","scrollToHash","nextProps","setState","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","fieldsWithVisibleProp","filter","defined","visible","length","every","formPanelProps","shouldDisplayForm","forms","features","location","formGroup","i","Fragment","renderForm","contextTypes","PropTypes","object","Well","theme","border","backgroundSecondary","hasImage","centered","propTypes","bool","resizerPositions","nw","ne","se","sw","AvatarCropper","file","objectURL","mousePosition","pageX","pageY","resizeDimensions","top","left","size","resizeDirection","createRef","canvas","image","cropContainer","MIN_DIMENSION","MAX_DIMENSION","ALLOWED_MIMETYPES","onSelectFile","ev","target","files","test","type","revokeObjectUrl","updateDataUrlState","window","URL","createObjectURL","savedDataUrl","addErrorMessage","t","revokeObjectURL","onImageLoad","error","validateImage","current","Math","min","clientHeight","clientWidth","drawToCanvas","updateDimensions","onMouseDown","preventDefault","document","addEventListener","onMouseUp","removeEventListener","startResize","direction","stopPropagation","updateSize","stopResize","yDiff","xDiff","getNewDimensions","getDiffNW","getDiffNE","getDiffSW","getDiffSE","container","oldDimensions","diff","toUpperCase","height","width","editingTop","editingLeft","newDimensions","maxSize","uploadClick","click","img","naturalWidth","naturalHeight","tct","ratio","getContext","drawImage","dataUrl","toDataURL","src","imageSrc","style","ImageCropper","CropContainer","ref","onLoad","onDragStart","e","Cropper","Object","keys","pos","Resizer","position","bind","upload","onClick","uploader","HiddenCanvas","renderImageCrop","className","UploadInput","accept","onChange","model","uuid","avatar","avatarUuid","photoUrl","AVATAR_URL_MAP","background","gray300","AvatarChooser","hasError","handleSaveSettings","endpoint","api","data","avatarType","avatar_photo","split","avatar_type","request","method","success","resp","handleSuccess","handleError","handleChange","updateState","msg","onSave","addSuccessMessage","allowGravatar","allowUpload","allowLetter","isUser","isLetter","isTeam","isOrganization","choices","push","AvatarForm","AvatarGroup","inline","flex","value","label","gravatar","user","organization","team","AvatarUploadSection","href","dataState","AvatarSubmit","priority","withApi"],"mappings":"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","file":"AccountDetails~OrganizationGeneralSettings.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\nimport {Scope} from 'app/types';\n\nimport {FieldObject, JsonFormObject} from './type';\n\ntype Props = {\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n\n  access?: Set<Scope>;\n  features?: Record<string, any>;\n\n  additionalFieldProps: {[key: string]: any};\n\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n};\n\nexport default class FormPanel extends React.Component<Props> {\n  render() {\n    const {\n      title,\n      fields,\n      access,\n      disabled,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n        {title && <PanelHeader>{title}</PanelHeader>}\n        <PanelBody>\n          {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n          {fields.map(field => {\n            if (typeof field === 'function') {\n              return field();\n            }\n\n            const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n            // Allow the form panel disabled prop to override the fields\n            // disabled prop, with fallback to the fields disabled state.\n            if (disabled === true) {\n              fieldWithoutDefaultValue.disabled = true;\n              fieldWithoutDefaultValue.disabledReason = undefined;\n            }\n\n            return (\n              <FieldFromConfig\n                access={access}\n                disabled={disabled}\n                key={field.name}\n                {...otherProps}\n                {...additionalFieldProps}\n                field={fieldWithoutDefaultValue}\n                highlighted={this.props.highlighted === `#${field.name}`}\n              />\n            );\n          })}\n          {typeof renderFooter === 'function' && renderFooter({title, fields})}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import {Box} from 'reflexbox';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport scrollToElement from 'scroll-to-element';\nimport {Location} from 'history';\nimport * as Sentry from '@sentry/react';\n\nimport {defined} from 'app/utils';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\n\nimport {Field, FieldObject, JsonFormObject} from './type';\nimport FieldFromConfig from './fieldFromConfig';\nimport FormPanel from './formPanel';\n\ntype DefaultProps = {\n  additionalFieldProps: {[key: string]: any};\n};\n\ntype Props = {\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n  location?: Location;\n} & DefaultProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype Context = {\n  location?: Location;\n};\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends React.Component<Props, State> {\n  static propTypes = {\n    /**\n     * Fields that are grouped by \"section\"\n     */\n    forms: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        fields: PropTypes.arrayOf(\n          PropTypes.oneOfType([PropTypes.func, FieldFromConfig.propTypes.field])\n        ),\n      })\n    ),\n\n    /**\n     * If `forms` is not defined, `title` + `fields` must be required.\n     * Allows more fine grain control of title/fields\n     */\n    fields: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.func, FieldFromConfig.propTypes.field])\n    ),\n    /**\n     * Panel title if `forms` is not defined\n     */\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n    access: PropTypes.object,\n    features: PropTypes.object,\n    renderFooter: PropTypes.func,\n    /**\n     * Renders inside of PanelBody\n     */\n    renderHeader: PropTypes.func,\n    /**\n     * Disables the entire form\n     */\n    disabled: PropTypes.bool,\n  };\n\n  static contextTypes = {\n    location: PropTypes.object,\n  };\n\n  static defaultProps: DefaultProps = {\n    additionalFieldProps: {},\n  };\n\n  state: State = {\n    highlighted: getLocation(this.props, this.context).hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (\n      getLocation(this.props, this.context).hash !==\n      getLocation(nextProps, this.context).hash\n    ) {\n      const hash = getLocation(nextProps, this.context).hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    const hash = toHash || getLocation(this.props, this.context).hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n    };\n\n    return (\n      <Box {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <React.Fragment key={i}>\n              {this.renderForm({formPanelProps, ...formGroup})}\n            </React.Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </Box>\n    );\n  }\n}\n\nexport default JsonForm;\n\nfunction getLocation(props: Props, context: Context): Location | {hash?: string} {\n  return props.location || context.location || {};\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\ntype Props = {\n  hasImage?: boolean;\n  centered?: boolean;\n  children: React.ReactNode;\n  theme?: any;\n};\n\ntype WellProps = Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props;\n\nconst Well = styled('div')<WellProps>`\n  border: 1px solid ${p => p.theme.border};\n  box-shadow: none;\n  background: ${p => p.theme.backgroundSecondary};\n  padding: ${p => (p.hasImage ? '80px 30px' : '15px 20px')};\n  margin-bottom: 20px;\n  border-radius: 3px;\n  ${p => p.centered && 'text-align: center'};\n`;\n\nWell.propTypes = {\n  hasImage: PropTypes.bool,\n  centered: PropTypes.bool,\n};\n\nexport default Well;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {AVATAR_URL_MAP} from 'app/constants';\nimport {t, tct} from 'app/locale';\nimport Well from 'app/components/well';\nimport {AvatarUser} from 'app/types';\n\nconst resizerPositions = {\n  nw: ['top', 'left'],\n  ne: ['top', 'right'],\n  se: ['bottom', 'right'],\n  sw: ['bottom', 'left'],\n};\n\ntype Position = keyof typeof resizerPositions;\n\ntype Model = Pick<AvatarUser, 'avatar'>;\n\ntype Props = {\n  model: Model;\n  updateDataUrlState: (opts: {savedDataUrl?: string | null; dataUrl?: string}) => void;\n  type: 'user' | 'team' | 'organization' | 'project';\n  savedDataUrl?: string;\n};\n\ntype State = {\n  file: File | null;\n  objectURL: string | null;\n  mousePosition: {pageX: number; pageY: number};\n  resizeDimensions: {top: number; left: number; size: number};\n  resizeDirection: Position | null;\n};\n\nclass AvatarCropper extends React.Component<Props, State> {\n  static propTypes = {\n    model: PropTypes.object.isRequired,\n    updateDataUrlState: PropTypes.func.isRequired,\n    type: PropTypes.oneOf(['user', 'team', 'organization', 'project']),\n    savedDataUrl: PropTypes.string,\n  };\n\n  state: State = {\n    file: null,\n    objectURL: null,\n    mousePosition: {pageX: 0, pageY: 0},\n    resizeDimensions: {top: 0, left: 0, size: 0},\n    resizeDirection: null,\n  };\n\n  componentWillUnmount() {\n    this.revokeObjectUrl();\n  }\n\n  file = React.createRef<HTMLInputElement>();\n  canvas = React.createRef<HTMLCanvasElement>();\n  image = React.createRef<HTMLImageElement>();\n  cropContainer = React.createRef<HTMLDivElement>();\n\n  // These values must be synced with the avatar endpoint in backend.\n  MIN_DIMENSION = 256;\n  MAX_DIMENSION = 1024;\n  ALLOWED_MIMETYPES = 'image/gif,image/jpeg,image/png';\n\n  onSelectFile = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const file = ev.target.files && ev.target.files[0];\n\n    // No file selected (e.g. user clicked \"cancel\")\n    if (!file) {\n      return;\n    }\n\n    if (!/^image\\//.test(file.type)) {\n      addErrorMessage(t('That is not a supported file type.'));\n      return;\n    }\n\n    this.revokeObjectUrl();\n\n    const {updateDataUrlState} = this.props;\n    const objectURL = window.URL.createObjectURL(file);\n    this.setState({file, objectURL}, () => updateDataUrlState({savedDataUrl: null}));\n  };\n\n  revokeObjectUrl = () =>\n    this.state.objectURL && window.URL.revokeObjectURL(this.state.objectURL);\n\n  onImageLoad = () => {\n    const error = this.validateImage();\n    if (error) {\n      this.revokeObjectUrl();\n      this.setState({objectURL: null});\n      addErrorMessage(error);\n      return;\n    }\n\n    const image = this.image.current;\n    if (!image) {\n      return;\n    }\n\n    const dimension = Math.min(image.clientHeight, image.clientWidth);\n    const state = {resizeDimensions: {size: dimension, top: 0, left: 0}};\n\n    this.setState(state, this.drawToCanvas);\n  };\n\n  updateDimensions = (ev: MouseEvent) => {\n    const cropContainer = this.cropContainer.current;\n    if (!cropContainer) {\n      return;\n    }\n\n    const {mousePosition, resizeDimensions} = this.state;\n\n    let pageY = ev.pageY;\n    let pageX = ev.pageX;\n    let top = resizeDimensions.top + (pageY - mousePosition.pageY);\n    let left = resizeDimensions.left + (pageX - mousePosition.pageX);\n\n    if (top < 0) {\n      top = 0;\n      pageY = mousePosition.pageY;\n    } else if (top + resizeDimensions.size > cropContainer.clientHeight) {\n      top = cropContainer.clientHeight - resizeDimensions.size;\n      pageY = mousePosition.pageY;\n    }\n\n    if (left < 0) {\n      left = 0;\n      pageX = mousePosition.pageX;\n    } else if (left + resizeDimensions.size > cropContainer.clientWidth) {\n      left = cropContainer.clientWidth - resizeDimensions.size;\n      pageX = mousePosition.pageX;\n    }\n\n    this.setState(state => ({\n      resizeDimensions: {...state.resizeDimensions, top, left},\n      mousePosition: {pageX, pageY},\n    }));\n  };\n\n  onMouseDown = (ev: React.MouseEvent<HTMLDivElement>) => {\n    ev.preventDefault();\n    this.setState({mousePosition: {pageY: ev.pageY, pageX: ev.pageX}});\n\n    document.addEventListener('mousemove', this.updateDimensions);\n    document.addEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseUp = (ev: MouseEvent) => {\n    ev.preventDefault();\n    document.removeEventListener('mousemove', this.updateDimensions);\n    document.removeEventListener('mouseup', this.onMouseUp);\n    this.drawToCanvas();\n  };\n\n  startResize = (direction: Position, ev: React.MouseEvent<HTMLDivElement>) => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    document.addEventListener('mousemove', this.updateSize);\n    document.addEventListener('mouseup', this.stopResize);\n\n    this.setState({\n      resizeDirection: direction,\n      mousePosition: {pageY: ev.pageY, pageX: ev.pageX},\n    });\n  };\n\n  stopResize = (ev: MouseEvent) => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    document.removeEventListener('mousemove', this.updateSize);\n    document.removeEventListener('mouseup', this.stopResize);\n\n    this.setState({resizeDirection: null});\n    this.drawToCanvas();\n  };\n\n  updateSize = (ev: MouseEvent) => {\n    const cropContainer = this.cropContainer.current;\n    if (!cropContainer) {\n      return;\n    }\n\n    const {mousePosition} = this.state;\n\n    const yDiff = ev.pageY - mousePosition.pageY;\n    const xDiff = ev.pageX - mousePosition.pageX;\n\n    this.setState({\n      resizeDimensions: this.getNewDimensions(cropContainer, yDiff, xDiff),\n      mousePosition: {pageX: ev.pageX, pageY: ev.pageY},\n    });\n  };\n\n  // Normalize diff across dimensions so that negative diffs are always making\n  // the cropper smaller and positive ones are making the cropper larger\n  getDiffNW = (yDiff: number, xDiff: number) =>\n    (yDiff - yDiff * 2 + (xDiff - xDiff * 2)) / 2;\n\n  getDiffNE = (yDiff: number, xDiff: number) => (yDiff - yDiff * 2 + xDiff) / 2;\n\n  getDiffSW = (yDiff: number, xDiff: number) => (yDiff + (xDiff - xDiff * 2)) / 2;\n\n  getDiffSE = (yDiff: number, xDiff: number) => (yDiff + xDiff) / 2;\n\n  getNewDimensions = (container: HTMLDivElement, yDiff: number, xDiff: number) => {\n    const {resizeDimensions: oldDimensions, resizeDirection} = this.state;\n\n    const diff = this['getDiff' + resizeDirection!.toUpperCase()](yDiff, xDiff);\n\n    let height = container.clientHeight - oldDimensions.top;\n    let width = container.clientWidth - oldDimensions.left;\n\n    // Depending on the direction, we update different dimensions:\n    // nw: size, top, left\n    // ne: size, top\n    // sw: size, left\n    // se: size\n    const editingTop = resizeDirection === 'nw' || resizeDirection === 'ne';\n    const editingLeft = resizeDirection === 'nw' || resizeDirection === 'sw';\n\n    const newDimensions = {\n      top: 0,\n      left: 0,\n      size: oldDimensions.size + diff,\n    };\n\n    if (editingTop) {\n      newDimensions.top = oldDimensions.top - diff;\n      height = container.clientHeight - newDimensions.top;\n    }\n\n    if (editingLeft) {\n      newDimensions.left = oldDimensions.left - diff;\n      width = container.clientWidth - newDimensions.left;\n    }\n\n    if (newDimensions.top < 0) {\n      newDimensions.size = newDimensions.size + newDimensions.top;\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left - newDimensions.top;\n      }\n      newDimensions.top = 0;\n    }\n\n    if (newDimensions.left < 0) {\n      newDimensions.size = newDimensions.size + newDimensions.left;\n      if (editingTop) {\n        newDimensions.top = newDimensions.top - newDimensions.left;\n      }\n      newDimensions.left = 0;\n    }\n\n    const maxSize = Math.min(width, height);\n    if (newDimensions.size > maxSize) {\n      if (editingTop) {\n        newDimensions.top = newDimensions.top + newDimensions.size - maxSize;\n      }\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left + newDimensions.size - maxSize;\n      }\n      newDimensions.size = maxSize;\n    } else if (newDimensions.size < this.MIN_DIMENSION) {\n      if (editingTop) {\n        newDimensions.top = newDimensions.top + newDimensions.size - this.MIN_DIMENSION;\n      }\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left + newDimensions.size - this.MIN_DIMENSION;\n      }\n      newDimensions.size = this.MIN_DIMENSION;\n    }\n\n    return {...oldDimensions, ...newDimensions};\n  };\n\n  validateImage() {\n    const img = this.image.current;\n\n    if (!img) {\n      return null;\n    }\n\n    if (img.naturalWidth < this.MIN_DIMENSION || img.naturalHeight < this.MIN_DIMENSION) {\n      return tct('Please upload an image larger than [size]px by [size]px.', {\n        size: this.MIN_DIMENSION - 1,\n      });\n    }\n\n    if (img.naturalWidth > this.MAX_DIMENSION || img.naturalHeight > this.MAX_DIMENSION) {\n      return tct('Please upload an image smaller than [size]px by [size]px.', {\n        size: this.MAX_DIMENSION,\n      });\n    }\n\n    return null;\n  }\n\n  drawToCanvas() {\n    const canvas = this.canvas.current;\n    if (!canvas) {\n      return;\n    }\n\n    const image = this.image.current;\n    if (!image) {\n      return;\n    }\n\n    const {left, top, size} = this.state.resizeDimensions;\n    // Calculate difference between natural dimensions and rendered dimensions\n    const ratio =\n      (image.naturalHeight / image.clientHeight +\n        image.naturalWidth / image.clientWidth) /\n      2;\n    canvas.width = size * ratio;\n    canvas.height = size * ratio;\n\n    canvas\n      .getContext('2d')!\n      .drawImage(\n        image,\n        left * ratio,\n        top * ratio,\n        size * ratio,\n        size * ratio,\n        0,\n        0,\n        size * ratio,\n        size * ratio\n      );\n\n    this.props.updateDataUrlState({dataUrl: canvas.toDataURL()});\n  }\n\n  get imageSrc() {\n    const {savedDataUrl, model, type} = this.props;\n    const uuid = model.avatar?.avatarUuid;\n    const photoUrl = uuid && `/${AVATAR_URL_MAP[type] || 'avatar'}/${uuid}/`;\n\n    return savedDataUrl || this.state.objectURL || photoUrl;\n  }\n\n  uploadClick = (ev: React.MouseEvent<HTMLAnchorElement>) => {\n    ev.preventDefault();\n    this.file.current && this.file.current.click();\n  };\n\n  renderImageCrop() {\n    const src = this.imageSrc;\n    if (!src) {\n      return null;\n    }\n\n    const {resizeDimensions, resizeDirection} = this.state;\n    const style = {\n      top: resizeDimensions.top,\n      left: resizeDimensions.left,\n      width: resizeDimensions.size,\n      height: resizeDimensions.size,\n    };\n\n    return (\n      <ImageCropper resizeDirection={resizeDirection}>\n        <CropContainer ref={this.cropContainer}>\n          <img\n            ref={this.image}\n            src={src}\n            onLoad={this.onImageLoad}\n            onDragStart={e => e.preventDefault()}\n          />\n          <Cropper style={style} onMouseDown={this.onMouseDown}>\n            {Object.keys(resizerPositions).map(pos => (\n              <Resizer\n                key={pos}\n                position={pos as Position}\n                onMouseDown={this.startResize.bind(this, pos)}\n              />\n            ))}\n          </Cropper>\n        </CropContainer>\n      </ImageCropper>\n    );\n  }\n\n  render() {\n    const src = this.imageSrc;\n\n    const upload = <a onClick={this.uploadClick} />;\n    const uploader = (\n      <Well hasImage centered>\n        <p>{tct('[upload:Upload a photo] to get started.', {upload})}</p>\n      </Well>\n    );\n\n    return (\n      <React.Fragment>\n        {!src && uploader}\n        {src && <HiddenCanvas ref={this.canvas} />}\n        {this.renderImageCrop()}\n        <div className=\"form-group\">\n          {src && <a onClick={this.uploadClick}>{t('Change Photo')}</a>}\n          <UploadInput\n            ref={this.file}\n            type=\"file\"\n            accept={this.ALLOWED_MIMETYPES}\n            onChange={this.onSelectFile}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AvatarCropper;\n\nconst UploadInput = styled('input')`\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageCropper = styled('div')<{resizeDirection: Position | null}>`\n  cursor: ${p => (p.resizeDirection ? `${p.resizeDirection}-resize` : 'default')};\n  text-align: center;\n  margin-bottom: 20px;\n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n  background-color: ${p => p.theme.background};\n  background-image: linear-gradient(45deg, #eee 25%, rgba(0, 0, 0, 0) 25%),\n    linear-gradient(-45deg, #eee 25%, rgba(0, 0, 0, 0) 25%),\n    linear-gradient(45deg, rgba(0, 0, 0, 0) 75%, #eee 75%),\n    linear-gradient(-45deg, rgba(0, 0, 0, 0) 75%, #eee 75%);\n`;\n\nconst CropContainer = styled('div')`\n  display: inline-block;\n  position: relative;\n  max-width: 100%;\n`;\n\nconst Cropper = styled('div')`\n  position: absolute;\n  border: 2px dashed ${p => p.theme.gray300};\n`;\n\nconst Resizer = styled('div')<{position: Position}>`\n  border-radius: 5px;\n  width: 10px;\n  height: 10px;\n  position: absolute;\n  background-color: ${p => p.theme.gray300};\n  cursor: ${p => `${p.position}-resize`};\n  ${p => resizerPositions[p.position].map(pos => `${pos}: -5px;`)}\n`;\n\nconst HiddenCanvas = styled('canvas')`\n  display: none;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport RadioGroup from 'app/views/settings/components/forms/controls/radioGroup';\nimport {t} from 'app/locale';\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport withApi from 'app/utils/withApi';\nimport Well from 'app/components/well';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport Avatar from 'app/components/avatar';\nimport AvatarCropper from 'app/components/avatarCropper';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {Client} from 'app/api';\nimport {AvatarUser, Organization, Team} from 'app/types';\n\ntype Model = Pick<AvatarUser, 'avatar'>;\ntype AvatarType = Required<Model>['avatar']['avatarType'];\ntype AvatarChooserType = 'user' | 'team' | 'organization';\n\ntype DefaultProps = {\n  onSave: (model: Model) => void;\n  allowGravatar?: boolean;\n  allowLetter?: boolean;\n  allowUpload?: boolean;\n  type?: AvatarChooserType;\n};\n\ntype Props = {\n  api: Client;\n  endpoint: string;\n  model: Model;\n  disabled?: boolean;\n  savedDataUrl?: string;\n  isUser?: boolean;\n} & DefaultProps;\n\ntype State = {\n  model: Model;\n  hasError: boolean;\n  savedDataUrl?: string | null;\n  dataUrl?: string | null;\n};\n\nclass AvatarChooser extends React.Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    allowGravatar: true,\n    allowLetter: true,\n    allowUpload: true,\n    type: 'user',\n    onSave: () => {},\n  };\n\n  state: State = {\n    model: this.props.model,\n    savedDataUrl: null,\n    dataUrl: null,\n    hasError: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    // Update local state if defined in props\n    if (typeof nextProps.model !== 'undefined') {\n      this.setState({model: nextProps.model});\n    }\n  }\n\n  updateState(model: Model) {\n    this.setState({model});\n  }\n\n  handleError(msg: string) {\n    addErrorMessage(msg);\n  }\n\n  handleSuccess(model: Model) {\n    const {onSave} = this.props;\n    this.setState({model});\n    onSave(model);\n    addSuccessMessage(t('Successfully saved avatar preferences'));\n  }\n\n  handleSaveSettings = (ev: React.MouseEvent) => {\n    const {endpoint, api} = this.props;\n    const {model, dataUrl} = this.state;\n    ev.preventDefault();\n    let data = {};\n    const avatarType = model && model.avatar ? model.avatar.avatarType : undefined;\n    const avatarPhoto = dataUrl ? dataUrl.split(',')[1] : undefined;\n\n    data = {\n      avatar_photo: avatarPhoto,\n      avatar_type: avatarType,\n    };\n\n    api.request(endpoint, {\n      method: 'PUT',\n      data,\n      success: resp => {\n        this.setState({savedDataUrl: this.state.dataUrl});\n        this.handleSuccess(resp);\n      },\n      error: this.handleError.bind(this, 'There was an error saving your preferences.'),\n    });\n  };\n\n  handleChange = (id: AvatarType) =>\n    this.updateState({\n      ...this.state.model,\n      avatar: {avatarUuid: this.state.model.avatar?.avatarUuid ?? '', avatarType: id},\n    });\n\n  render() {\n    const {\n      allowGravatar,\n      allowUpload,\n      allowLetter,\n      savedDataUrl,\n      type,\n      isUser,\n      disabled,\n    } = this.props;\n    const {hasError, model} = this.state;\n\n    if (hasError) {\n      return <LoadingError />;\n    }\n    if (!model) {\n      return <LoadingIndicator />;\n    }\n\n    const avatarType = model.avatar?.avatarType ?? 'letter_avatar';\n    const isLetter = avatarType === 'letter_avatar';\n\n    const isTeam = type === 'team';\n    const isOrganization = type === 'organization';\n    const choices: [AvatarType, string][] = [];\n\n    if (allowLetter) {\n      choices.push(['letter_avatar', t('Use initials')]);\n    }\n    if (allowUpload) {\n      choices.push(['upload', t('Upload an image')]);\n    }\n    if (allowGravatar) {\n      choices.push(['gravatar', t('Use Gravatar')]);\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Avatar')}</PanelHeader>\n        <PanelBody>\n          <AvatarForm>\n            <AvatarGroup inline={isLetter}>\n              <RadioGroup\n                style={{flex: 1}}\n                choices={choices}\n                value={avatarType}\n                label={t('Avatar Type')}\n                onChange={this.handleChange}\n                disabled={disabled}\n              />\n              {isLetter && (\n                <Avatar\n                  gravatar={false}\n                  style={{width: 90, height: 90}}\n                  user={isUser ? (model as AvatarUser) : undefined}\n                  organization={isOrganization ? (model as Organization) : undefined}\n                  team={isTeam ? (model as Team) : undefined}\n                />\n              )}\n            </AvatarGroup>\n\n            <AvatarUploadSection>\n              {allowGravatar && avatarType === 'gravatar' && (\n                <Well>\n                  {t('Gravatars are managed through ')}\n                  <ExternalLink href=\"http://gravatar.com\">Gravatar.com</ExternalLink>\n                </Well>\n              )}\n\n              {model.avatar && avatarType === 'upload' && (\n                <AvatarCropper\n                  {...this.props}\n                  type={type!}\n                  model={model}\n                  savedDataUrl={savedDataUrl}\n                  updateDataUrlState={dataState => this.setState(dataState)}\n                />\n              )}\n              <AvatarSubmit className=\"form-actions\">\n                <Button\n                  type=\"button\"\n                  priority=\"primary\"\n                  onClick={this.handleSaveSettings}\n                  disabled={disabled}\n                >\n                  {t('Save Avatar')}\n                </Button>\n              </AvatarSubmit>\n            </AvatarUploadSection>\n          </AvatarForm>\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst AvatarGroup = styled('div')<{inline: boolean}>`\n  display: flex;\n  flex-direction: ${p => (p.inline ? 'row' : 'column')};\n`;\n\nconst AvatarForm = styled('div')`\n  line-height: 1.5em;\n  padding: 1em 1.25em;\n`;\n\nconst AvatarSubmit = styled('fieldset')`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 1em;\n`;\n\nconst AvatarUploadSection = styled('div')`\n  margin-top: 1em;\n`;\n\nexport default withApi(AvatarChooser);\n"],"sourceRoot":""}