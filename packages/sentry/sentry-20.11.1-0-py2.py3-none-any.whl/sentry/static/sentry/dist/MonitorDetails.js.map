{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/utils/logging.tsx","webpack:///./app/views/monitors/monitorIcon.jsx","webpack:///./app/components/issues/snoozeAction.tsx","webpack:///./app/components/issues/compactIssue.jsx","webpack:///./app/views/monitors/checkInIcon.jsx","webpack:///./app/views/monitors/monitorCheckIns.tsx","webpack:///./app/views/monitors/monitorHeaderActions.jsx","webpack:///./app/views/monitors/monitorHeader.jsx","webpack:///./app/components/issueList.jsx","webpack:///./app/views/monitors/monitorIssues.jsx","webpack:///./app/views/monitors/monitorStats.jsx","webpack:///./app/views/monitors/details.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","logException","ex","context","Sentry","scope","setExtra","window","console","error","getBackgroundColor","p","color","status","theme","success","disabled","getSize","size","SnoozeTimes","SnoozeAction","state","isModalOpen","toggleModal","props","setState","closeModal","onSnooze","duration","Fragment","tooltip","className","onClick","t","show","animation","onHide","bsSize","bind","THIRTY_MINUTES","TWO_HOURS","TWENTY_FOUR_HOURS","undefined","type","React","Component","CompactIssueHeader","data","organization","projectId","eventId","basePath","slug","issueLink","id","commentColor","subscriptionDetails","reason","IssueHeaderMetaWrapper","StyledErrorLevel","level","IconLink","to","isBookmarked","isSolid","project","numComments","getMessage","CompactIssue","createReactClass","displayName","mixins","Reflux","listenTo","GroupStore","getInitialState","issue","get","componentWillReceiveProps","nextProps","onGroupChange","itemIds","has","ignoreDuration","onUpdate","addLoadingMessage","api","bulkUpdate","orgId","complete","clearIndicators","render","hasSeen","statsPeriod","toggleSelect","flexDirection","style","paddingTop","paddingBottom","showActions","topLevelClasses","caret","groupId","children","withApi","withOrganization","ErrorLevel","space","Link","MonitorCheckIns","monitor","query","per_page","ErrorWrapper","checkInList","map","checkIn","key","CheckInIconWrapper","TimeSinceWrapper","date","dateCreated","seconds","DivMargin","MonitorHeaderActions","handleDelete","redirectPath","requestPromise","method","then","browserHistory","push","addErrorMessage","updateMonitor","resp","err","toggleStatus","ButtonContainer","gap","icon","onConfirm","message","MonitorHeader","name","lastCheckIn","nextCheckIn","IssueList","getDefaultProps","pagination","noBorder","noMargin","issueIds","loading","pageLinks","componentWillMount","fetchData","location","nextLocation","pathname","search","remountComponent","clear","request","endpoint","cursor","_","jqXHR","item","getResponseHeader","renderResults","body","renderLoading","renderError","length","panelStyle","border","borderRadius","marginBottom","renderEmpty","margin","onRetry","emptyText","MonitorIssues","getIssuesPath","limit","params","MonitorStats","until","Math","floor","Date","getTime","since","resolution","emptyStats","seriesName","failed","stats","forEach","ok","timestamp","ts","value","colors","green300","red300","withPadding","description","isGroupedByDate","showTimeInTooltip","labelYAxisExtents","stacked","height","series","MonitorDetails","monitorId"],"mappings":"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","file":"MonitorDetails.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as Sentry from '@sentry/react';\n\nexport function logException(ex: Error, context?: any): void {\n  Sentry.withScope(scope => {\n    if (context) {\n      scope.setExtra('context', context);\n    }\n\n    Sentry.captureException(ex);\n  });\n  /*eslint no-console:0*/\n  window.console && console.error && console.error(ex);\n}\n","import styled from '@emotion/styled';\n\nconst getBackgroundColor = p => {\n  if (p.color) {\n    return `background: ${p.color};`;\n  }\n\n  return `background: ${\n    p.status === 'error'\n      ? p.theme.error\n      : p.status === 'ok'\n      ? p.theme.success\n      : p.theme.disabled\n  };`;\n};\n\nconst getSize = p => `\n  height: ${p.size}px;\n  width: ${p.size}px;\n`;\n\nexport default styled('div')`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  ${getSize};\n  ${getBackgroundColor};\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Modal from 'react-bootstrap/lib/Modal';\n\nimport {t} from 'app/locale';\n\nenum SnoozeTimes {\n  // all values in minutes\n  THIRTY_MINUTES = 30,\n  TWO_HOURS = 60 * 2,\n  TWENTY_FOUR_HOURS = 60 * 24,\n}\n\ntype SnoozeActionProps = {\n  disabled: boolean;\n  tooltip: string;\n  onSnooze: (duration: SnoozeTimes) => {};\n  className?: string;\n};\n\nclass SnoozeAction extends React.Component<SnoozeActionProps> {\n  static propTypes = {\n    disabled: PropTypes.bool,\n    onSnooze: PropTypes.func.isRequired,\n    tooltip: PropTypes.string,\n  };\n\n  state = {\n    isModalOpen: false,\n  };\n\n  toggleModal = () => {\n    if (this.props.disabled) {\n      return;\n    }\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({isModalOpen: false});\n  };\n\n  onSnooze = (duration: SnoozeTimes) => {\n    this.props.onSnooze(duration);\n    this.closeModal();\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <a\n          title={this.props.tooltip}\n          className={this.props.className}\n          onClick={this.toggleModal}\n        >\n          <span>{t('zZz')}</span>\n        </a>\n        <Modal\n          show={this.state.isModalOpen}\n          title={t('Please confirm')}\n          animation={false}\n          onHide={this.closeModal}\n          bsSize=\"sm\"\n        >\n          <div className=\"modal-body\">\n            <h5>{t('How long should we ignore this issue?')}</h5>\n            <ul className=\"nav nav-stacked nav-pills\">\n              <li>\n                <a onClick={this.onSnooze.bind(this, SnoozeTimes.THIRTY_MINUTES)}>\n                  {t('30 minutes')}\n                </a>\n              </li>\n              <li>\n                <a onClick={this.onSnooze.bind(this, SnoozeTimes.TWO_HOURS)}>\n                  {t('2 hours')}\n                </a>\n              </li>\n              <li>\n                <a onClick={this.onSnooze.bind(this, SnoozeTimes.TWENTY_FOUR_HOURS)}>\n                  {t('24 hours')}\n                </a>\n              </li>\n              {/* override click event object w/ undefined to indicate \"no duration\" */}\n              <li>\n                <a onClick={this.onSnooze.bind(this, undefined)}>{t('Forever')}</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-default\" onClick={this.closeModal}>\n              {t('Cancel')}\n            </button>\n          </div>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SnoozeAction;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\nimport styled from '@emotion/styled';\n\nimport {PanelItem} from 'app/components/panels';\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {IconChat, IconCheckmark, IconEllipsis, IconMute, IconStar} from 'app/icons';\nimport {t} from 'app/locale';\nimport DropdownLink from 'app/components/dropdownLink';\nimport ErrorLevel from 'app/components/events/errorLevel';\nimport GroupChart from 'app/components/stream/groupChart';\nimport GroupStore from 'app/stores/groupStore';\nimport Link from 'app/components/links/link';\nimport SentryTypes from 'app/sentryTypes';\nimport SnoozeAction from 'app/components/issues/snoozeAction';\nimport space from 'app/styles/space';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport {getMessage} from 'app/utils/events';\nimport EventOrGroupTitle from 'app/components/eventOrGroupTitle';\n\nclass CompactIssueHeader extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    projectId: PropTypes.string,\n    eventId: PropTypes.string,\n    data: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const {data, organization, projectId, eventId} = this.props;\n\n    const basePath = `/organizations/${organization.slug}/issues/`;\n\n    const issueLink = eventId\n      ? `/organizations/${organization.slug}/projects/${projectId}/events/${eventId}/`\n      : `${basePath}${data.id}/`;\n\n    const commentColor =\n      data.subscriptionDetails && data.subscriptionDetails.reason === 'mentioned'\n        ? 'green300'\n        : 'currentColor';\n\n    return (\n      <React.Fragment>\n        <IssueHeaderMetaWrapper>\n          <StyledErrorLevel size=\"12px\" level={data.level} title={data.level} />\n          <h3 className=\"truncate\">\n            <IconLink to={issueLink || ''}>\n              {data.status === 'ignored' && <IconMute size=\"xs\" />}\n              {data.isBookmarked && <IconStar isSolid size=\"xs\" />}\n              <EventOrGroupTitle data={data} />\n            </IconLink>\n          </h3>\n        </IssueHeaderMetaWrapper>\n        <div className=\"event-extra\">\n          <span className=\"project-name\">\n            <strong>{data.project.slug}</strong>\n          </span>\n          {data.numComments !== 0 && (\n            <span>\n              <IconLink to={`${basePath}${data.id}/activity/`} className=\"comments\">\n                <IconChat size=\"xs\" color={commentColor} />\n                <span className=\"tag-count\">{data.numComments}</span>\n              </IconLink>\n            </span>\n          )}\n          <span className=\"culprit\">{getMessage(data)}</span>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst CompactIssue = createReactClass({\n  displayName: 'CompactIssue',\n\n  propTypes: {\n    api: PropTypes.object,\n    data: PropTypes.object,\n    id: PropTypes.string,\n    eventId: PropTypes.string,\n    statsPeriod: PropTypes.string,\n    showActions: PropTypes.bool,\n    organization: SentryTypes.Organization.isRequired,\n  },\n\n  mixins: [Reflux.listenTo(GroupStore, 'onGroupChange')],\n\n  getInitialState() {\n    return {\n      issue: this.props.data || GroupStore.get(this.props.id),\n    };\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.id !== this.props.id) {\n      this.setState({\n        issue: GroupStore.get(this.props.id),\n      });\n    }\n  },\n\n  onGroupChange(itemIds) {\n    if (!itemIds.has(this.props.id)) {\n      return;\n    }\n    const id = this.props.id;\n    const issue = GroupStore.get(id);\n    this.setState({\n      issue,\n    });\n  },\n\n  onSnooze(duration) {\n    const data = {\n      status: 'ignored',\n    };\n\n    if (duration) {\n      data.ignoreDuration = duration;\n    }\n\n    this.onUpdate(data);\n  },\n\n  onUpdate(data) {\n    const issue = this.state.issue;\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    this.props.api.bulkUpdate(\n      {\n        orgId: this.props.organization.slug,\n        projectId: issue.project.slug,\n        itemIds: [issue.id],\n        data,\n      },\n      {\n        complete: () => {\n          clearIndicators();\n        },\n      }\n    );\n  },\n\n  render() {\n    const issue = this.state.issue;\n    const {id, organization} = this.props;\n\n    let className = 'issue';\n    if (issue.isBookmarked) {\n      className += ' isBookmarked';\n    }\n    if (issue.hasSeen) {\n      className += ' hasSeen';\n    }\n    if (issue.status === 'resolved') {\n      className += ' isResolved';\n    }\n    if (issue.status === 'ignored') {\n      className += ' isIgnored';\n    }\n\n    if (this.props.statsPeriod) {\n      className += ' with-graph';\n    }\n\n    return (\n      <PanelItem\n        className={className}\n        onClick={this.toggleSelect}\n        flexDirection=\"column\"\n        style={{paddingTop: '12px', paddingBottom: '6px'}}\n      >\n        <CompactIssueHeader\n          data={issue}\n          organization={organization}\n          projectId={issue.project.slug}\n          eventId={this.props.eventId}\n        />\n        {this.props.statsPeriod && (\n          <div className=\"event-graph\">\n            <GroupChart\n              id={id}\n              statsPeriod={this.props.statsPeriod}\n              data={this.props.data}\n            />\n          </div>\n        )}\n        {this.props.showActions && (\n          <div className=\"more-menu-container align-right\">\n            <DropdownLink\n              topLevelClasses=\"more-menu\"\n              className=\"more-menu-toggle\"\n              caret={false}\n              title={<IconEllipsis size=\"xs\" />}\n            >\n              <li>\n                <IconLink\n                  onClick={this.onUpdate.bind(this, {\n                    status: issue.status !== 'resolved' ? 'resolved' : 'unresolved',\n                  })}\n                >\n                  <IconCheckmark size=\"xs\" />\n                </IconLink>\n              </li>\n              <li>\n                <IconLink\n                  onClick={this.onUpdate.bind(this, {isBookmarked: !issue.isBookmarked})}\n                >\n                  <IconStar isSolid size=\"xs\" />\n                </IconLink>\n              </li>\n              <li>\n                <SnoozeAction\n                  orgId={organization.slug}\n                  groupId={id}\n                  onSnooze={this.onSnooze}\n                />\n              </li>\n            </DropdownLink>\n          </div>\n        )}\n        {this.props.children}\n      </PanelItem>\n    );\n  },\n});\n\nexport {CompactIssue};\nexport default withApi(withOrganization(CompactIssue));\n\nconst IssueHeaderMetaWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledErrorLevel = styled(ErrorLevel)`\n  display: block;\n  margin-right: ${space(1)};\n`;\n\nconst IconLink = styled(Link)`\n  & > svg {\n    margin-right: ${space(0.5)};\n  }\n`;\n","import styled from '@emotion/styled';\n\nconst getBackgroundColor = p => {\n  if (p.color) {\n    return `background: ${p.color};`;\n  }\n\n  return `background: ${\n    p.status === 'error'\n      ? p.theme.error\n      : p.status === 'ok'\n      ? p.theme.success\n      : p.theme.disabled\n  };`;\n};\n\nconst getSize = p => `\n  height: ${p.size}px;\n  width: ${p.size}px;\n`;\n\nexport default styled('div')`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  ${getSize};\n  ${getBackgroundColor};\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Monitor} from 'app/views/monitors/types';\nimport {PanelBody, PanelItem} from 'app/components/panels';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Duration from 'app/components/duration';\nimport TimeSince from 'app/components/timeSince';\nimport space from 'app/styles/space';\n\nimport CheckInIcon from './checkInIcon';\n\ntype CheckIn = {\n  dateCreated: string;\n  duration: number;\n  id: string;\n  status: 'ok' | 'error';\n};\n\ntype Props = {\n  monitor: Monitor;\n} & AsyncComponent['props'];\n\ntype State = {\n  checkInList: CheckIn[];\n} & AsyncComponent['state'];\n\nexport default class MonitorCheckIns extends AsyncComponent<Props, State> {\n  static propTypes = {\n    monitor: PropTypes.object.isRequired,\n  };\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {monitor} = this.props;\n    return [\n      ['checkInList', `/monitors/${monitor.id}/checkins/`, {query: {per_page: 10}}],\n    ];\n  }\n\n  renderError() {\n    return <ErrorWrapper>{super.renderError()}</ErrorWrapper>;\n  }\n\n  renderBody() {\n    return (\n      <PanelBody>\n        {this.state.checkInList.map(checkIn => (\n          <PanelItem key={checkIn.id}>\n            <CheckInIconWrapper>\n              <CheckInIcon status={checkIn.status} size={16} />\n            </CheckInIconWrapper>\n            <TimeSinceWrapper>\n              <TimeSince date={checkIn.dateCreated} />\n            </TimeSinceWrapper>\n            <div>{checkIn.duration && <Duration seconds={checkIn.duration / 100} />}</div>\n          </PanelItem>\n        ))}\n      </PanelBody>\n    );\n  }\n}\n\nconst DivMargin = styled('div')`\n  margin-right: ${space(2)};\n`;\n\nconst CheckInIconWrapper = styled(DivMargin)`\n  display: flex;\n  align-items: center;\n`;\n\nconst TimeSinceWrapper = styled(DivMargin)``;\n\nconst ErrorWrapper = styled('div')`\n  margin: ${space(3)} ${space(3)} 0;\n`;\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport {logException} from 'app/utils/logging';\nimport {t} from 'app/locale';\nimport ButtonBar from 'app/components/buttonBar';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport {IconDelete, IconEdit} from 'app/icons';\nimport SentryTypes from 'app/sentryTypes';\nimport withApi from 'app/utils/withApi';\nimport space from 'app/styles/space';\n\nclass MonitorHeaderActions extends React.Component {\n  static propTypes = {\n    api: PropTypes.object.isRequired,\n    monitor: SentryTypes.Monitor.isRequired,\n    orgId: PropTypes.string.isRequired,\n    onUpdate: PropTypes.func,\n  };\n\n  handleDelete = () => {\n    const {api, orgId, monitor} = this.props;\n    const redirectPath = `/organizations/${orgId}/monitors/`;\n    addLoadingMessage(t('Deleting Monitor...'));\n\n    api\n      .requestPromise(`/monitors/${monitor.id}/`, {\n        method: 'DELETE',\n      })\n      .then(() => {\n        browserHistory.push(redirectPath);\n      })\n      .catch(() => {\n        addErrorMessage(t('Unable to remove monitor.'));\n      });\n  };\n\n  updateMonitor = data => {\n    const {api, monitor} = this.props;\n    addLoadingMessage();\n    api\n      .requestPromise(`/monitors/${monitor.id}/`, {\n        method: 'PUT',\n        data,\n      })\n      .then(resp => {\n        clearIndicators();\n        this.props.onUpdate && this.props.onUpdate(resp);\n      })\n      .catch(err => {\n        logException(err);\n        addErrorMessage(t('Unable to update monitor.'));\n      });\n  };\n\n  toggleStatus = () => {\n    const {monitor} = this.props;\n    this.updateMonitor({\n      status: monitor.status === 'disabled' ? 'active' : 'disabled',\n    });\n  };\n\n  render() {\n    const {monitor, orgId} = this.props;\n    return (\n      <ButtonContainer>\n        <ButtonBar gap={1}>\n          <Button\n            size=\"small\"\n            icon={<IconEdit size=\"xs\" />}\n            to={`/organizations/${orgId}/monitors/${monitor.id}/edit/`}\n          >\n            &nbsp;\n            {t('Edit')}\n          </Button>\n          <Button size=\"small\" onClick={this.toggleStatus}>\n            {monitor.status !== 'disabled' ? t('Pause') : t('Enable')}\n          </Button>\n          <Confirm\n            onConfirm={this.handleDelete}\n            message={t(\n              'Deleting this monitor is permanent. Are you sure you wish to continue?'\n            )}\n          >\n            <Button size=\"small\" icon={<IconDelete size=\"xs\" />}>\n              {t('Delete')}\n            </Button>\n          </Confirm>\n        </ButtonBar>\n      </ButtonContainer>\n    );\n  }\n}\n\nconst ButtonContainer = styled('div')`\n  margin-bottom: ${space(3)};\n  display: flex;\n  flex-shrink: 1;\n`;\n\nexport default withApi(MonitorHeaderActions);\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport TimeSince from 'app/components/timeSince';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\n\nimport MonitorHeaderActions from './monitorHeaderActions';\nimport MonitorIcon from './monitorIcon';\n\nexport default class MonitorHeader extends React.Component {\n  static propTypes = {\n    orgId: PropTypes.string.isRequired,\n    monitor: SentryTypes.Monitor.isRequired,\n    onUpdate: PropTypes.func,\n  };\n\n  render() {\n    const {monitor} = this.props;\n\n    return (\n      <div className=\"release-details\">\n        <div className=\"row\">\n          <div className=\"col-sm-6 col-xs-10\">\n            <h3>{monitor.name}</h3>\n            <div className=\"release-meta\">{monitor.id}</div>\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <h6 className=\"nav-header\">{t('Last Check-in')}</h6>\n            {monitor.lastCheckIn && <TimeSince date={monitor.lastCheckIn} />}\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <h6 className=\"nav-header\">{t('Next Check-in')}</h6>\n            {monitor.nextCheckIn && <TimeSince date={monitor.nextCheckIn} />}\n          </div>\n          <div className=\"col-sm-2\">\n            <h6 className=\"nav-header\">{t('Status')}</h6>\n            <MonitorIcon status={monitor.status} size={16} />\n          </div>\n        </div>\n        <MonitorHeaderActions\n          orgId={this.props.orgId}\n          monitor={monitor}\n          onUpdate={this.props.onUpdate}\n        />\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\n\nimport {Panel, PanelBody} from 'app/components/panels';\nimport withApi from 'app/utils/withApi';\nimport CompactIssue from 'app/components/issues/compactIssue';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport {IconSearch} from 'app/icons';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport space from 'app/styles/space';\nimport {t} from 'app/locale';\n\nconst IssueList = createReactClass({\n  displayName: 'IssueList',\n\n  propTypes: {\n    api: PropTypes.object,\n    endpoint: PropTypes.string.isRequired,\n    emptyText: PropTypes.string,\n    query: PropTypes.object,\n    pagination: PropTypes.bool,\n    renderEmpty: PropTypes.func,\n    statsPeriod: PropTypes.string,\n    showActions: PropTypes.bool,\n    noBorder: PropTypes.bool,\n    noMargin: PropTypes.bool,\n  },\n\n  getDefaultProps() {\n    return {\n      pagination: true,\n      query: {},\n      noBorder: false,\n      noMargin: false,\n    };\n  },\n\n  getInitialState() {\n    return {\n      issueIds: [],\n      loading: true,\n      error: false,\n      pageLinks: null,\n    };\n  },\n\n  componentWillMount() {\n    this.fetchData();\n  },\n\n  componentWillReceiveProps(nextProps) {\n    const location = this.props.location;\n    const nextLocation = nextProps.location;\n    if (!location) {\n      return;\n    }\n\n    if (\n      location.pathname !== nextLocation.pathname ||\n      location.search !== nextLocation.search\n    ) {\n      this.remountComponent();\n    }\n  },\n\n  remountComponent() {\n    this.setState(this.getInitialState(), this.fetchData);\n  },\n\n  fetchData() {\n    const location = this.props.location;\n    this.props.api.clear();\n    this.props.api.request(this.props.endpoint, {\n      method: 'GET',\n      query: {\n        cursor: (location && location.query && location.query.cursor) || '',\n        ...this.props.query,\n      },\n      success: (data, _, jqXHR) => {\n        this.setState({\n          data,\n          loading: false,\n          error: false,\n          issueIds: data.map(item => item.id),\n          pageLinks: jqXHR.getResponseHeader('Link'),\n        });\n      },\n      error: () => {\n        this.setState({\n          loading: false,\n          error: true,\n        });\n      },\n    });\n  },\n\n  renderResults() {\n    let body;\n    const {noBorder, noMargin} = this.props;\n\n    if (this.state.loading) {\n      body = this.renderLoading();\n    } else if (this.state.error) {\n      body = this.renderError();\n    } else if (this.state.issueIds.length > 0) {\n      const panelStyle = noBorder ? {border: 0, borderRadius: 0} : {};\n      if (noMargin) {\n        panelStyle.marginBottom = 0;\n      }\n\n      body = (\n        <Panel style={panelStyle}>\n          <PanelBody className=\"issue-list\">\n            {this.state.data.map(issue => (\n              <CompactIssue\n                key={issue.id}\n                id={issue.id}\n                data={issue}\n                statsPeriod={this.props.statsPeriod}\n                showActions={this.props.showActions}\n              />\n            ))}\n          </PanelBody>\n        </Panel>\n      );\n    } else {\n      body = (this.props.renderEmpty || this.renderEmpty)();\n    }\n\n    return body;\n  },\n\n  renderError() {\n    return (\n      <div style={{margin: `${space(2)} ${space(2)} 0`}}>\n        <LoadingError onRetry={this.fetchData} />\n      </div>\n    );\n  },\n\n  renderLoading() {\n    return (\n      <div style={{margin: '18px 18px 0'}}>\n        <LoadingIndicator />\n      </div>\n    );\n  },\n\n  renderEmpty() {\n    const {emptyText} = this.props;\n    const {noBorder, noMargin} = this.props;\n    const panelStyle = noBorder ? {border: 0, borderRadius: 0} : {};\n    if (noMargin) {\n      panelStyle.marginBottom = 0;\n    }\n\n    return (\n      <Panel style={panelStyle}>\n        <EmptyMessage icon={<IconSearch size=\"xl\" />}>\n          {emptyText ? emptyText : t('Nothing to show here, move along.')}\n        </EmptyMessage>\n      </Panel>\n    );\n  },\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderResults()}\n        {this.props.pagination && this.state.pageLinks && (\n          <Pagination pageLinks={this.state.pageLinks} {...this.props} />\n        )}\n      </React.Fragment>\n    );\n  },\n});\n\nexport {IssueList};\n\nexport default withApi(IssueList);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport IssueList from 'app/components/issueList';\nimport {t} from 'app/locale';\n\nexport default class MonitorIssues extends Component {\n  static propTypes = {\n    orgId: PropTypes.string.isRequired,\n    monitor: PropTypes.object.isRequired,\n  };\n\n  getIssuesPath() {\n    const {orgId} = this.props;\n    return `/organizations/${orgId}/issues/`;\n  }\n\n  render() {\n    const {monitor, orgId} = this.props;\n\n    return (\n      <IssueList\n        endpoint={this.getIssuesPath()}\n        query={{\n          query: 'monitor.id:\"' + monitor.id + '\"',\n          project: monitor.project.id,\n          limit: 5,\n        }}\n        statsPeriod=\"0\"\n        pagination={false}\n        emptyText={t('No issues found')}\n        showActions={false}\n        noBorder\n        noMargin\n        params={{orgId}}\n      />\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport {Panel, PanelBody} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport MiniBarChart from 'app/components/charts/miniBarChart';\nimport theme from 'app/utils/theme';\n\nexport default class MonitorStats extends AsyncComponent {\n  static propTypes = {\n    monitor: PropTypes.object.isRequired,\n    ...AsyncComponent.PropTypes,\n  };\n\n  getDefaultState() {\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n\n    return {\n      since,\n      until,\n    };\n  }\n\n  getEndpoints() {\n    const {monitor} = this.props;\n    return [\n      [\n        'stats',\n        `/monitors/${monitor.id}/stats/`,\n        {\n          query: {\n            since: this.state.since,\n            until: this.state.until,\n            resolution: '1d',\n          },\n        },\n      ],\n    ];\n  }\n\n  renderBody() {\n    let emptyStats = true;\n    const success = {\n      seriesName: t('Successful'),\n      data: [],\n    };\n    const failed = {\n      seriesName: t('Failed'),\n      data: [],\n    };\n    this.state.stats.forEach(p => {\n      if (p.ok || p.error) {\n        emptyStats = false;\n      }\n      const timestamp = p.ts * 1000;\n      success.data.push({name: timestamp, value: p.ok});\n      failed.data.push({name: timestamp, value: p.error});\n    });\n    const colors = [theme.green300, theme.red300];\n\n    return (\n      <Panel>\n        <PanelBody withPadding>\n          {!emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              showTimeInTooltip\n              labelYAxisExtents\n              stacked\n              colors={colors}\n              height={150}\n              series={[success, failed]}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('All check-ins for this monitor.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\n\nimport AsyncView from 'app/views/asyncView';\nimport {Panel, PanelHeader} from 'app/components/panels';\nimport {t} from 'app/locale';\n\nimport MonitorCheckIns from './monitorCheckIns';\nimport MonitorHeader from './monitorHeader';\nimport MonitorIssues from './monitorIssues';\nimport MonitorStats from './monitorStats';\n\nclass MonitorDetails extends AsyncView {\n  getEndpoints() {\n    const {params, location} = this.props;\n    return [\n      [\n        'monitor',\n        `/monitors/${params.monitorId}/`,\n        {\n          query: location.query,\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    if (this.state.monitor) {\n      return `${this.state.monitor.name} - Monitors - ${this.props.params.orgId}`;\n    }\n    return `Monitors - ${this.props.params.orgId}`;\n  }\n\n  onUpdate = data => {\n    this.setState({\n      monitor: {\n        ...this.state.monitor,\n        ...data,\n      },\n    });\n  };\n\n  renderBody() {\n    const {monitor} = this.state;\n    return (\n      <React.Fragment>\n        <MonitorHeader\n          monitor={monitor}\n          orgId={this.props.params.orgId}\n          onUpdate={this.onUpdate}\n        />\n\n        <MonitorStats monitor={monitor} />\n\n        <Panel style={{paddingBottom: 0}}>\n          <PanelHeader>{t('Related Issues')}</PanelHeader>\n\n          <MonitorIssues monitor={monitor} orgId={this.props.params.orgId} />\n        </Panel>\n\n        <Panel>\n          <PanelHeader>{t('Recent Check-ins')}</PanelHeader>\n\n          <MonitorCheckIns monitor={monitor} />\n        </Panel>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MonitorDetails;\n"],"sourceRoot":""}