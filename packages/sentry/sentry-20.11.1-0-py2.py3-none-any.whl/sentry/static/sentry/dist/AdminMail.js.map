{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/admin/adminMail.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","AdminMail","sendTestEmail","a","testMailEmail","state","data","api","requestPromise","method","addSuccessMessage","t","addErrorMessage","responseJSON","error","mailHost","mailPassword","mailUsername","mailPort","mailUseTls","mailFrom","mailListNamespace","className","onClick"],"mappings":"0qBAQqBA,E,uIAKjB,MAAO,K,+BAIP,IAAMC,EAAQC,KAAKC,WACnB,OACE,YAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,WACjBC,KAAKE,uB,GATJC,KAHWL,E,8rBCYAM,E,kLAKnBC,c,cAAgB,4BAAAC,EAAA,6DACRC,EAAgB,EAAKC,MAAMC,KAAKF,cADxB,kBAIN,EAAKG,IAAIC,eAAe,kBAAmB,CAACC,OAAQ,SAJ9C,OAKZC,YAAkBC,YAAE,mCAAoCP,IAL5C,gDAOZQ,YACE,KAAMC,aACF,KAAMA,aAAaC,MACnBH,YAAE,sDAVI,yD,qDAHd,MAAO,CAAC,CAAC,OAAQ,sB,mCAkBN,IACJL,EAAQT,KAAKQ,MAAbC,KAELS,EAQET,EARFS,SACAC,EAOEV,EAPFU,aACAC,EAMEX,EANFW,aACAC,EAKEZ,EALFY,SACAC,EAIEb,EAJFa,WACAC,EAGEd,EAHFc,SACAC,EAEEf,EAFFe,kBACAjB,EACEE,EADFF,cAGF,OACE,uBACE,sBAAKO,YAAE,kBAEP,kBAAIW,UAAU,QACZ,sBAAKX,YAAE,iBACP,sBACE,mBAAKW,UAAU,OAAOF,IAGxB,sBAAKT,YAAE,SACP,sBACE,mBAAKW,UAAU,OACZP,EADH,IACcG,IAIhB,sBAAKP,YAAE,aACP,sBACE,mBAAKW,UAAU,OAAOL,GAAgB,sBAAKN,YAAE,cAG/C,sBAAKA,YAAE,aACP,sBACE,mBAAKW,UAAU,OACZN,EAAe,WAAa,sBAAKL,YAAE,cAIxC,sBAAKA,YAAE,SACP,sBACE,mBAAKW,UAAU,OAAOH,EAAaR,YAAE,OAASA,YAAE,QAGlD,sBAAKA,YAAE,2BACP,sBACE,mBAAKW,UAAU,OAAOD,KAI1B,sBAAKV,YAAE,kBAEP,qBACGA,YACC,sGAIJ,YAAC,IAAD,CAAQY,QAAS1B,KAAKK,eACnBS,YAAE,0BAA2BP,S,GAlFDT","file":"AdminMail.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\n\nimport {addSuccessMessage, addErrorMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\n\ntype Data = {\n  mailHost: string;\n  mailPassword: string;\n  mailUsername: string;\n  mailPort: string;\n  mailUseTls: string;\n  mailFrom: string;\n  mailListNamespace: string;\n  testMailEmail: string;\n};\n\ntype State = AsyncView['state'] & {data: Data};\n\nexport default class AdminMail extends AsyncView<{}, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['data', '/internal/mail/']];\n  }\n\n  sendTestEmail = async () => {\n    const testMailEmail = this.state.data.testMailEmail;\n\n    try {\n      await this.api.requestPromise('/internal/mail/', {method: 'POST'});\n      addSuccessMessage(t('A test email has been sent to %s', testMailEmail));\n    } catch (error) {\n      addErrorMessage(\n        error.responseJSON\n          ? error.responseJSON.error\n          : t('Unable to send test email. Check your server logs')\n      );\n    }\n  };\n\n  renderBody() {\n    const {data} = this.state;\n    const {\n      mailHost,\n      mailPassword,\n      mailUsername,\n      mailPort,\n      mailUseTls,\n      mailFrom,\n      mailListNamespace,\n      testMailEmail,\n    } = data;\n\n    return (\n      <div>\n        <h3>{t('SMTP Settings')}</h3>\n\n        <dl className=\"vars\">\n          <dt>{t('From Address')}</dt>\n          <dd>\n            <pre className=\"val\">{mailFrom}</pre>\n          </dd>\n\n          <dt>{t('Host')}</dt>\n          <dd>\n            <pre className=\"val\">\n              {mailHost}:{mailPort}\n            </pre>\n          </dd>\n\n          <dt>{t('Username')}</dt>\n          <dd>\n            <pre className=\"val\">{mailUsername || <em>{t('not set')}</em>}</pre>\n          </dd>\n\n          <dt>{t('Password')}</dt>\n          <dd>\n            <pre className=\"val\">\n              {mailPassword ? '********' : <em>{t('not set')}</em>}\n            </pre>\n          </dd>\n\n          <dt>{t('TLS?')}</dt>\n          <dd>\n            <pre className=\"val\">{mailUseTls ? t('Yes') : t('No')}</pre>\n          </dd>\n\n          <dt>{t('Mailing List Namespace')}</dt>\n          <dd>\n            <pre className=\"val\">{mailListNamespace}</pre>\n          </dd>\n        </dl>\n\n        <h3>{t('Test Settings')}</h3>\n\n        <p>\n          {t(\n            \"Send an email to your account's email address to confirm that everything is configured correctly.\"\n          )}\n        </p>\n\n        <Button onClick={this.sendTestEmail}>\n          {t('Send a test email to %s', testMailEmail)}\n        </Button>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}