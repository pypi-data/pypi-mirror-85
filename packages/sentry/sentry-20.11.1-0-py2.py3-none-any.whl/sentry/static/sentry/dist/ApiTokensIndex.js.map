{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/alertLink.tsx","webpack:///./app/views/settings/account/apiTokenRow.tsx","webpack:///./app/views/settings/account/apiTokens.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","AlertLink","size","priority","children","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","StyledLink","data-test-id","IconWrapper","AlertLinkText","IconLink","direction","linkProps","omit","theme","alert","backgroundLight","textColor","border","ApiTokenRow","token","onRemove","StyledPanelItem","Controls","InputWrapper","getDynamicText","value","fixed","isCircled","t","Details","ScopesWrapper","Heading","ScopeList","scopes","join","Time","date","dateCreated","Date","PanelItem","fontSizeRelativeSmall","fontSizeMedium","subText","ApiTokens","handleRemoveToken","addLoadingMessage","oldTokenList","state","tokenList","setState","filter","tk","a","api","requestPromise","method","data","addSuccessMessage","addErrorMessage","organization","isEmpty","Array","isArray","length","slug","tct","link","map","key","withOrganization"],"mappings":"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","file":"ApiTokensIndex.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport omit from 'lodash/omit';\n\nimport Link from 'app/components/links/link';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n      ['data-test-id']: dataTestId,\n    } = this.props;\n\n    return (\n      <StyledLink\n        data-test-id={dataTestId}\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {InternalAppApiToken} from 'app/types';\nimport {IconSubtract} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport Button from 'app/components/button';\nimport DateTime from 'app/components/dateTime';\nimport {PanelItem} from 'app/components/panels';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\n\ntype Props = {\n  token: InternalAppApiToken;\n  onRemove: (token: InternalAppApiToken) => void;\n};\n\nfunction ApiTokenRow({token, onRemove}: Props) {\n  return (\n    <StyledPanelItem>\n      <Controls>\n        <InputWrapper>\n          <TextCopyInput>\n            {getDynamicText({value: token.token, fixed: 'CI_AUTH_TOKEN'})}\n          </TextCopyInput>\n        </InputWrapper>\n        <Button\n          size=\"small\"\n          onClick={() => onRemove(token)}\n          icon={<IconSubtract isCircled size=\"xs\" />}\n        >\n          {t('Remove')}\n        </Button>\n      </Controls>\n\n      <Details>\n        <ScopesWrapper>\n          <Heading>{t('Scopes')}</Heading>\n          <ScopeList>{token.scopes.join(', ')}</ScopeList>\n        </ScopesWrapper>\n        <div>\n          <Heading>{t('Created')}</Heading>\n          <Time>\n            <DateTime\n              date={getDynamicText({\n                value: token.dateCreated,\n                fixed: new Date(1508208080000), //National Pasta Day\n              })}\n            />\n          </Time>\n        </div>\n      </Details>\n    </StyledPanelItem>\n  );\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  flex-direction: column;\n  padding: ${space(2)};\n`;\n\nconst Controls = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${space(1)};\n`;\n\nconst InputWrapper = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nconst Details = styled('div')`\n  display: flex;\n  margin-top: ${space(1)};\n`;\n\nconst ScopesWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst ScopeList = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4;\n`;\n\nconst Time = styled('time')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4;\n`;\n\nconst Heading = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-transform: uppercase;\n  color: ${p => p.theme.subText};\n  margin-bottom: ${space(1)};\n`;\n\nexport default ApiTokenRow;\n","import React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {t, tct} from 'app/locale';\nimport {InternalAppApiToken, Organization} from 'app/types';\nimport AlertLink from 'app/components/alertLink';\nimport ApiTokenRow from 'app/views/settings/account/apiTokenRow';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype Props = {\n  organization: Organization;\n} & AsyncView['props'];\n\ntype State = {\n  tokenList: InternalAppApiToken[] | null;\n} & AsyncView['state'];\n\nexport class ApiTokens extends AsyncView<Props, State> {\n  getTitle() {\n    return t('API Tokens');\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      tokenList: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['tokenList', '/api-tokens/']];\n  }\n\n  handleRemoveToken = (token: InternalAppApiToken) => {\n    addLoadingMessage();\n    const oldTokenList = this.state.tokenList;\n\n    this.setState(\n      state => ({\n        tokenList: state.tokenList?.filter(tk => tk.token !== token.token) ?? [],\n      }),\n      async () => {\n        try {\n          await this.api.requestPromise('/api-tokens/', {\n            method: 'DELETE',\n            data: {token: token.token},\n          });\n\n          addSuccessMessage(t('Removed token'));\n        } catch (_err) {\n          addErrorMessage(t('Unable to remove token. Please try again.'));\n          this.setState({\n            tokenList: oldTokenList,\n          });\n        }\n      }\n    );\n  };\n\n  renderBody() {\n    const {organization} = this.props;\n    const {tokenList} = this.state;\n\n    const isEmpty = !Array.isArray(tokenList) || tokenList.length === 0;\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        to=\"/settings/account/api/auth-tokens/new-token/\"\n        data-test-id=\"create-token\"\n      >\n        {t('Create New Token')}\n      </Button>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"Auth Tokens\" action={action} />\n        <AlertLink\n          to={`/settings/${organization?.slug ?? ''}/developer-settings/new-internal`}\n        >\n          {t(\n            \"Auth Tokens are tied to the logged in user, meaning they'll stop working if the user leaves the organization! We suggest using internal integrations to create/manage tokens tied to the organization instead.\"\n          )}\n        </AlertLink>\n        <TextBlock>\n          {t(\n            \"Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.\"\n          )}\n        </TextBlock>\n        <TextBlock>\n          {tct(\n            'For more information on how to use the web API, see our [link:documentation].',\n            {\n              link: <a href=\"https://docs.sentry.io/api/\" />,\n            }\n          )}\n        </TextBlock>\n        <TextBlock>\n          <small>\n            psst. Looking for the <strong>DSN</strong> for an SDK? You'll find that under{' '}\n            <strong>[Project] » Settings » Client Keys</strong>.\n          </small>\n        </TextBlock>\n        <Panel>\n          <PanelHeader>{t('Auth Token')}</PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't created any authentication tokens yet.\")}\n              </EmptyMessage>\n            )}\n\n            {tokenList?.map(token => (\n              <ApiTokenRow\n                key={token.token}\n                token={token}\n                onRemove={this.handleRemoveToken}\n              />\n            ))}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ApiTokens);\n"],"sourceRoot":""}