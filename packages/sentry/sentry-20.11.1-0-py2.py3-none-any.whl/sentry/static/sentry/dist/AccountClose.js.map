{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/account/accountClose.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","leaveRedirect","window","location","href","Important","GoodbyeModalContent","Header","Body","Footer","t","AccountClose","args","getSingleOwners","state","organizations","filter","singleOwner","map","organization","slug","handleChange","isSingle","event","checked","target","setState","set","orgsToRemove","Set","add","handleRemoveAccount","orgs","Array","from","addMessage","api","requestPromise","method","data","then","openModal","onClose","setTimeout","addErrorMessage","type","size","tct","strong","key","style","marginRight","value","onChange","bind","name","has","disabled","priority","message","onConfirm"],"mappings":"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","file":"AccountClose.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'app/components/panels';\nimport {addMessage, addErrorMessage} from 'app/actionCreators/indicator';\nimport {openModal} from 'app/actionCreators/modal';\nimport {t, tct} from 'app/locale';\nimport Alert from 'app/components/alert';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport {IconFlag} from 'app/icons';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nconst BYE_URL = '/';\nconst leaveRedirect = () => (window.location.href = BYE_URL);\n\nconst Important = styled('div')`\n  font-weight: bold;\n  font-size: 1.2em;\n`;\n\nconst GoodbyeModalContent = ({Header, Body, Footer}) => (\n  <div>\n    <Header>{t('Closing Account')}</Header>\n    <Body>\n      <TextBlock>\n        {t('Your account has been deactivated and scheduled for removal.')}\n      </TextBlock>\n      <TextBlock>\n        {t('Thanks for using Sentry! We hope to see you again soon!')}\n      </TextBlock>\n    </Body>\n    <Footer>\n      <Button href={BYE_URL}>{t('Goodbye')}</Button>\n    </Footer>\n  </div>\n);\n\nGoodbyeModalContent.propTypes = {\n  Header: PropTypes.node,\n  Body: PropTypes.node,\n  Footer: PropTypes.node,\n};\n\nclass AccountClose extends AsyncView {\n  getEndpoints() {\n    return [['organizations', '/organizations/?owner=1']];\n  }\n\n  constructor(...args) {\n    super(...args);\n    this.state.orgsToRemove = null;\n  }\n\n  // Returns an array of single owners\n  getSingleOwners = () =>\n    this.state.organizations\n      .filter(({singleOwner}) => singleOwner)\n      .map(({organization}) => organization.slug);\n\n  handleChange = ({slug}, isSingle, event) => {\n    const checked = event.target.checked;\n\n    // Can't unselect an org where you are the single owner\n    if (isSingle) {\n      return;\n    }\n\n    this.setState(state => {\n      const set = state.orgsToRemove || new Set(this.getSingleOwners());\n      if (checked) {\n        set.add(slug);\n      } else {\n        set.delete(slug);\n      }\n\n      return {\n        orgsToRemove: set,\n      };\n    });\n  };\n\n  handleRemoveAccount = () => {\n    const {orgsToRemove} = this.state;\n    const orgs =\n      orgsToRemove === null ? this.getSingleOwners() : Array.from(orgsToRemove);\n\n    addMessage('Closing account...');\n\n    this.api\n      .requestPromise('/users/me/', {\n        method: 'DELETE',\n        data: {organizations: orgs},\n      })\n      .then(\n        () => {\n          openModal(GoodbyeModalContent, {\n            onClose: leaveRedirect,\n          });\n\n          // Redirect after 10 seconds\n          setTimeout(leaveRedirect, 10000);\n        },\n        () => {\n          addErrorMessage('Error closing account');\n        }\n      );\n  };\n\n  renderBody() {\n    const {organizations, orgsToRemove} = this.state;\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"Close Account\" />\n\n        <TextBlock>\n          {t('This will permanently remove all associated data for your user')}.\n        </TextBlock>\n\n        <Alert type=\"error\" icon={<IconFlag size=\"md\" />}>\n          <Important>\n            {t('Closing your account is permanent and cannot be undone')}!\n          </Important>\n        </Alert>\n\n        <Panel>\n          <PanelHeader>{t('Remove the following organizations')}</PanelHeader>\n          <PanelBody>\n            <PanelAlert type=\"info\">\n              {t(\n                'Ownership will remain with other organization owners if an organization is not deleted.'\n              )}\n              <br />\n              {tct(\n                \"Boxes which can't be unchecked mean that you are the only organization owner and the organization [strong:will be deleted].\",\n                {strong: <strong />}\n              )}\n            </PanelAlert>\n\n            {organizations.map(({organization, singleOwner}) => (\n              <PanelItem key={organization.slug}>\n                <label>\n                  <input\n                    style={{marginRight: 6}}\n                    type=\"checkbox\"\n                    value={organization.slug}\n                    onChange={this.handleChange.bind(this, organization, singleOwner)}\n                    name=\"organizations\"\n                    checked={\n                      orgsToRemove === null\n                        ? singleOwner\n                        : orgsToRemove.has(organization.slug)\n                    }\n                    disabled={singleOwner}\n                  />\n                  {organization.slug}\n                </label>\n              </PanelItem>\n            ))}\n          </PanelBody>\n        </Panel>\n\n        <Confirm\n          priority=\"danger\"\n          message={t(\n            'This is permanent and cannot be undone, are you really sure you want to do this?'\n          )}\n          onConfirm={this.handleRemoveAccount}\n        >\n          <Button priority=\"danger\">{t('Close Account')}</Button>\n        </Confirm>\n      </div>\n    );\n  }\n}\n\nexport default AccountClose;\n"],"sourceRoot":""}