{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/projectLabel.tsx","webpack:///./app/views/settings/components/settingsProjectItem.tsx","webpack:///./app/views/settings/organizationProjects/projectStatsGraph.tsx","webpack:///./app/views/settings/organizationProjects/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","ProjectLabel","project","className","slug","PureComponent","ProjectItem","state","isBookmarked","handleToggleBookmark","setState","organization","Wrapper","BookmarkLink","onToggle","to","BookmarkStar","ProjectStatsGraph","stats","series","seriesName","t","data","map","point","name","value","Fragment","height","debounce","isGroupedByDate","showTimeInTooltip","OrganizationProjects","orgId","params","location","query","decodeScalar","per_page","since","Date","getTime","stat","group","renderBody","projectList","projectListPageLinks","projectStats","canCreateProjects","Set","access","has","priority","size","disabled","undefined","isCircled","hasButtons","renderSearchInput","updateRoute","placeholder","sortProjects","GridPanelItem","key","id","ProjectListItemWrapper","ProjectStatsGraphWrapper","length","pageLinks","withOrganization","PanelItem"],"mappings":"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","file":"OrganizationProjects.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\n\nimport {Project} from 'app/types';\nimport {Project as ProjectPropType} from 'app/sentryTypes';\n\ntype Props = React.HTMLProps<HTMLSpanElement> & {\n  project: Project;\n};\n\nexport default class ProjectLabel extends React.PureComponent<Props> {\n  static propTypes = {\n    project: ProjectPropType.isRequired,\n  };\n\n  render() {\n    const {project, ...props} = this.props;\n\n    return (\n      <span className=\"project-label\" {...props}>\n        <span className=\"project-name\">{project.slug}</span>\n      </span>\n    );\n  }\n}\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nimport BookmarkStar from 'app/components/projects/bookmarkStar';\nimport Link from 'app/components/links/link';\nimport ProjectLabel from 'app/components/projectLabel';\nimport space from 'app/styles/space';\nimport {Project, Organization} from 'app/types';\n\ntype Props = {\n  project: Project;\n  organization: Organization;\n};\n\ntype State = {\n  isBookmarked: boolean;\n};\n\nclass ProjectItem extends React.Component<Props, State> {\n  state = {\n    isBookmarked: this.props.project.isBookmarked,\n  };\n\n  handleToggleBookmark = (isBookmarked: State['isBookmarked']) => {\n    this.setState({isBookmarked});\n  };\n\n  render() {\n    const {project, organization} = this.props;\n\n    return (\n      <Wrapper>\n        <BookmarkLink\n          organization={organization}\n          project={project}\n          isBookmarked={this.state.isBookmarked}\n          onToggle={this.handleToggleBookmark}\n        />\n        <Link to={`/settings/${organization.slug}/projects/${project.slug}/`}>\n          <ProjectLabel project={project} />\n        </Link>\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst BookmarkLink = styled(BookmarkStar)`\n  margin-right: ${space(1)};\n  margin-top: -${space(0.25)};\n`;\n\nexport default ProjectItem;\n","import React from 'react';\nimport LazyLoad from 'react-lazyload';\n\nimport {t} from 'app/locale';\nimport {Project} from 'app/types';\nimport {Series} from 'app/types/echarts';\nimport MiniBarChart from 'app/components/charts/miniBarChart';\n\ntype Props = {\n  project: Project;\n  stats?: Project['stats'];\n};\n\nconst ProjectStatsGraph = ({project, stats}: Props) => {\n  stats = stats || project.stats || [];\n  const series: Series[] = [\n    {\n      seriesName: t('Events'),\n      data: stats.map(point => ({name: point[0] * 1000, value: point[1]})),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {series && (\n        <LazyLoad height={25} debounce={50}>\n          <MiniBarChart isGroupedByDate showTimeInTooltip series={series} height={25} />\n        </LazyLoad>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ProjectStatsGraph;\n","import React from 'react';\nimport {Location} from 'history';\nimport {RouteComponentProps} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\n\nimport {Organization, Project} from 'app/types';\nimport {sortProjects} from 'app/utils';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport Placeholder from 'app/components/placeholder';\nimport ProjectListItem from 'app/views/settings/components/settingsProjectItem';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport space from 'app/styles/space';\nimport withOrganization from 'app/utils/withOrganization';\nimport {IconAdd} from 'app/icons';\nimport {decodeScalar} from 'app/utils/queryString';\n\nimport ProjectStatsGraph from './projectStatsGraph';\n\nconst ITEMS_PER_PAGE = 50;\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype ProjectStats = Record<string, Required<Project['stats']>>;\n\ntype State = AsyncView['state'] & {\n  projectList: Project[] | null;\n  projectListPageLinks: string | null;\n  projectStats: ProjectStats | null;\n};\n\nclass OrganizationProjects extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId} = this.props.params;\n    const {location} = this.props;\n    const query = decodeScalar(location.query.query);\n    return [\n      [\n        'projectList',\n        `/organizations/${orgId}/projects/`,\n        {\n          query: {\n            query,\n            per_page: ITEMS_PER_PAGE,\n          },\n        },\n      ],\n      [\n        'projectStats',\n        `/organizations/${orgId}/stats/`,\n        {\n          query: {\n            since: new Date().getTime() / 1000 - 3600 * 24,\n            stat: 'generated',\n            group: 'project',\n            per_page: ITEMS_PER_PAGE,\n          },\n        },\n      ],\n    ];\n  }\n\n  getTitle(): string {\n    const {organization} = this.props;\n    return routeTitleGen(t('Projects'), organization.slug, false);\n  }\n\n  renderLoading(): React.ReactNode {\n    return this.renderBody();\n  }\n\n  renderBody(): React.ReactNode {\n    const {projectList, projectListPageLinks, projectStats} = this.state;\n    const {organization} = this.props;\n    const canCreateProjects = new Set(organization.access).has('project:admin');\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        disabled={!canCreateProjects}\n        title={\n          !canCreateProjects\n            ? t('You do not have permission to create projects')\n            : undefined\n        }\n        to={`/organizations/${organization.slug}/projects/new/`}\n        icon={<IconAdd size=\"xs\" isCircled />}\n      >\n        {t('Create Project')}\n      </Button>\n    );\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader title=\"Projects\" action={action} />\n        <Panel>\n          <PanelHeader hasButtons>\n            {t('Projects')}\n\n            {this.renderSearchInput({\n              updateRoute: true,\n              placeholder: t('Search Projects'),\n              className: 'search',\n            })}\n          </PanelHeader>\n          <PanelBody>\n            {projectList ? (\n              sortProjects(projectList).map(project => (\n                <GridPanelItem key={project.id}>\n                  <ProjectListItemWrapper>\n                    <ProjectListItem project={project} organization={organization} />\n                  </ProjectListItemWrapper>\n                  <ProjectStatsGraphWrapper>\n                    {projectStats ? (\n                      <ProjectStatsGraph\n                        key={project.id}\n                        project={project}\n                        stats={projectStats[project.id]}\n                      />\n                    ) : (\n                      <Placeholder height=\"25px\" />\n                    )}\n                  </ProjectStatsGraphWrapper>\n                </GridPanelItem>\n              ))\n            ) : (\n              <LoadingIndicator />\n            )}\n            {projectList && projectList.length === 0 && (\n              <EmptyMessage>{t('No projects found.')}</EmptyMessage>\n            )}\n          </PanelBody>\n        </Panel>\n        {projectListPageLinks && (\n          <Pagination pageLinks={projectListPageLinks} {...this.props} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationProjects);\n\nconst GridPanelItem = styled(PanelItem)`\n  display: flex;\n  align-items: center;\n  padding: 0;\n`;\n\nconst ProjectListItemWrapper = styled('div')`\n  padding: ${space(2)};\n  flex: 1;\n`;\n\nconst ProjectStatsGraphWrapper = styled('div')`\n  padding: ${space(2)};\n  width: 25%;\n  margin-left: ${space(2)};\n`;\n"],"sourceRoot":""}