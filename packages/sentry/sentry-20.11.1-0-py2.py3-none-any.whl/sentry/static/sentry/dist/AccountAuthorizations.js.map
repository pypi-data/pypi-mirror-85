{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/account/accountAuthorizations.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","AccountAuthorizations","handleRevoke","authorization","oldData","state","data","setState","filter","id","a","api","requestPromise","method","addSuccessMessage","t","addErrorMessage","isEmpty","length","Description","tct","link","to","map","PanelItemCenter","key","ApplicationDetails","ApplicationName","application","name","homepageUrl","Url","href","Scopes","scopes","join","size","onClick","theme","fontSizeRelativeSmall","PanelItem","gray300"],"mappings":"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","file":"AccountAuthorizations.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p =>\n    p.tabs\n      ? `${space(4)} ${space(2)} ${space(2)} 0`\n      : `${space(4)} ${space(2)} ${space(4)} 0`};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import {Link} from 'react-router';\nimport {RouteComponentProps} from 'react-router/lib/Router';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {addSuccessMessage, addErrorMessage} from 'app/actionCreators/indicator';\nimport {t, tct} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport {IconDelete} from 'app/icons';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport {ApiApplication} from 'app/types';\nimport space from 'app/styles/space';\n\ntype Authorization = {\n  application: ApiApplication;\n  homepageUrl: string;\n  id: string;\n  scopes: string[];\n};\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype State = {\n  data: Authorization[];\n} & AsyncView['state'];\n\nclass AccountAuthorizations extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['data', '/api-authorizations/']];\n  }\n\n  getTitle() {\n    return 'Approved Applications';\n  }\n\n  handleRevoke = authorization => {\n    const oldData = this.state.data;\n\n    this.setState(\n      state => ({\n        data: state.data.filter(({id}) => id !== authorization.id),\n      }),\n      async () => {\n        try {\n          await this.api.requestPromise('/api-authorizations/', {\n            method: 'DELETE',\n            data: {authorization: authorization.id},\n          });\n\n          addSuccessMessage(t('Saved changes'));\n        } catch (_err) {\n          this.setState({\n            data: oldData,\n          });\n          addErrorMessage(t('Unable to save changes, please try again'));\n        }\n      }\n    );\n  };\n\n  renderBody() {\n    const {data} = this.state;\n    const isEmpty = data.length === 0;\n    return (\n      <div>\n        <SettingsPageHeader title=\"Authorized Applications\" />\n        <Description>\n          {tct('You can manage your own applications via the [link:API dashboard].', {\n            link: <Link to=\"/settings/account/api/\" />,\n          })}\n        </Description>\n\n        <Panel>\n          <PanelHeader>{t('Approved Applications')}</PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't approved any third party applications.\")}\n              </EmptyMessage>\n            )}\n\n            {!isEmpty && (\n              <div>\n                {data.map(authorization => (\n                  <PanelItemCenter key={authorization.id}>\n                    <ApplicationDetails>\n                      <ApplicationName>{authorization.application.name}</ApplicationName>\n                      {authorization.homepageUrl && (\n                        <Url>\n                          <a href={authorization.homepageUrl}>\n                            {authorization.homepageUrl}\n                          </a>\n                        </Url>\n                      )}\n                      <Scopes>{authorization.scopes.join(', ')}</Scopes>\n                    </ApplicationDetails>\n                    <Button\n                      size=\"small\"\n                      onClick={() => this.handleRevoke(authorization)}\n                      icon={<IconDelete />}\n                    />\n                  </PanelItemCenter>\n                ))}\n              </div>\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default AccountAuthorizations;\n\nconst Description = styled('p')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  margin-bottom: ${space(4)};\n`;\n\nconst PanelItemCenter = styled(PanelItem)`\n  align-items: center;\n`;\n\nconst ApplicationDetails = styled('div')`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nconst ApplicationName = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n`;\n\n/**\n * Intentionally wrap <a> so that it does not take up full width and cause\n * hit box issues\n */\nconst Url = styled('div')`\n  margin-bottom: ${space(0.5)};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n\nconst Scopes = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n"],"sourceRoot":""}