{"version":3,"sources":["webpack:///./app/views/performance/utils.tsx","webpack:///./app/utils/getCurrentSentryReactTransaction.tsx","webpack:///./app/views/performance/transactionVitals/utils.tsx","webpack:///./app/views/performance/breadcrumb.tsx","webpack:///./app/views/performance/transactionDetails/content.tsx","webpack:///./app/views/performance/transactionDetails/index.tsx"],"names":["getPerformanceLandingUrl","organization","slug","getTransactionSearchQuery","location","String","decodeScalar","query","trim","getTransactionDetailsUrl","eventSlug","transaction","pathname","getTransactionComparisonUrl","baselineEventSlug","regressionEventSlug","addRoutePerformanceContext","selection","Sentry","getScope","getTransaction","days","statsPeriodToDays","datetime","period","start","end","seconds","Math","floor","setTag","toString","getTransactionName","vitalsRouteWithQuery","orgSlug","projectID","generateVitalsRoute","project","environment","statsPeriod","findNearestBucketIndex","chartData","bucketWidth","xAxis","length","histogram","getRefRect","i","data1","j","data2","count","point1","x","y","min","point2","max","asPixelRect","chartRef","dataRect","convertToPixel","xAxisIndex","yAxisIndex","isNaN","mapPoint","point","srcRect","destRect","xPercentage","yPercentage","Breadcrumb","crumbs","this","props","transactionName","transactionComparison","realUserMonitoring","performanceTarget","undefined","push","to","label","t","preserveGlobalSelection","rumTarget","summaryTarget","transactionSummaryRouteWithQuery","getCrumbs","React","Component","EventDetailsContent","state","loading","reloading","error","errors","event","isSidebarVisible","toggleSidebar","setState","generateTagUrl","tag","newQuery","appendTagCondition","key","value","title","params","renderContent","trackAnalyticsEvent","eventKey","eventName","event_type","type","organization_id","parseInt","id","Fragment","data-test-id","onClick","fullWidth","orgId","slugs","projectId","projects","getViewChildTransactionTarget","childTransactionProps","showExampleCommit","showTagSummary","generateUrl","notFound","Object","values","find","resp","status","permissionDenied","message","objSlug","split","AsyncComponent","EventDetails","getEventSlug","documentTitle","StyledPageContent","withOrganization","PageContent"],"mappings":"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","file":"PerformanceTransactionDetails.js","sourcesContent":["import {Location, LocationDescriptor, Query} from 'history';\n\nimport {OrganizationSummary, GlobalSelection} from 'app/types';\nimport {decodeScalar} from 'app/utils/queryString';\nimport getCurrentSentryReactTransaction from 'app/utils/getCurrentSentryReactTransaction';\nimport {statsPeriodToDays} from 'app/utils/dates';\n\nexport function getPerformanceLandingUrl(organization: OrganizationSummary): string {\n  return `/organizations/${organization.slug}/performance/`;\n}\n\nexport function getTransactionSearchQuery(location: Location) {\n  return String(decodeScalar(location.query.query) || '').trim();\n}\n\nexport function getTransactionDetailsUrl(\n  organization: OrganizationSummary,\n  eventSlug: string,\n  transaction: string,\n  query: Query\n): LocationDescriptor {\n  return {\n    pathname: `/organizations/${organization.slug}/performance/${eventSlug}/`,\n    query: {\n      ...query,\n      transaction,\n    },\n  };\n}\n\nexport function getTransactionComparisonUrl({\n  organization,\n  baselineEventSlug,\n  regressionEventSlug,\n  transaction,\n  query,\n}: {\n  organization: OrganizationSummary;\n  baselineEventSlug: string;\n  regressionEventSlug: string;\n  transaction: string;\n  query: Query;\n}): LocationDescriptor {\n  return {\n    pathname: `/organizations/${organization.slug}/performance/compare/${baselineEventSlug}/${regressionEventSlug}/`,\n    query: {\n      ...query,\n      transaction,\n    },\n  };\n}\n\nexport function addRoutePerformanceContext(selection: GlobalSelection) {\n  const transaction = getCurrentSentryReactTransaction();\n  const days = statsPeriodToDays(\n    selection.datetime.period,\n    selection.datetime.start,\n    selection.datetime.end\n  );\n  const seconds = Math.floor(days * 86400);\n\n  transaction?.setTag('statsPeriod', seconds.toString());\n}\n\nexport function getTransactionName(location: Location): string | undefined {\n  const {transaction} = location.query;\n\n  return decodeScalar(transaction);\n}\n","import * as Sentry from '@sentry/react';\n\n/**\n * Gets the current transaction, if one exists.\n */\nexport default function getCurrentSentryReactTransaction() {\n  return Sentry?.getCurrentHub()?.getScope()?.getTransaction();\n}\n","import {Query} from 'history';\nimport {ECharts} from 'echarts';\n\nimport {HistogramData, Rectangle, Point} from './types';\n\nexport function generateVitalsRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/vitals/`;\n}\n\nexport function vitalsRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  transaction: string;\n  query: Query;\n  projectID?: string | string[];\n}) {\n  const pathname = generateVitalsRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\n/**\n * Given a value on the x-axis, return the index of the nearest bucket or null\n * if it cannot be found.\n *\n * A bucket contains a range of values, and nearest is defined as the bucket the\n * value will fall in.\n */\nexport function findNearestBucketIndex(\n  chartData: HistogramData[],\n  bucketWidth: number,\n  xAxis: number\n): number | null {\n  // it's possible that the data is not available yet or the x axis is out of range\n  if (\n    !chartData.length ||\n    xAxis >= chartData[chartData.length - 1].histogram + bucketWidth\n  ) {\n    return null;\n  } else if (xAxis < chartData[0].histogram) {\n    return -1;\n  }\n\n  return Math.floor((xAxis - chartData[0].histogram) / bucketWidth);\n}\n\n/**\n * To compute pixel coordinates, we need at least 2 unique points on the chart.\n * The two points must have different x axis and y axis values for it to work.\n *\n * If all bars have the same y value, pick the most naive reference rect. This\n * may result in floating point errors, but should be okay for our purposes.\n */\nexport function getRefRect(chartData: HistogramData[]): Rectangle | null {\n  // not enough points to construct 2 reference points\n  if (chartData.length < 2) {\n    return null;\n  }\n\n  for (let i = 0; i < chartData.length; i++) {\n    const data1 = chartData[i];\n    for (let j = i + 1; j < chartData.length; j++) {\n      const data2 = chartData[j];\n\n      if (data1.histogram !== data2.histogram && data1.count !== data2.count) {\n        return {\n          point1: {x: i, y: Math.min(data1.count, data2.count)},\n          point2: {x: j, y: Math.max(data1.count, data2.count)},\n        };\n      }\n    }\n  }\n\n  // all data points have the same count, just pick any 2 histogram bins\n  // and use 0 and 1 as the count as we can rely on them being on the graph\n  return {\n    point1: {x: 0, y: 0},\n    point2: {x: 1, y: 1},\n  };\n}\n\n/**\n * Given an ECharts instance and a rectangle defined in terms of the x and y axis,\n * compute the corresponding pixel coordinates. If it cannot be done, return null.\n */\nexport function asPixelRect(chartRef: ECharts, dataRect: Rectangle): Rectangle | null {\n  const point1 = chartRef.convertToPixel({xAxisIndex: 0, yAxisIndex: 0}, [\n    dataRect.point1.x,\n    dataRect.point1.y,\n  ]);\n\n  if (isNaN(point1?.[0]) || isNaN(point1?.[1])) {\n    return null;\n  }\n\n  const point2 = chartRef.convertToPixel({xAxisIndex: 0, yAxisIndex: 0}, [\n    dataRect.point2.x,\n    dataRect.point2.y,\n  ]);\n\n  if (isNaN(point2?.[0]) || isNaN(point2?.[1])) {\n    return null;\n  }\n\n  return {\n    point1: {x: point1[0], y: point1[1]},\n    point2: {x: point2[0], y: point2[1]},\n  };\n}\n\n/**\n * Given a point on a source rectangle, map it to the corresponding point on the\n * destination rectangle. Assumes that the two rectangles are related by a simple\n * transformation containing only translations and scaling.\n */\nexport function mapPoint(\n  point: Point,\n  srcRect: Rectangle,\n  destRect: Rectangle\n): Point | null {\n  if (\n    srcRect.point1.x === srcRect.point2.x ||\n    srcRect.point1.y === srcRect.point2.y ||\n    destRect.point1.x === destRect.point2.x ||\n    destRect.point1.y === destRect.point2.y\n  ) {\n    return null;\n  }\n\n  const xPercentage =\n    (point.x - srcRect.point1.x) / (srcRect.point2.x - srcRect.point1.x);\n  const yPercentage =\n    (point.y - srcRect.point1.y) / (srcRect.point2.y - srcRect.point1.y);\n\n  return {\n    x: destRect.point1.x + (destRect.point2.x - destRect.point1.x) * xPercentage,\n    y: destRect.point1.y + (destRect.point2.y - destRect.point1.y) * yPercentage,\n  };\n}\n","import React from 'react';\nimport {Location, LocationDescriptor} from 'history';\n\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport Breadcrumbs, {Crumb} from 'app/components/breadcrumbs';\nimport {decodeScalar} from 'app/utils/queryString';\n\nimport {getPerformanceLandingUrl} from './utils';\nimport {transactionSummaryRouteWithQuery} from './transactionSummary/utils';\nimport {vitalsRouteWithQuery} from './transactionVitals/utils';\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n  transactionName?: string;\n  eventSlug?: string;\n  transactionComparison?: boolean;\n  realUserMonitoring?: boolean;\n};\n\nclass Breadcrumb extends React.Component<Props> {\n  getCrumbs() {\n    const crumbs: Crumb[] = [];\n    const {\n      organization,\n      location,\n      transactionName,\n      eventSlug,\n      transactionComparison,\n      realUserMonitoring,\n    } = this.props;\n\n    const performanceTarget: LocationDescriptor = {\n      pathname: getPerformanceLandingUrl(organization),\n      query: {\n        ...location.query,\n        // clear out the transaction name\n        transaction: undefined,\n      },\n    };\n\n    crumbs.push({\n      to: performanceTarget,\n      label: t('Performance'),\n      preserveGlobalSelection: true,\n    });\n\n    if (transactionName) {\n      if (realUserMonitoring) {\n        const rumTarget = vitalsRouteWithQuery({\n          orgSlug: organization.slug,\n          transaction: transactionName,\n          projectID: decodeScalar(location.query.project),\n          query: location.query,\n        });\n\n        crumbs.push({\n          to: rumTarget,\n          label: t('Web Vitals'),\n          preserveGlobalSelection: true,\n        });\n      } else {\n        const summaryTarget = transactionSummaryRouteWithQuery({\n          orgSlug: organization.slug,\n          transaction: transactionName,\n          projectID: decodeScalar(location.query.project),\n          query: location.query,\n        });\n\n        crumbs.push({\n          to: summaryTarget,\n          label: t('Transaction Summary'),\n          preserveGlobalSelection: true,\n        });\n      }\n    }\n\n    if (transactionName && eventSlug) {\n      crumbs.push({\n        to: '',\n        label: t('Event Details'),\n      });\n    } else if (transactionComparison) {\n      crumbs.push({\n        to: '',\n        label: t('Compare to Baseline'),\n      });\n    }\n\n    return crumbs;\n  }\n\n  render() {\n    return <Breadcrumbs crumbs={this.getCrumbs()} />;\n  }\n}\n\nexport default Breadcrumb;\n","import React from 'react';\nimport {Params} from 'react-router/lib/Router';\nimport {Location} from 'history';\nimport PropTypes from 'prop-types';\n\nimport {t} from 'app/locale';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport {Organization, Event, EventTag} from 'app/types';\nimport SentryTypes from 'app/sentryTypes';\nimport EventMetadata from 'app/components/events/eventMetadata';\nimport {BorderlessEventEntries} from 'app/components/events/eventEntries';\nimport * as SpanEntryContext from 'app/components/events/interfaces/spans/context';\nimport Button from 'app/components/button';\nimport LoadingError from 'app/components/loadingError';\nimport NotFound from 'app/components/errors/notFound';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport RootSpanStatus from 'app/components/events/rootSpanStatus';\nimport OpsBreakdown from 'app/components/events/opsBreakdown';\nimport RealUserMonitoring from 'app/components/events/realUserMonitoring';\nimport TagsTable from 'app/components/tagsTable';\nimport Projects from 'app/utils/projects';\nimport * as Layout from 'app/components/layouts/thirds';\nimport Breadcrumb from 'app/views/performance/breadcrumb';\nimport {decodeScalar, appendTagCondition} from 'app/utils/queryString';\n\nimport {transactionSummaryRouteWithQuery} from '../transactionSummary/utils';\nimport {getTransactionDetailsUrl} from '../utils';\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n  params: Params;\n  eventSlug: string;\n};\n\ntype State = {\n  event: Event | undefined;\n  isSidebarVisible: boolean;\n} & AsyncComponent['state'];\n\nclass EventDetailsContent extends AsyncComponent<Props, State> {\n  static propTypes: any = {\n    organization: SentryTypes.Organization.isRequired,\n    eventSlug: PropTypes.string.isRequired,\n    location: PropTypes.object.isRequired,\n  };\n\n  state: State = {\n    // AsyncComponent state\n    loading: true,\n    reloading: false,\n    error: false,\n    errors: [],\n    event: undefined,\n\n    // local state\n    isSidebarVisible: true,\n  };\n\n  toggleSidebar = () => {\n    this.setState({isSidebarVisible: !this.state.isSidebarVisible});\n  };\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, params} = this.props;\n    const {eventSlug} = params;\n\n    const url = `/organizations/${organization.slug}/events/${eventSlug}/`;\n\n    return [['event', url]];\n  }\n\n  get projectId() {\n    return this.props.eventSlug.split(':')[0];\n  }\n\n  generateTagUrl = (tag: EventTag) => {\n    const {location, organization} = this.props;\n    const {event} = this.state;\n    if (!event) {\n      return '';\n    }\n    const query = decodeScalar(location.query.query) || '';\n    const newQuery = {\n      ...location.query,\n      query: appendTagCondition(query, tag.key, tag.value),\n    };\n    return transactionSummaryRouteWithQuery({\n      orgSlug: organization.slug,\n      transaction: event.title,\n      projectID: decodeScalar(location.query.project),\n      query: newQuery,\n    });\n  };\n\n  renderBody() {\n    const {event} = this.state;\n\n    if (!event) {\n      return <NotFound />;\n    }\n\n    return this.renderContent(event);\n  }\n\n  renderContent(event: Event) {\n    const {organization, location, eventSlug} = this.props;\n\n    // metrics\n    trackAnalyticsEvent({\n      eventKey: 'performance.event_details',\n      eventName: 'Performance: Opened Event Details',\n      event_type: event.type,\n      organization_id: parseInt(organization.id, 10),\n    });\n\n    const {isSidebarVisible} = this.state;\n    const transactionName = event.title;\n    const query = decodeScalar(location.query.query) || '';\n\n    return (\n      <React.Fragment>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <Breadcrumb\n              organization={organization}\n              location={location}\n              transactionName={transactionName}\n              eventSlug={eventSlug}\n            />\n            <Layout.Title data-test-id=\"event-header\">{event.title}</Layout.Title>\n          </Layout.HeaderContent>\n          <Layout.HeaderActions>\n            <Button onClick={this.toggleSidebar}>\n              {isSidebarVisible ? 'Hide Details' : 'Show Details'}\n            </Button>\n          </Layout.HeaderActions>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth={!isSidebarVisible}>\n            <Projects orgId={organization.slug} slugs={[this.projectId]}>\n              {({projects}) => (\n                <SpanEntryContext.Provider\n                  value={{\n                    getViewChildTransactionTarget: childTransactionProps => {\n                      return getTransactionDetailsUrl(\n                        organization,\n                        childTransactionProps.eventSlug,\n                        childTransactionProps.transaction,\n                        location.query\n                      );\n                    },\n                  }}\n                >\n                  <BorderlessEventEntries\n                    organization={organization}\n                    event={event}\n                    project={projects[0]}\n                    showExampleCommit={false}\n                    showTagSummary={false}\n                    location={location}\n                  />\n                </SpanEntryContext.Provider>\n              )}\n            </Projects>\n          </Layout.Main>\n          {isSidebarVisible && (\n            <Layout.Side>\n              <EventMetadata\n                event={event}\n                organization={organization}\n                projectId={this.projectId}\n              />\n              <RootSpanStatus event={event} />\n              <OpsBreakdown event={event} />\n              <RealUserMonitoring event={event} />\n              <TagsTable event={event} query={query} generateUrl={this.generateTagUrl} />\n            </Layout.Side>\n          )}\n        </Layout.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderError(error: Error) {\n    const notFound = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 404\n    );\n    const permissionDenied = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 403\n    );\n\n    if (notFound) {\n      return <NotFound />;\n    }\n    if (permissionDenied) {\n      return (\n        <LoadingError message={t('You do not have permission to view that event.')} />\n      );\n    }\n\n    return super.renderError(error, true, true);\n  }\n\n  renderComponent() {\n    const {organization} = this.props;\n\n    return (\n      <SentryDocumentTitle\n        title={t('Performance - Event Details')}\n        objSlug={organization.slug}\n      >\n        {super.renderComponent()}\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nexport default EventDetailsContent;\n","import {Params} from 'react-router/lib/Router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {Organization} from 'app/types';\nimport {PageContent} from 'app/styles/organization';\nimport {t} from 'app/locale';\nimport LightWeightNoProjectMessage from 'app/components/lightWeightNoProjectMessage';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport SentryTypes from 'app/sentryTypes';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport EventDetailsContent from './content';\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n  params: Params;\n};\n\nclass EventDetails extends React.Component<Props> {\n  static propTypes: any = {\n    organization: SentryTypes.Organization.isRequired,\n    location: PropTypes.object.isRequired,\n  };\n\n  getEventSlug = (): string => {\n    const {eventSlug} = this.props.params;\n    return typeof eventSlug === 'string' ? eventSlug.trim() : '';\n  };\n\n  render() {\n    const {organization, location, params} = this.props;\n    const documentTitle = t('Performance Details');\n\n    return (\n      <SentryDocumentTitle title={documentTitle} objSlug={organization.slug}>\n        <StyledPageContent>\n          <LightWeightNoProjectMessage organization={organization}>\n            <EventDetailsContent\n              organization={organization}\n              location={location}\n              params={params}\n              eventSlug={this.getEventSlug()}\n            />\n          </LightWeightNoProjectMessage>\n        </StyledPageContent>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nexport default withOrganization(EventDetails);\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n"],"sourceRoot":""}