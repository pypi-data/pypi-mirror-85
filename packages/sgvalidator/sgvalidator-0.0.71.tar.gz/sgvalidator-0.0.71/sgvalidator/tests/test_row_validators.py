from unittest import TestCase
from .test_data_factory import TestDataFactory as tdf
from ..types import *
from ..validators import CountryDetector
from .test_utils import getMethodAndValidatorConfigFromName


class TestRowValidators(TestCase):
    def testGarbageValueValidator(self):
        method, conf = getMethodAndValidatorConfigFromName("GarbageValueValidator")
        goodRow = tdf.row().copy(location_name="<MISSING>").toPdRow()
        badRow1 = tdf.row().copy(store_number="null").toPdRow()
        badRow2 = tdf.row().copy(phone="<span class='phone'>214-052-0123").toPdRow()
        self.assertTrue(method(goodRow, conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(badRow1, conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(badRow1, conf).getMessage() == "STORE_NUMBER_CONTAINS_GARBAGE_VALUE")
        self.assertTrue(method(badRow2, conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(badRow2, conf).getMessage() == "PHONE_CONTAINS_GARBAGE_VALUE")

    def testCentroidValidator(self):
        method, conf = getMethodAndValidatorConfigFromName("CentroidValidator")
        self.assertTrue(method(tdf.row().copy(latitude="37.12334", longitude="122.123213").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(latitude="-29.12334", longitude="122.123213").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(latitude="29.12334", longitude="-122.123213").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(latitude="-37.12334", longitude="-122.123213").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(latitude="-37.12123", longitude="-122.12123").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)

        self.assertTrue(method(tdf.row().copy(latitude="-37.1", longitude="-122.1").toPdRow(), conf).getMessage() == "EITHER_LAT_OR_LNG_IMPRECISE")
        self.assertTrue(method(tdf.row().copy(latitude="0.0123", longitude="<MISSING>").toPdRow(), conf).getMessage() == "EITHER_LAT_OR_LNG_EMPTY")
        self.assertTrue(method(tdf.row().copy(latitude="<INACCESSIBLE>", longitude="0.0").toPdRow(), conf).getMessage() == "EITHER_LAT_OR_LNG_EMPTY")
        self.assertTrue(method(tdf.row().copy(latitude="37 lat", longitude="-122.1234123").toPdRow(), conf).getMessage() == "EITHER_LAT_OR_LNG_NON_NUMERIC")
        self.assertTrue(method(tdf.row().copy(latitude="-91.1234123", longitude="-122.12312312").toPdRow(), conf).getMessage() == "EITHER_LAT_OR_LNG_OUTSIDE_OF_RANGE")
        self.assertTrue(method(tdf.row().copy(latitude="-89.123123123", longitude="-181.123123").toPdRow(), conf).getMessage() == "EITHER_LAT_OR_LNG_OUTSIDE_OF_RANGE")

    def testStreetAddressHasNumber(self):
        method, conf = getMethodAndValidatorConfigFromName("StreetAddressHasNumber")
        self.assertTrue(method(tdf.row().copy(street_address="mission street").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(street_address="Corner of 8th and Bryant").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(street_address="currin drive p.o. box 123").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(street_address="4th St").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(street_address="1543 mission street").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)

    def testStreetAddressHasStateName(self):
        method, conf = getMethodAndValidatorConfigFromName("StreetAddressHasStateName")
        self.assertTrue(method(tdf.row().copy(street_address="1543 mission st ca").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(street_address="1543 mission st").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(street_address="7523 currin dr").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(street_address="<MISSING>").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)

    def testCountryValidator(self):
        method, conf = getMethodAndValidatorConfigFromName("CountryValidator")
        rowWithBadZip = tdf.row().copy(state="CA", zip="941 03", phone="2149260429").toPdRow()
        self.assertTrue(method(rowWithBadZip, conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(rowWithBadZip, conf).getMessage() == "INVALID_US_ZIP")

        self.assertTrue(method(tdf.row().copy(state="").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(state="ca").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(state="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(state="California").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(state="TX").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(state="texas").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(state="tsxs").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(state="asds").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(state="cali").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(state="sada").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(zip="94103").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="94103-1234").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="00000").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="9104").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(zip="910421-1234").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(zip="342131").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(phone="2149260428").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(phone="+12149260428").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(phone="").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(phone="960428").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(phone="214-926!0428").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)

        self.assertTrue(method(tdf.row().copy(zip="", phone="", state="", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="", phone="", state="ab", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="", phone="", state="alberta", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="", phone="", state=" ALBERTA ", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="", phone="", state="quebec", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="", phone="", state="alberta!", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(zip="", phone="", state="newfoundland", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="", phone="", state="price edwardsd", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(phone="", state="", zip="A1A 1A1", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(phone="", state="", zip="P0M 0B8", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(phone="", state="", zip="L0N 1R0", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(phone="", state="", zip="", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(phone="", state="", zip="A1A1A1", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(phone="", state="", zip="O1A 1A1", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(state="", zip="", phone="2149260428", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(state="", zip="", phone="+12149260428", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(state="", zip="", phone="", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(state="", zip="", phone="+1 (214) 926-0428", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(state="", zip="", phone="960428", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(state="", zip="", phone="214-926!0428", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(state="", zip="", phone="2149260428 null", DETECTED_CC="CA").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)

    def testGeoConsistencyValidator(self):
        method, conf = getMethodAndValidatorConfigFromName("GeoConsistencyValidator")
        self.assertTrue(method(tdf.row().copy(zip="75230", state="TX").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="75230", state="<MISSING>").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="94103", state="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="<INACCESSIBLE>", state="CA").toPdRow(), conf).getStatus() == ValidatorStatus.SUCCESS)
        self.assertTrue(method(tdf.row().copy(zip="75230", state="AK").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(zip="75230", state="CA").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(zip="94103", state="NY").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(zip="94103", state="DE").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)
        self.assertTrue(method(tdf.row().copy(zip="94103", state="MD").toPdRow(), conf).getStatus() == ValidatorStatus.FAIL)

    def testCountryDetection(self):
        self.assertTrue(CountryDetector.inferCountryCode("US") == CountryCode.US)
        self.assertTrue(CountryDetector.inferCountryCode("united states") == CountryCode.US)
        self.assertTrue(CountryDetector.inferCountryCode("CA") == CountryCode.CA)
        self.assertTrue(CountryDetector.inferCountryCode("can") == CountryCode.CA)
        self.assertTrue(CountryDetector.inferCountryCode("") is None)
        self.assertTrue(CountryDetector.inferCountryCode(None) is None)
        self.assertTrue(CountryDetector.inferCountryCode("Fake  ") is None)
        self.assertTrue(CountryDetector.isUsZip("94103"))
        self.assertTrue(CountryDetector.isUsZip("94103-1234"))
        self.assertTrue(CountryDetector.isUsZip("00000"))
        self.assertFalse(CountryDetector.isUsZip("9104"))
        self.assertFalse(CountryDetector.isUsZip(None))
        self.assertFalse(CountryDetector.isUsZip("910421-1234"))
        self.assertFalse(CountryDetector.isUsZip("342131"))
        self.assertTrue(CountryCode.US == CountryDetector.detect({"country_code": "united states", "state": None, "zip": None}))
        self.assertTrue(CountryCode.US == CountryDetector.detect({"country_code": None, "state": None, "zip": "12345"}))
        self.assertTrue(CountryCode.US == CountryDetector.detect({"country_code": None, "zip": None, "state": "tx"}))
        self.assertTrue("<MISSING>" == CountryDetector.detect({"country_code": None, "zip": "67J 3J7", "state": "Ont"}))
        self.assertTrue(CountryCode.CA == CountryDetector.detect({"country_code": "can", "state": None, "zip": None}))
        self.assertTrue(CountryCode.CA == CountryDetector.detect({"country_code": None, "state": None, "zip": "A1A 1A1"}))
        self.assertTrue(CountryCode.CA == CountryDetector.detect({"country_code": None, "zip": None, "state": "ab"}))
