Production-Grade Container Orchestration - Kubernetes
Documentation
Blog
Partners
Community
Case Studies
English
中文 Chinese
한국어 Korean
日本語 Japanese
Français
Deutsch
Español
Português
Bahasa Indonesia
v1.15
v1.15
v1.14
v1.13
v1.12
v1.11
Learn Kubernetes Basics
Get Started
Ready to get your hands dirty? Build a simple Kubernetes cluster that runs "Hello World" for Node.js.
Documentation
Learn how to use Kubernetes with conceptual, tutorial, and reference documentation. You can even
help contribute to the docs
!
Blog
Read the latest news for Kubernetes and the containers space in general, and get technical how-tos hot off the presses.
Interested in hacking on the core Kubernetes code base?
View On GitHub
Explore the community
Twitter
GitHub
Slack Slack
Stack Overflow
Forum
Events Calendar
Production-Grade Container Orchestration
Automated container deployment, scaling, and management
Learn Kubernetes Basics
Kubernetes (K8s)
is an open-source system for automating deployment, scaling, and management of containerized applications.
It groups containers that make up an application into logical units for easy management and discovery. Kubernetes builds upon
15 years of experience of running production workloads at Google
, combined with best-of-breed ideas and practices from the community.
Planet Scale
Designed on the same principles that allows Google to run billions of containers a week, Kubernetes can scale without increasing your ops team.
Never Outgrow
Whether testing locally or running a global enterprise, Kubernetes flexibility grows with you to deliver your applications consistently and easily no matter how complex your need is.
Run Anywhere
Kubernetes is open source giving you the freedom to take advantage of on-premises, hybrid, or public cloud infrastructure, letting you effortlessly move workloads to where it matters to you.
The Challenges of Migrating 150+ Microservices to Kubernetes
By Sarah Wells, Technical Director for Operations and Reliability, Financial Times
Watch Video
Attend KubeCon in San Diego on Nov. 18-21, 2019
Attend KubeCon in Amsterdam on Mar. 30-Apr. 2, 2020
Kubernetes Features
Service discovery and load balancing
No need to modify your application to use an unfamiliar service discovery mechanism. Kubernetes gives Pods their own IP addresses and a single DNS name for a set of Pods, and can load-balance across them.
Automatic bin packing
Automatically places containers based on their resource requirements and other constraints, while not sacrificing availability. Mix critical and best-effort workloads in order to drive up utilization and save even more resources.
Storage orchestration
Automatically mount the storage system of your choice, whether from local storage, a public cloud provider such as
GCP
or
AWS
, or a network storage system such as NFS, iSCSI, Gluster, Ceph, Cinder, or Flocker.
Self-healing
Restarts containers that fail, replaces and reschedules containers when nodes die, kills containers that don’t respond to your user-defined health check, and doesn’t advertise them to clients until they are ready to serve.
Automated rollouts and rollbacks
Kubernetes progressively rolls out changes to your application or its configuration, while monitoring application health to ensure it doesn’t kill all your instances at the same time. If something goes wrong, Kubernetes will rollback the change for you. Take advantage of a growing ecosystem of deployment solutions.
Secret and configuration management
Deploy and update secrets and application configuration without rebuilding your image and without exposing secrets in your stack configuration.
Batch execution
In addition to services, Kubernetes can manage your batch and CI workloads, replacing containers that fail, if desired.
Horizontal scaling
Scale your application up and down with a simple command, with a UI, or automatically based on CPU usage.
Case Studies
"Kubernetes has improved our experience using cloud infrastructure. There is currently no alternative …"
Read more
"We saw the amazing community that’s grown up around Kubernetes, and we wanted to be part of that. We …"
Read more
"The community is absolutely vital: being able to pass ideas around, talk about a lot of the similar …"
Read more
"We made the right decisions at the right time. Kubernetes and the cloud native technologies are now …"
Read more
Case Studies
We are a
CNCF
graduated project
Interested in receiving the latest Kubernetes news? Sign up for KubeWeekly.
Home
Blog
Partners
Community
Case Studies
Twitter
GitHub
Slack
Stack Overflow
Forum
Events Calendar
Contribute
© 2019 The Kubernetes Authors | Documentation Distributed under
CC BY 4.0
Copyright © 2019 The Linux Foundation ®. All rights reserved. The Linux Foundation has registered trademarks and uses trademarks. For a list of trademarks of The Linux Foundation, please see our
Trademark Usage page
ICP license: 京ICP备17074266号-3