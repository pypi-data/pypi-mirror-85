<tool id="SpyBOAT" name="SpyBOAT" version="0.0.1">
    <requirements>
        <requirement type="package" version="3.7">python</requirement>
        <requirement type="package" version="0.14.0">scikit-image</requirement>
        <requirement type="package" version="1.15.2">numpy</requirement>
	<requirement type="package" version="0.8.22">pyboat</requirement>
    </requirements>
    <version_command>python $__tool_directory__/cl_wrapper.py --version</version_command>
    <command detect_errors="exit_code"><![CDATA[
        python $__tool_directory__/cl_wrapper.py
          --input_path '$movie'

	  --gauss_sigma $gauss_sigma
	  --rescale $rescale_factor
	  
	  #if $masking.selection_mode == "no_mask":
	  --mask_frame None
	  --mask_thresh None
	  #else:
	  --mask_frame $mask_frame
	  --mask_thresh $mask_thresh
	  #end if

          --dt $dt
          --Tmin $tmin
          --Tmax $tmax
          --nT $nt
	  --Tcutoff $tcutoff
	  --win_size $win_size


          --phase_out $phase_out
          --period_out $period_out
          --power_out $power_out
          --amplitude_out $amplitude_out
          --ncpu 8
	  > $log

    ]]></command>
    <inputs>
        <param name="movie" type="data" format="tiff" label="Movie to process"
               help="Select a movie to Wavelet process"/>

        <!--
        The following Wavelet parameters must have the same numerical type as defined in the
        argparse parser in cl_wrapper.py
        -->

	<param name="gauss_sigma" type="float" label="Sigma" help="Width of the Gaussian smoothing kernel, leave blank if no pre-smoothing desired." optional="true">
            <validator type="in_range" min="0" max="9999999"/>
        </param>

	<param name="rescale_factor" type="integer" value="" label="Rescale factor" help="Downsamples the input movie (in %), leave blank to disable downsampling" optional="true">
            <validator type="in_range" min="0" max="99"/>
        </param>

	<conditional name="masking">
            <param label="Masking the output" name="selection_mode" type="select">
              <option selected="true" value="no_mask">No masking</option>
              <option value="create_mask">Create a mask</option>
            </param>
            <!-- <when value="no_mask"> -->

            <!-- </when> -->
            <when value="create_mask">
	      	<param name="mask_frame" type="integer" value="1" label="Create mask from frame" help="Creates a fixed mask from the chosen frame of the input movie.">
		  <validator type="in_range" min="1" max="99999"/>
		</param>

	      	<param name="mask_thresh" type="float" value="0" label="Threshold" help="All pixels below this threshold will be masked in the output.">
		  <validator type="in_range" min="0" max="999999"/>
		</param>			      
            </when>
        </conditional>
	
        <param name="dt" type="float" value="1" label="Sampling interval" help="Time span between two frames">
            <validator type="in_range" min="0" max="9999999"/>
        </param>
        <param name="tmin" type="float" value="2" label="Smallest period" help="Minimal period to scan for">
            <validator type="in_range" min="0" max="9999999"/>
        </param>

        <param name="tmax" type="float" value="30" label="Largest period"
	       help="Maximal period to scan for">
            <validator type="in_range" min="0" max="9999999"/>
        </param>

        <param name="nt" type="integer" value="150" label="Number of periods to scan for"
               help="Determines period resolution of the Wavelet power spectra">
            <validator type="in_range" min="0" max="9999999"/>
        </param>

        <param name="tcutoff" type="float" value="40" label="Tcutoff"
               help="Cut-off-period for sinc filter detrending, a blank field disables detrending">
            <validator type="in_range" min="0" max="9999999"/>
        </param>

        <param name="win_size" type="float" value="" label="Window size"
               help="Window size for amplitude envelope estimation, leave blank to disable normalization " optional="true">
            <validator type="in_range" min="0" max="9999999"/>
        </param>
	
	
    </inputs>

    <outputs>
        <data name="phase_out" format="tiff" label="phase_${movie.name}"/>
        <data name="period_out" format="tiff" label="period_${movie.name}"/>
        <data name="power_out" format="tiff" label="power_${movie.name}"/>
        <data name="amplitude_out" format="tiff" label="amplitude_${movie.name}"/>
	    <data name="log" format="txt" label="log_${movie.name}.txt"/>
    </outputs>

    <tests>
        <test>
            <param name="movie" value="test_movie.tif" ftype="tiff"/>
            <output name="phase_out" file="phase_out.tif" ftype="tiff" compare="sim_size"/>
            <output name="period_out" file="period_out.tif" ftype="tiff" compare="sim_size"/>
            <output name="power_out" file="power_out.tif" ftype="tiff" compare="sim_size"/>
            <output name="amplitude_out" file="amplitude_out.tif" ftype="tiff" compare="sim_size"/>
        </test>
    </tests>
    <help><![CDATA[
    **What it does**

    Wavelet transforms an image stack (time,Y,X) pixel by pixel. Removal of low-frequency trends is inbuild via sinc filtering. 
    There are four output movies generated (phase, period, amplitude and power). They have exactly the same dimensions (time,X,Y) as the (rescaled) input.

    Pre-smoothing of the data with Gaussian kernels is supported and often recommendable.

    To limit the number of Wavelet transformations (computing time), downscaling of the input movie resolution is recommended. 
    Trimming away parts of the movie with no relevant data (e.g. outer dark edges) also speed up the processing.

    If multiple channels present, select the one containing the oscillatory signal. Multiple slices (z-stack) are not supported.

    **Author**: Gregor Moenke (gregor.moenke@embl.de).

    **Wrapper by**: Jelle Scholtalbers (jelle.scholtalbers@embl.de).

    **Know what you are doing**

    .. class:: warningmark

    You will want to have understood the basics of time-frequency analysis with Wavelets, find more information about the analysis strategy employed at https://github.com/tensionhead/pyBOAT

    **Parameter List**

    - Sigma:

        The Kernel bandwidth (in pixels) for the Gaussian kernels to use for pre-smoothing the input data. The default value of zero means that no pre-smoothing is done. Set this number to a desired kernel width to turn on pre-smoothing.

    - Sampling interval:

        Time passed between consecutive measurements, e.g 'an image every 10 minutes'.

    - Smallest Period:

        The minimal period to scan for, this is the higher (in frequency) end of the spectrum. A warning will be given during processing if the chosen value deceeds the Nyquist limit (2 times the sampling interval).

    - Biggest period:

        The maximal period to scan for, this is the lower (in frequency) end of the spectrum. The inbuild Sinc filter will remove any periods larger than this form the data. Due to the 'roll off' of the filter, this value should be chosen generously. A warning will be given during processing if the chosen value exceeds the length of the time series.

    - Number of periods to scan for:

        This is the the number of convolutions computed per pixel.

        Spectral resolution =  ( biggest period - smallest period ) / number of periods



    ]]></help>
</tool>
