Metadata-Version: 2.1
Name: editor
Version: 1.0.1
Summary: Open the default text editor
Home-page: https://github.com/rec/editor
Author: Tom Ritchford
Author-email: tom@swirly.com
License: MIT
Keywords: testing,modules
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Utilities
Requires-Dist: xmod

ðŸ–‹ editor - open a text editor, user edits, return results  ðŸ–‹
------------------------------------------------------------------

``editor`` opens an editor onto an existing file, a new file, or a tempfile,
lets the user edit text, and returns the results.

EXAMPLE
========

Using a temporary file
~~~~~~~~~~~~~~~~~~~~~~~~~

If no filename is provided, a temporary file gets edited, and its
contents returned.

.. code-block:: python

    import editor

    MESSAGE = 'Insert comments below this line\n\n'
    comments = editor(MESSAGE)
    # Pops up the default editor with a tempfile, containing MESSAGE

EXAMPLE
=========

Using a named file
~~~~~~~~~~~~~~~~~~~~

If a filename is provided, then it gets edited!

.. code-block:: python

    import os

    FILE = 'file.txt'
    assert not os.path.exists(FILE)

    comments = editor(MESSAGE, filename=FILE)
    # Pops up an editor for new FILE containing MESSAGE, user edits

    assert os.path.exists(FILE)

    # You can edit an existing file too, and select your own editor.
    # By default, it uses the editor from the environment variable EDITOR

    comments2 = editor(filename=FILE, editor='emacs')

API
===

``editor(text=None, filename=None, editor=None, shell=False)``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

(`editor.py, 67-122 <https://github.com/rec/editor/blob/master/editor.py#L67-L122>`_)

Open a text editor, block while the user edits, then return the results

ARGUMENTS
  text
    If ``text`` is not None, it is written to the file before the editor
    is opened.

  filename
    If ``filename`` is None, the name of the file to edit.  If None, a
    temporary file is used.

  editor
    The path to an editor to call.  If None, use editor.default_editor()
    If None, use editor.default_editor().

    ``editor`` can either be a string, or a list or tuple of strings.
    Depending on the setting of ``shell=``, it will be converted into the
    right type using shlex.split or ``shlex.join``.

  shell
    Passed to subprocess.call

``editor.default_editor()``
~~~~~~~~~~~~~~~~~~~~~~~~~~~

(`editor.py, 124-135 <https://github.com/rec/editor/blob/master/editor.py#L124-L135>`_)

Return the default text editor.

The default text editor is the contents of the environment variable EDITOR,
it it's non-empty, otherwise if the platform is Windows, it's 'notepad',
otherwise 'vim'.

(automatically generated by `doks <https://github.com/rec/doks/>`_ on 2020-11-16T17:19:14.821807)


